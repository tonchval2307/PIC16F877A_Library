

Microchip Technology PIC LITE Macro Assembler V2.00 build -1524193055 
                                                                                               Fri Nov 30 19:02:31 2018

Microchip Technology Omniscient Code Generator v2.00 (Free mode) build 20180527130849
     1  0000                     
      + 0000                     
     2                           ; Version 2.00
     3                           ; Generated 27/05/2018 GMT
     4                           
     5                           ; 
     6                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
     7                           ; All rights reserved.
     8                           ; 
     9                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
                                 ip").
    10                           ; 
    11                           ; Redistribution and use in source and binary forms, with or without modification, are
    12                           ; permitted provided that the following conditions are met:
    13                           ; 
    14                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
                                 t of
    15                           ;        conditions and the following disclaimer.
    16                           ; 
    17                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
                                 list
    18                           ;        of conditions and the following disclaimer in the documentation and/or other
    19                           ;        materials provided with the distribution.
    20                           ; 
    21                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
                                 is
    22                           ;        software without specific prior written permission.
    23                           ; 
    24                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,

    25                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
                                 OR
    26                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
                                 T,
    27                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
                                 
    28                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
                                 
    29                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
                                 RICT
    30                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
                                 SE OF
    31                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    32                           ; 
    33                           
    34                           
    35                           ; 
    36                           ; Code-generator required, PIC16F877 Definitions
    37                           ; 
    38  0004                     fsr0 equ 04h
    39  0004                     indf equ 00h
    40  0000                     indf0 equ 00h
    41  0000                     pc equ 02h
    42  0002                     pcl equ 02h
    43  0002                     pclath equ 0Ah
    44  000A                     status equ 03h
    45  0003                     
     2                           opt pagewidth 120
     3  0000                     byte0	macro	val
     4                           	(getbyte(val,0))
     5                           endm
     6  0000                     byte1	macro	val
     7                           	(getbyte(val,1))
     8                           endm
     9  0000                     byte2	macro	val
    10                           	(getbyte(val,2))
    11                           endm
    12  0000                     byte3	macro	val
    13                           	(getbyte(val,3))
    14                           endm
    15  0000                     byte4	macro	val
    16                           	(getbyte(val,4))
    17                           endm
    18  0000                     byte5	macro	val
    19                           	(getbyte(val,5))
    20                           endm
    21  0000                     byte6	macro	val
    22                           	(getbyte(val,6))
    23                           endm
    24  0000                     byte7	macro	val
    25                           	(getbyte(val,7))
    26                           endm
    27  0000                     getword	macro	val,pos
    28                           	(((val) >> (8 * pos)) and 0xffff)
    29                           endm
    30  0000                     word0	macro	val
    31                           	(getword(val,0))
    32                           endm
    33  0000                     word1	macro	val
    34                           	(getword(val,2))
    35                           endm
    36  0000                     word2	macro	val
    37                           	(getword(val,4))
    38                           endm
    39  0000                     word3	macro	val
    40                           	(getword(val,6))
    41                           endm
    42  0000                     gettword	macro	val,pos
    43                           	(((val) >> (8 * pos)) and 0xffffff)
    44                           endm
    45  0000                     tword0	macro	val
    46                           	(gettword(val,0))
    47                           endm
    48  0000                     tword1	macro	val
    49                           	(gettword(val,3))
    50                           endm
    51  0000                     tword2	macro	val
    52                           	(gettword(val,6))
    53                           endm
    54  0000                     getdword	macro	val,pos
    55                           	(((val) >> (8 * pos)) and 0xffffffff)
    56                           endm
    57  0000                     dword0	macro	val
    58                           	(getdword(val,0))
    59                           endm
    60  0000                     dword1	macro	val
    61                           	(getdword(val,4))
    62                           endm
    63  0000                     clrc	macro
    64                           	bcf	3,0
    65                           	endm
    66  0000                     clrz	macro
    67                           	bcf	3,2
    68                           	endm
    69  0000                     setc	macro
    70                           	bsf	3,0
    71                           	endm
    72  0000                     setz	macro
    73                           	bsf	3,2
    74                           	endm
    75  0000                     skipc	macro
    76                           	btfss	3,0
    77                           	endm
    78  0000                     skipz	macro
    79                           	btfss	3,2
    80                           	endm
    81  0000                     skipnc	macro
    82                           	btfsc	3,0
    83                           	endm
    84  0000                     skipnz	macro
    85                           	btfsc	3,2
    86                           	endm
    87  0000                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877.h"
    88                           INDF equ 00h ;# 
    89  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877.h"
    90                           TMR0 equ 01h ;# 
    91  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877.h"
    92                           PCL equ 02h ;# 
    93  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877.h"
    94                           STATUS equ 03h ;# 
    95  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877.h"
    96                           FSR equ 04h ;# 
    97  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877.h"
    98                           PORTA equ 05h ;# 
    99  0005                     # 218 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877.h"
   100                           PORTB equ 06h ;# 
   101  0006                     # 280 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877.h"
   102                           PORTC equ 07h ;# 
   103  0007                     # 342 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877.h"
   104                           PORTD equ 08h ;# 
   105  0008                     # 404 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877.h"
   106                           PORTE equ 09h ;# 
   107  0009                     # 436 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877.h"
   108                           PCLATH equ 0Ah ;# 
   109  000A                     # 456 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877.h"
   110                           INTCON equ 0Bh ;# 
   111  000B                     # 534 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877.h"
   112                           PIR1 equ 0Ch ;# 
   113  000C                     # 596 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877.h"
   114                           PIR2 equ 0Dh ;# 
   115  000D                     # 629 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877.h"
   116                           TMR1 equ 0Eh ;# 
   117  000E                     # 636 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877.h"
   118                           TMR1L equ 0Eh ;# 
   119  000E                     # 643 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877.h"
   120                           TMR1H equ 0Fh ;# 
   121  000F                     # 650 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877.h"
   122                           T1CON equ 010h ;# 
   123  0010                     # 727 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877.h"
   124                           TMR2 equ 011h ;# 
   125  0011                     # 734 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877.h"
   126                           T2CON equ 012h ;# 
   127  0012                     # 805 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877.h"
   128                           SSPBUF equ 013h ;# 
   129  0013                     # 812 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877.h"
   130                           SSPCON equ 014h ;# 
   131  0014                     # 882 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877.h"
   132                           CCPR1 equ 015h ;# 
   133  0015                     # 889 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877.h"
   134                           CCPR1L equ 015h ;# 
   135  0015                     # 896 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877.h"
   136                           CCPR1H equ 016h ;# 
   137  0016                     # 903 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877.h"
   138                           CCP1CON equ 017h ;# 
   139  0017                     # 961 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877.h"
   140                           RCSTA equ 018h ;# 
   141  0018                     # 1056 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877.h"
   142                           TXREG equ 019h ;# 
   143  0019                     # 1063 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877.h"
   144                           RCREG equ 01Ah ;# 
   145  001A                     # 1070 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877.h"
   146                           CCPR2 equ 01Bh ;# 
   147  001B                     # 1077 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877.h"
   148                           CCPR2L equ 01Bh ;# 
   149  001B                     # 1084 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877.h"
   150                           CCPR2H equ 01Ch ;# 
   151  001C                     # 1091 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877.h"
   152                           CCP2CON equ 01Dh ;# 
   153  001D                     # 1149 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877.h"
   154                           ADRESH equ 01Eh ;# 
   155  001E                     # 1156 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877.h"
   156                           ADCON0 equ 01Fh ;# 
   157  001F                     # 1252 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877.h"
   158                           OPTION_REG equ 081h ;# 
   159  0081                     # 1322 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877.h"
   160                           TRISA equ 085h ;# 
   161  0085                     # 1372 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877.h"
   162                           TRISB equ 086h ;# 
   163  0086                     # 1434 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877.h"
   164                           TRISC equ 087h ;# 
   165  0087                     # 1496 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877.h"
   166                           TRISD equ 088h ;# 
   167  0088                     # 1558 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877.h"
   168                           TRISE equ 089h ;# 
   169  0089                     # 1615 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877.h"
   170                           PIE1 equ 08Ch ;# 
   171  008C                     # 1677 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877.h"
   172                           PIE2 equ 08Dh ;# 
   173  008D                     # 1710 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877.h"
   174                           PCON equ 08Eh ;# 
   175  008E                     # 1744 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877.h"
   176                           SSPCON2 equ 091h ;# 
   177  0091                     # 1806 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877.h"
   178                           PR2 equ 092h ;# 
   179  0092                     # 1813 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877.h"
   180                           SSPADD equ 093h ;# 
   181  0093                     # 1820 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877.h"
   182                           SSPSTAT equ 094h ;# 
   183  0094                     # 1989 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877.h"
   184                           TXSTA equ 098h ;# 
   185  0098                     # 2070 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877.h"
   186                           SPBRG equ 099h ;# 
   187  0099                     # 2077 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877.h"
   188                           ADRESL equ 09Eh ;# 
   189  009E                     # 2084 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877.h"
   190                           ADCON1 equ 09Fh ;# 
   191  009F                     # 2137 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877.h"
   192                           EEDATA equ 010Ch ;# 
   193  010C                     # 2144 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877.h"
   194                           EEADR equ 010Dh ;# 
   195  010D                     # 2151 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877.h"
   196                           EEDATH equ 010Eh ;# 
   197  010E                     # 2158 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877.h"
   198                           EEADRH equ 010Fh ;# 
   199  010F                     # 2165 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877.h"
   200                           EECON1 equ 018Ch ;# 
   201  018C                     # 2210 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877.h"
   202                           EECON2 equ 018Dh ;# 
   203  018D                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877.h"
   204                           INDF equ 00h ;# 
   205  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877.h"
   206                           TMR0 equ 01h ;# 
   207  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877.h"
   208                           PCL equ 02h ;# 
   209  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877.h"
   210                           STATUS equ 03h ;# 
   211  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877.h"
   212                           FSR equ 04h ;# 
   213  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877.h"
   214                           PORTA equ 05h ;# 
   215  0005                     # 218 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877.h"
   216                           PORTB equ 06h ;# 
   217  0006                     # 280 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877.h"
   218                           PORTC equ 07h ;# 
   219  0007                     # 342 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877.h"
   220                           PORTD equ 08h ;# 
   221  0008                     # 404 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877.h"
   222                           PORTE equ 09h ;# 
   223  0009                     # 436 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877.h"
   224                           PCLATH equ 0Ah ;# 
   225  000A                     # 456 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877.h"
   226                           INTCON equ 0Bh ;# 
   227  000B                     # 534 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877.h"
   228                           PIR1 equ 0Ch ;# 
   229  000C                     # 596 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877.h"
   230                           PIR2 equ 0Dh ;# 
   231  000D                     # 629 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877.h"
   232                           TMR1 equ 0Eh ;# 
   233  000E                     # 636 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877.h"
   234                           TMR1L equ 0Eh ;# 
   235  000E                     # 643 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877.h"
   236                           TMR1H equ 0Fh ;# 
   237  000F                     # 650 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877.h"
   238                           T1CON equ 010h ;# 
   239  0010                     # 727 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877.h"
   240                           TMR2 equ 011h ;# 
   241  0011                     # 734 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877.h"
   242                           T2CON equ 012h ;# 
   243  0012                     # 805 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877.h"
   244                           SSPBUF equ 013h ;# 
   245  0013                     # 812 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877.h"
   246                           SSPCON equ 014h ;# 
   247  0014                     # 882 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877.h"
   248                           CCPR1 equ 015h ;# 
   249  0015                     # 889 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877.h"
   250                           CCPR1L equ 015h ;# 
   251  0015                     # 896 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877.h"
   252                           CCPR1H equ 016h ;# 
   253  0016                     # 903 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877.h"
   254                           CCP1CON equ 017h ;# 
   255  0017                     # 961 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877.h"
   256                           RCSTA equ 018h ;# 
   257  0018                     # 1056 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877.h"
   258                           TXREG equ 019h ;# 
   259  0019                     # 1063 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877.h"
   260                           RCREG equ 01Ah ;# 
   261  001A                     # 1070 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877.h"
   262                           CCPR2 equ 01Bh ;# 
   263  001B                     # 1077 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877.h"
   264                           CCPR2L equ 01Bh ;# 
   265  001B                     # 1084 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877.h"
   266                           CCPR2H equ 01Ch ;# 
   267  001C                     # 1091 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877.h"
   268                           CCP2CON equ 01Dh ;# 
   269  001D                     # 1149 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877.h"
   270                           ADRESH equ 01Eh ;# 
   271  001E                     # 1156 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877.h"
   272                           ADCON0 equ 01Fh ;# 
   273  001F                     # 1252 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877.h"
   274                           OPTION_REG equ 081h ;# 
   275  0081                     # 1322 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877.h"
   276                           TRISA equ 085h ;# 
   277  0085                     # 1372 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877.h"
   278                           TRISB equ 086h ;# 
   279  0086                     # 1434 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877.h"
   280                           TRISC equ 087h ;# 
   281  0087                     # 1496 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877.h"
   282                           TRISD equ 088h ;# 
   283  0088                     # 1558 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877.h"
   284                           TRISE equ 089h ;# 
   285  0089                     # 1615 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877.h"
   286                           PIE1 equ 08Ch ;# 
   287  008C                     # 1677 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877.h"
   288                           PIE2 equ 08Dh ;# 
   289  008D                     # 1710 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877.h"
   290                           PCON equ 08Eh ;# 
   291  008E                     # 1744 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877.h"
   292                           SSPCON2 equ 091h ;# 
   293  0091                     # 1806 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877.h"
   294                           PR2 equ 092h ;# 
   295  0092                     # 1813 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877.h"
   296                           SSPADD equ 093h ;# 
   297  0093                     # 1820 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877.h"
   298                           SSPSTAT equ 094h ;# 
   299  0094                     # 1989 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877.h"
   300                           TXSTA equ 098h ;# 
   301  0098                     # 2070 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877.h"
   302                           SPBRG equ 099h ;# 
   303  0099                     # 2077 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877.h"
   304                           ADRESL equ 09Eh ;# 
   305  009E                     # 2084 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877.h"
   306                           ADCON1 equ 09Fh ;# 
   307  009F                     # 2137 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877.h"
   308                           EEDATA equ 010Ch ;# 
   309  010C                     # 2144 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877.h"
   310                           EEADR equ 010Dh ;# 
   311  010D                     # 2151 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877.h"
   312                           EEDATH equ 010Eh ;# 
   313  010E                     # 2158 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877.h"
   314                           EEADRH equ 010Fh ;# 
   315  010F                     # 2165 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877.h"
   316                           EECON1 equ 018Ch ;# 
   317  018C                     # 2210 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877.h"
   318                           EECON2 equ 018Dh ;# 
   319  018D                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877.h"
   320                           INDF equ 00h ;# 
   321  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877.h"
   322                           TMR0 equ 01h ;# 
   323  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877.h"
   324                           PCL equ 02h ;# 
   325  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877.h"
   326                           STATUS equ 03h ;# 
   327  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877.h"
   328                           FSR equ 04h ;# 
   329  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877.h"
   330                           PORTA equ 05h ;# 
   331  0005                     # 218 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877.h"
   332                           PORTB equ 06h ;# 
   333  0006                     # 280 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877.h"
   334                           PORTC equ 07h ;# 
   335  0007                     # 342 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877.h"
   336                           PORTD equ 08h ;# 
   337  0008                     # 404 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877.h"
   338                           PORTE equ 09h ;# 
   339  0009                     # 436 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877.h"
   340                           PCLATH equ 0Ah ;# 
   341  000A                     # 456 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877.h"
   342                           INTCON equ 0Bh ;# 
   343  000B                     # 534 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877.h"
   344                           PIR1 equ 0Ch ;# 
   345  000C                     # 596 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877.h"
   346                           PIR2 equ 0Dh ;# 
   347  000D                     # 629 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877.h"
   348                           TMR1 equ 0Eh ;# 
   349  000E                     # 636 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877.h"
   350                           TMR1L equ 0Eh ;# 
   351  000E                     # 643 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877.h"
   352                           TMR1H equ 0Fh ;# 
   353  000F                     # 650 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877.h"
   354                           T1CON equ 010h ;# 
   355  0010                     # 727 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877.h"
   356                           TMR2 equ 011h ;# 
   357  0011                     # 734 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877.h"
   358                           T2CON equ 012h ;# 
   359  0012                     # 805 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877.h"
   360                           SSPBUF equ 013h ;# 
   361  0013                     # 812 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877.h"
   362                           SSPCON equ 014h ;# 
   363  0014                     # 882 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877.h"
   364                           CCPR1 equ 015h ;# 
   365  0015                     # 889 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877.h"
   366                           CCPR1L equ 015h ;# 
   367  0015                     # 896 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877.h"
   368                           CCPR1H equ 016h ;# 
   369  0016                     # 903 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877.h"
   370                           CCP1CON equ 017h ;# 
   371  0017                     # 961 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877.h"
   372                           RCSTA equ 018h ;# 
   373  0018                     # 1056 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877.h"
   374                           TXREG equ 019h ;# 
   375  0019                     # 1063 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877.h"
   376                           RCREG equ 01Ah ;# 
   377  001A                     # 1070 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877.h"
   378                           CCPR2 equ 01Bh ;# 
   379  001B                     # 1077 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877.h"
   380                           CCPR2L equ 01Bh ;# 
   381  001B                     # 1084 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877.h"
   382                           CCPR2H equ 01Ch ;# 
   383  001C                     # 1091 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877.h"
   384                           CCP2CON equ 01Dh ;# 
   385  001D                     # 1149 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877.h"
   386                           ADRESH equ 01Eh ;# 
   387  001E                     # 1156 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877.h"
   388                           ADCON0 equ 01Fh ;# 
   389  001F                     # 1252 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877.h"
   390                           OPTION_REG equ 081h ;# 
   391  0081                     # 1322 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877.h"
   392                           TRISA equ 085h ;# 
   393  0085                     # 1372 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877.h"
   394                           TRISB equ 086h ;# 
   395  0086                     # 1434 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877.h"
   396                           TRISC equ 087h ;# 
   397  0087                     # 1496 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877.h"
   398                           TRISD equ 088h ;# 
   399  0088                     # 1558 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877.h"
   400                           TRISE equ 089h ;# 
   401  0089                     # 1615 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877.h"
   402                           PIE1 equ 08Ch ;# 
   403  008C                     # 1677 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877.h"
   404                           PIE2 equ 08Dh ;# 
   405  008D                     # 1710 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877.h"
   406                           PCON equ 08Eh ;# 
   407  008E                     # 1744 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877.h"
   408                           SSPCON2 equ 091h ;# 
   409  0091                     # 1806 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877.h"
   410                           PR2 equ 092h ;# 
   411  0092                     # 1813 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877.h"
   412                           SSPADD equ 093h ;# 
   413  0093                     # 1820 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877.h"
   414                           SSPSTAT equ 094h ;# 
   415  0094                     # 1989 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877.h"
   416                           TXSTA equ 098h ;# 
   417  0098                     # 2070 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877.h"
   418                           SPBRG equ 099h ;# 
   419  0099                     # 2077 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877.h"
   420                           ADRESL equ 09Eh ;# 
   421  009E                     # 2084 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877.h"
   422                           ADCON1 equ 09Fh ;# 
   423  009F                     # 2137 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877.h"
   424                           EEDATA equ 010Ch ;# 
   425  010C                     # 2144 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877.h"
   426                           EEADR equ 010Dh ;# 
   427  010D                     # 2151 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877.h"
   428                           EEDATH equ 010Eh ;# 
   429  010E                     # 2158 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877.h"
   430                           EEADRH equ 010Fh ;# 
   431  010F                     # 2165 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877.h"
   432                           EECON1 equ 018Ch ;# 
   433  018C                     # 2210 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877.h"
   434                           EECON2 equ 018Dh ;# 
   435  018D                     	FNCALL	_main,_configuracionInicial
   436                           	FNCALL	_main,_loop
   437                           	FNCALL	_main,_setup
   438                           	FNCALL	_setup,_SerialBegin
   439                           	FNCALL	_setup,_pinMode
   440                           	FNCALL	_SerialBegin,___aldiv
   441                           	FNCALL	_loop,_SerialAvailable
   442                           	FNCALL	_loop,_SerialWrite
   443                           	FNCALL	_loop,_analogRead
   444                           	FNCALL	_loop,_cocienteEntero
   445                           	FNCALL	_loop,_delay
   446                           	FNCALL	_loop,_residuo
   447                           	FNCALL	_configuracionInicial,_PWM1_Init
   448                           	FNCALL	_configuracionInicial,_PWM1_Start
   449                           	FNCALL	_configuracionInicial,_PWM2_Init
   450                           	FNCALL	_configuracionInicial,_PWM2_Start
   451                           	FNCALL	_PWM2_Init,___aldiv
   452                           	FNCALL	_PWM1_Init,___aldiv
   453                           	FNROOT	_main
   454                           	global	_buffer
   455                           psect	idataCOMMON,class=CODE,space=0,delta=2,noexec
   456                           global __pidataCOMMON
   457                           __pidataCOMMON:
   458  0302                     	file	"application.c"
   459                           	line	7
   460                           
   461                           ;initializer for _buffer
   462                           	retlw	02h
   463  0302  3402               psect	idataBANK0,class=CODE,space=0,delta=2,noexec
   464                           global __pidataBANK0
   465                           __pidataBANK0:
   466  0301                     	line	10
   467                           
   468                           ;initializer for _PWMTerminal
   469                           	retlw	04h
   470  0301  3404               	global	_vectorOut
   471                           	global	_ADC
   472                           	global	_ADCLSB
   473                           	global	_ADCMSB
   474                           	global	_freq
   475                           psect	nvBANK0,class=BANK0,space=1,noexec
   476                           global __pnvBANK0
   477                           __pnvBANK0:
   478  003C                     _freq:
   479  003C                            ds      4
   480  003C                     
   481                           	global	_CCPR2L
   482                           _CCPR2L	set	0x1B
   483  001B                     	global	_CCPR1L
   484                           _CCPR1L	set	0x15
   485  0015                     	global	_RCREG
   486                           _RCREG	set	0x1A
   487  001A                     	global	_TXREG
   488                           _TXREG	set	0x19
   489  0019                     	global	_ADRESH
   490                           _ADRESH	set	0x1E
   491  001E                     	global	_ADCON0bits
   492                           _ADCON0bits	set	0x1F
   493  001F                     	global	_PORTBbits
   494                           _PORTBbits	set	0x6
   495  0006                     	global	_PORTDbits
   496                           _PORTDbits	set	0x8
   497  0008                     	global	_PORTCbits
   498                           _PORTCbits	set	0x7
   499  0007                     	global	_PORTE
   500                           _PORTE	set	0x9
   501  0009                     	global	_ADCON0
   502                           _ADCON0	set	0x1F
   503  001F                     	global	_CCP2M2
   504                           _CCP2M2	set	0xEA
   505  00EA                     	global	_CCP2M3
   506                           _CCP2M3	set	0xEB
   507  00EB                     	global	_TMR2ON
   508                           _TMR2ON	set	0x92
   509  0092                     	global	_T2CKPS1
   510                           _T2CKPS1	set	0x91
   511  0091                     	global	_T2CKPS0
   512                           _T2CKPS0	set	0x90
   513  0090                     	global	_CCP1M2
   514                           _CCP1M2	set	0xBA
   515  00BA                     	global	_CCP1M3
   516                           _CCP1M3	set	0xBB
   517  00BB                     	global	_CCP2Y
   518                           _CCP2Y	set	0xEC
   519  00EC                     	global	_CCP2X
   520                           _CCP2X	set	0xED
   521  00ED                     	global	_CCP1Y
   522                           _CCP1Y	set	0xBC
   523  00BC                     	global	_CCP1X
   524                           _CCP1X	set	0xBD
   525  00BD                     	global	_RCIF
   526                           _RCIF	set	0x65
   527  0065                     	global	_CREN
   528                           _CREN	set	0xC4
   529  00C4                     	global	_SPEN
   530                           _SPEN	set	0xC7
   531  00C7                     	global	_PR2
   532                           _PR2	set	0x92
   533  0092                     	global	_SPBRG
   534                           _SPBRG	set	0x99
   535  0099                     	global	_ADRESL
   536                           _ADRESL	set	0x9E
   537  009E                     	global	_TRISBbits
   538                           _TRISBbits	set	0x86
   539  0086                     	global	_TRISDbits
   540                           _TRISDbits	set	0x88
   541  0088                     	global	_TRISCbits
   542                           _TRISCbits	set	0x87
   543  0087                     	global	_TRISE
   544                           _TRISE	set	0x89
   545  0089                     	global	_ADCON1
   546                           _ADCON1	set	0x9F
   547  009F                     	global	_TRISC1
   548                           _TRISC1	set	0x439
   549  0439                     	global	_TRISC2
   550                           _TRISC2	set	0x43A
   551  043A                     	global	_TRMT
   552                           _TRMT	set	0x4C1
   553  04C1                     	global	_TXEN
   554                           _TXEN	set	0x4C5
   555  04C5                     	global	_TRISC6
   556                           _TRISC6	set	0x43E
   557  043E                     	global	_TRISC7
   558                           _TRISC7	set	0x43F
   559  043F                     	global	_SYNC
   560                           _SYNC	set	0x4C4
   561  04C4                     	global	_BRGH
   562                           _BRGH	set	0x4C2
   563  04C2                     ; #config settings
   564                           global __CFG_FOSC$HS
   565                           __CFG_FOSC$HS equ 0x0
   566  0000                     global __CFG_WDTE$OFF
   567                           __CFG_WDTE$OFF equ 0x0
   568  0000                     global __CFG_PWRTE$OFF
   569                           __CFG_PWRTE$OFF equ 0x0
   570  0000                     global __CFG_CP$OFF
   571                           __CFG_CP$OFF equ 0x0
   572  0000                     global __CFG_BOREN$OFF
   573                           __CFG_BOREN$OFF equ 0x0
   574  0000                     global __CFG_LVP$OFF
   575                           __CFG_LVP$OFF equ 0x0
   576  0000                     global __CFG_CPD$OFF
   577                           __CFG_CPD$OFF equ 0x0
   578  0000                     global __CFG_WRT$ON
   579                           __CFG_WRT$ON equ 0x0
   580  0000                     	file	"C:\Users\DEYANE~1\AppData\Local\Temp\s1ns."
   581                           	line	#
   582                           psect cinit,class=CODE,delta=2
   583                           global start_initialization
   584                           start_initialization:
   585  07E7                     
   586                           global __initialization
   587                           __initialization:
   588  07E7                     psect	dataCOMMON,class=COMMON,space=1,noexec
   589                           global __pdataCOMMON
   590                           __pdataCOMMON:
   591  007D                     	file	"application.c"
   592                           	line	7
   593                           _buffer:
   594  007D                            ds      1
   595  007D                     
   596                           psect	bssBANK0,class=BANK0,space=1,noexec
   597                           global __pbssBANK0
   598                           __pbssBANK0:
   599  0020                     _vectorIn:
   600  0020                            ds      3
   601  0020                     
   602                           _PWM:
   603  0023                            ds      2
   604  0023                     
   605                           _vectorOut:
   606  0025                            ds      2
   607  0025                     
   608                           _ADC:
   609  0027                            ds      2
   610  0027                     
   611                           _PWMLSB:
   612  0029                            ds      1
   613  0029                     
   614                           _PWMMSB:
   615  002A                            ds      1
   616  002A                     
   617                           _ADCLSB:
   618  002B                            ds      1
   619  002B                     
   620                           _ADCMSB:
   621  002C                            ds      1
   622  002C                     
   623                           _A0:
   624  002D                            ds      1
   625  002D                     
   626                           _Terminal:
   627  002E                            ds      1
   628  002E                     
   629                           _Operator:
   630  002F                            ds      1
   631  002F                     
   632                           psect	dataBANK0,class=BANK0,space=1,noexec
   633                           global __pdataBANK0
   634                           __pdataBANK0:
   635  0040                     	file	"application.c"
   636                           	line	10
   637                           _PWMTerminal:
   638  0040                            ds      1
   639  0040                     
   640                           	file	"C:\Users\DEYANE~1\AppData\Local\Temp\s1ns."
   641                           	line	#
   642                           ; Initialize objects allocated to BANK0
   643                           	global __pidataBANK0
   644                           psect cinit,class=CODE,delta=2,merge=1
   645                           	fcall	__pidataBANK0+0		;fetch initializer
   646  07E7  120A  118A  2301  120A  118A  	movwf	__pdataBANK0+0&07fh		
   647  07EC  00C0               ; Initialize objects allocated to COMMON
   648                           	global __pidataCOMMON
   649                           psect cinit,class=CODE,delta=2,merge=1
   650                           	fcall	__pidataCOMMON+0		;fetch initializer
   651  07ED  120A  118A  2302  120A  118A  	movwf	__pdataCOMMON+0&07fh		
   652  07F2  00FD               	line	#
   653                           psect clrtext,class=CODE,delta=2
   654                           global clear_ram0
   655                           ;	Called with FSR containing the base address, and
   656                           ;	W with the last address+1
   657                           clear_ram0:
   658  030A                     	clrwdt			;clear the watchdog before getting into this loop
   659  030A  0064               clrloop0:
   660  030B                     	clrf	indf		;clear RAM location pointed to by FSR
   661  030B  0180               	incf	fsr,f		;increment pointer
   662  030C  0A84               	xorwf	fsr,w		;XOR with final address
   663  030D  0604               	btfsc	status,2	;have we reached the end yet?
   664  030E  1903               	retlw	0		;all done for this memory range, return
   665  030F  3400               	xorwf	fsr,w		;XOR again to restore value
   666  0310  0604               	goto	clrloop0		;do the next byte
   667  0311  2B0B               
   668                           ; Clear objects allocated to BANK0
   669                           psect cinit,class=CODE,delta=2,merge=1
   670                           	bcf	status, 7	;select IRP bank0
   671  07F3  1383               	movlw	low(__pbssBANK0)
   672  07F4  3020               	movwf	fsr
   673  07F5  0084               	movlw	low((__pbssBANK0)+010h)
   674  07F6  3030               	fcall	clear_ram0
   675  07F7  120A  118A  230A  120A  118A  psect cinit,class=CODE,delta=2,merge=1
   676                           global end_of_initialization,__end_of__initialization
   677                           
   678                           ;End of C runtime variable initialization code
   679                           
   680                           end_of_initialization:
   681  07FC                     __end_of__initialization:
   682  07FC                     clrf status
   683  07FC  0183               ljmp _main	;jump to C main() function
   684  07FD  120A  118A  2B36   psect	cstackCOMMON,class=COMMON,space=1,noexec
   685                           global __pcstackCOMMON
   686                           __pcstackCOMMON:
   687  0070                     ?_pinMode:	; 1 bytes @ 0x0
   688  0070                     ?_SerialAvailable:	; 1 bytes @ 0x0
   689  0070                     ??_SerialAvailable:	; 1 bytes @ 0x0
   690  0070                     ?_cocienteEntero:	; 1 bytes @ 0x0
   691  0070                     ?_residuo:	; 1 bytes @ 0x0
   692  0070                     ?_SerialWrite:	; 1 bytes @ 0x0
   693  0070                     ??_SerialWrite:	; 1 bytes @ 0x0
   694  0070                     ?_delay:	; 1 bytes @ 0x0
   695  0070                     ?_configuracionInicial:	; 1 bytes @ 0x0
   696  0070                     ?_PWM1_Start:	; 1 bytes @ 0x0
   697  0070                     ??_PWM1_Start:	; 1 bytes @ 0x0
   698  0070                     ?_PWM2_Start:	; 1 bytes @ 0x0
   699  0070                     ??_PWM2_Start:	; 1 bytes @ 0x0
   700  0070                     ?_setup:	; 1 bytes @ 0x0
   701  0070                     ?_loop:	; 1 bytes @ 0x0
   702  0070                     	global	?_analogRead
   703                           ?_analogRead:	; 2 bytes @ 0x0
   704  0070                     ?_main:	; 2 bytes @ 0x0
   705  0070                     	global	?___aldiv
   706                           ?___aldiv:	; 4 bytes @ 0x0
   707  0070                     	global	pinMode@mode
   708                           pinMode@mode:	; 1 bytes @ 0x0
   709  0070                     	global	SerialWrite@data
   710                           SerialWrite@data:	; 1 bytes @ 0x0
   711  0070                     	global	residuo@numerator
   712                           residuo@numerator:	; 2 bytes @ 0x0
   713  0070                     	global	cocienteEntero@numerator
   714                           cocienteEntero@numerator:	; 2 bytes @ 0x0
   715  0070                     	global	delay@milis
   716                           delay@milis:	; 2 bytes @ 0x0
   717  0070                     	global	___aldiv@divisor
   718                           ___aldiv@divisor:	; 4 bytes @ 0x0
   719  0070                     	ds	1
   720  0070                     ??_pinMode:	; 1 bytes @ 0x1
   721  0071                     	ds	1
   722  0071                     ??_analogRead:	; 1 bytes @ 0x2
   723  0072                     ??_delay:	; 1 bytes @ 0x2
   724  0072                     	global	residuo@denominator
   725                           residuo@denominator:	; 2 bytes @ 0x2
   726  0072                     	global	cocienteEntero@denominator
   727                           cocienteEntero@denominator:	; 2 bytes @ 0x2
   728  0072                     	ds	1
   729  0072                     	global	pinMode@pin
   730                           pinMode@pin:	; 1 bytes @ 0x3
   731  0073                     	global	delay@j
   732                           delay@j:	; 2 bytes @ 0x3
   733  0073                     	ds	1
   734  0073                     ??_cocienteEntero:	; 1 bytes @ 0x4
   735  0074                     ??_residuo:	; 1 bytes @ 0x4
   736  0074                     	global	analogRead@channel
   737                           analogRead@channel:	; 1 bytes @ 0x4
   738  0074                     	global	residuo@temp1
   739                           residuo@temp1:	; 2 bytes @ 0x4
   740  0074                     	global	cocienteEntero@cont
   741                           cocienteEntero@cont:	; 2 bytes @ 0x4
   742  0074                     	global	___aldiv@dividend
   743                           ___aldiv@dividend:	; 4 bytes @ 0x4
   744  0074                     	ds	1
   745  0074                     	global	delay@i
   746                           delay@i:	; 2 bytes @ 0x5
   747  0075                     	ds	1
   748  0075                     	global	cocienteEntero@temp1
   749                           cocienteEntero@temp1:	; 2 bytes @ 0x6
   750  0076                     	ds	2
   751  0076                     ??_loop:	; 1 bytes @ 0x8
   752  0078                     ??___aldiv:	; 1 bytes @ 0x8
   753  0078                     	ds	1
   754  0078                     ??_SerialBegin:	; 1 bytes @ 0x9
   755  0079                     ??_PWM1_Init:	; 1 bytes @ 0x9
   756  0079                     ??_PWM2_Init:	; 1 bytes @ 0x9
   757  0079                     	global	loop@i
   758                           loop@i:	; 2 bytes @ 0x9
   759  0079                     	ds	4
   760  0079                     ??_configuracionInicial:	; 1 bytes @ 0xD
   761  007D                     ??_setup:	; 1 bytes @ 0xD
   762  007D                     ??_main:	; 1 bytes @ 0xD
   763  007D                     psect	cstackBANK0,class=BANK0,space=1,noexec
   764                           global __pcstackBANK0
   765                           __pcstackBANK0:
   766  0030                     	global	___aldiv@counter
   767                           ___aldiv@counter:	; 1 bytes @ 0x0
   768  0030                     	ds	1
   769  0030                     	global	___aldiv@sign
   770                           ___aldiv@sign:	; 1 bytes @ 0x1
   771  0031                     	ds	1
   772  0031                     	global	___aldiv@quotient
   773                           ___aldiv@quotient:	; 4 bytes @ 0x2
   774  0032                     	ds	4
   775  0032                     ?_SerialBegin:	; 1 bytes @ 0x6
   776  0036                     ?_PWM1_Init:	; 1 bytes @ 0x6
   777  0036                     ?_PWM2_Init:	; 1 bytes @ 0x6
   778  0036                     	global	SerialBegin@baudrate
   779                           SerialBegin@baudrate:	; 4 bytes @ 0x6
   780  0036                     	global	PWM1_Init@fre
   781                           PWM1_Init@fre:	; 4 bytes @ 0x6
   782  0036                     	global	PWM2_Init@fre
   783                           PWM2_Init@fre:	; 4 bytes @ 0x6
   784  0036                     	ds	4
   785  0036                     	global	SerialBegin@x
   786                           SerialBegin@x:	; 2 bytes @ 0xA
   787  003A                     	ds	2
   788  003A                     ;!
   789                           ;!Data Sizes:
   790                           ;!    Strings     0
   791                           ;!    Constant    0
   792                           ;!    Data        2
   793                           ;!    BSS         16
   794                           ;!    Persistent  4
   795                           ;!    Stack       0
   796                           ;!
   797                           ;!Auto Spaces:
   798                           ;!    Space          Size  Autos    Used
   799                           ;!    COMMON           14     13      14
   800                           ;!    BANK0            80     12      33
   801                           ;!    BANK1            80      0       0
   802                           ;!    BANK3            96      0       0
   803                           ;!    BANK2            96      0       0
   804                           
   805                           ;!
   806                           ;!Pointer List with Targets:
   807                           ;!
   808                           ;!    None.
   809                           
   810                           
   811                           ;!
   812                           ;!Critical Paths under _main in COMMON
   813                           ;!
   814                           ;!    _setup->_SerialBegin
   815                           ;!    _SerialBegin->___aldiv
   816                           ;!    _loop->_cocienteEntero
   817                           ;!    _configuracionInicial->_PWM1_Init
   818                           ;!    _configuracionInicial->_PWM2_Init
   819                           ;!    _PWM2_Init->___aldiv
   820                           ;!    _PWM1_Init->___aldiv
   821                           ;!
   822                           ;!Critical Paths under _main in BANK0
   823                           ;!
   824                           ;!    _setup->_SerialBegin
   825                           ;!    _SerialBegin->___aldiv
   826                           ;!    _configuracionInicial->_PWM1_Init
   827                           ;!    _configuracionInicial->_PWM2_Init
   828                           ;!    _PWM2_Init->___aldiv
   829                           ;!    _PWM1_Init->___aldiv
   830                           ;!
   831                           ;!Critical Paths under _main in BANK1
   832                           ;!
   833                           ;!    None.
   834                           ;!
   835                           ;!Critical Paths under _main in BANK3
   836                           ;!
   837                           ;!    None.
   838                           ;!
   839                           ;!Critical Paths under _main in BANK2
   840                           ;!
   841                           ;!    None.
   842                           
   843 ;;
   844 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   845 ;;
   846                           
   847                           ;!
   848                           ;!Call Graph Tables:
   849                           ;!
   850                           ;! ---------------------------------------------------------------------------------
   851                           ;! (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   852                           ;! ---------------------------------------------------------------------------------
   853                           ;! (0) _main                                                 0     0      0    5066
   854                           ;!               _configuracionInicial
   855                           ;!                               _loop
   856                           ;!                              _setup
   857                           ;! ---------------------------------------------------------------------------------
   858                           ;! (1) _setup                                                0     0      0    1874
   859                           ;!                        _SerialBegin
   860                           ;!                            _pinMode
   861                           ;! ---------------------------------------------------------------------------------
   862                           ;! (2) _pinMode                                              4     3      1     626
   863                           ;!                                              0 COMMON     4     3      1
   864                           ;! ---------------------------------------------------------------------------------
   865                           ;! (2) _SerialBegin                                         10     6      4    1248
   866                           ;!                                              9 COMMON     4     4      0
   867                           ;!                                              6 BANK0      6     2      4
   868                           ;!                            ___aldiv
   869                           ;! ---------------------------------------------------------------------------------
   870                           ;! (1) _loop                                                 3     3      0     832
   871                           ;!                                              8 COMMON     3     3      0
   872                           ;!                    _SerialAvailable
   873                           ;!                        _SerialWrite
   874                           ;!                         _analogRead
   875                           ;!                     _cocienteEntero
   876                           ;!                              _delay
   877                           ;!                            _residuo
   878                           ;! ---------------------------------------------------------------------------------
   879                           ;! (2) _residuo                                              6     2      4     264
   880                           ;!                                              0 COMMON     6     2      4
   881                           ;! ---------------------------------------------------------------------------------
   882                           ;! (2) _delay                                                7     5      2     212
   883                           ;!                                              0 COMMON     7     5      2
   884                           ;! ---------------------------------------------------------------------------------
   885                           ;! (2) _cocienteEntero                                       8     4      4     266
   886                           ;!                                              0 COMMON     8     4      4
   887                           ;! ---------------------------------------------------------------------------------
   888                           ;! (2) _analogRead                                           5     3      2      22
   889                           ;!                                              0 COMMON     5     3      2
   890                           ;! ---------------------------------------------------------------------------------
   891                           ;! (2) _SerialWrite                                          1     1      0      22
   892                           ;!                                              0 COMMON     1     1      0
   893                           ;! ---------------------------------------------------------------------------------
   894                           ;! (2) _SerialAvailable                                      0     0      0       0
   895                           ;! ---------------------------------------------------------------------------------
   896                           ;! (1) _configuracionInicial                                 0     0      0    2360
   897                           ;!                          _PWM1_Init
   898                           ;!                         _PWM1_Start
   899                           ;!                          _PWM2_Init
   900                           ;!                         _PWM2_Start
   901                           ;! ---------------------------------------------------------------------------------
   902                           ;! (2) _PWM2_Start                                           0     0      0       0
   903                           ;! ---------------------------------------------------------------------------------
   904                           ;! (2) _PWM2_Init                                            8     4      4    1180
   905                           ;!                                              9 COMMON     4     4      0
   906                           ;!                                              6 BANK0      4     0      4
   907                           ;!                            ___aldiv
   908                           ;! ---------------------------------------------------------------------------------
   909                           ;! (2) _PWM1_Start                                           0     0      0       0
   910                           ;! ---------------------------------------------------------------------------------
   911                           ;! (2) _PWM1_Init                                            8     4      4    1180
   912                           ;!                                              9 COMMON     4     4      0
   913                           ;!                                              6 BANK0      4     0      4
   914                           ;!                            ___aldiv
   915                           ;! ---------------------------------------------------------------------------------
   916                           ;! (3) ___aldiv                                             15     7      8    1060
   917                           ;!                                              0 COMMON     9     1      8
   918                           ;!                                              0 BANK0      6     6      0
   919                           ;! ---------------------------------------------------------------------------------
   920                           ;! Estimated maximum stack depth 3
   921                           ;! ---------------------------------------------------------------------------------
   922                           ;!
   923                           ;! Call Graph Graphs:
   924                           ;!
   925                           ;! _main (ROOT)
   926                           ;!   _configuracionInicial
   927                           ;!     _PWM1_Init
   928                           ;!       ___aldiv
   929                           ;!     _PWM1_Start
   930                           ;!     _PWM2_Init
   931                           ;!       ___aldiv
   932                           ;!     _PWM2_Start
   933                           ;!   _loop
   934                           ;!     _SerialAvailable
   935                           ;!     _SerialWrite
   936                           ;!     _analogRead
   937                           ;!     _cocienteEntero
   938                           ;!     _delay
   939                           ;!     _residuo
   940                           ;!   _setup
   941                           ;!     _SerialBegin
   942                           ;!       ___aldiv
   943                           ;!     _pinMode
   944                           ;!
   945                           
   946                           ;! Address spaces:
   947                           
   948                           ;!Name               Size   Autos  Total    Cost      Usage
   949                           ;!BANK3               60      0       0       9        0.0%
   950                           ;!BITBANK3            60      0       0       8        0.0%
   951                           ;!SFR3                 0      0       0       4        0.0%
   952                           ;!BITSFR3              0      0       0       4        0.0%
   953                           ;!BANK2               60      0       0      11        0.0%
   954                           ;!BITBANK2            60      0       0      10        0.0%
   955                           ;!SFR2                 0      0       0       5        0.0%
   956                           ;!BITSFR2              0      0       0       5        0.0%
   957                           ;!BANK1               50      0       0       7        0.0%
   958                           ;!BITBANK1            50      0       0       6        0.0%
   959                           ;!SFR1                 0      0       0       2        0.0%
   960                           ;!BITSFR1              0      0       0       2        0.0%
   961                           ;!BANK0               50      C      21       5       41.3%
   962                           ;!BITBANK0            50      0       0       4        0.0%
   963                           ;!SFR0                 0      0       0       1        0.0%
   964                           ;!BITSFR0              0      0       0       1        0.0%
   965                           ;!COMMON               E      D       E       1      100.0%
   966                           ;!BITCOMMON            E      0       0       0        0.0%
   967                           ;!CODE                 0      0       0       0        0.0%
   968                           ;!DATA                 0      0      2F      12        0.0%
   969                           ;!ABS                  0      0      2F       3        0.0%
   970                           ;!NULL                 0      0       0       0        0.0%
   971                           ;!STACK                0      0       0       2        0.0%
   972                           ;!EEDATA             100      0       0       0        0.0%
   973                           
   974                           	global	_main
   975                           
   976 ;; *************** function _main *****************
   977 ;; Defined at:
   978 ;;		line 7 in file "procedures.c"
   979 ;; Parameters:    Size  Location     Type
   980 ;;		None
   981 ;; Auto vars:     Size  Location     Type
   982 ;;		None
   983 ;; Return value:  Size  Location     Type
   984 ;;                  2  170[None  ] int 
   985 ;; Registers used:
   986 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   987 ;; Tracked objects:
   988 ;;		On entry : B00/0
   989 ;;		On exit  : 0/0
   990 ;;		Unchanged: 0/0
   991 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   992 ;;      Params:         0       0       0       0       0
   993 ;;      Locals:         0       0       0       0       0
   994 ;;      Temps:          0       0       0       0       0
   995 ;;      Totals:         0       0       0       0       0
   996 ;;Total ram usage:        0 bytes
   997 ;; Hardware stack levels required when called:    3
   998 ;; This function calls:
   999 ;;		_configuracionInicial
  1000 ;;		_loop
  1001 ;;		_setup
  1002 ;; This function is called by:
  1003 ;;		Startup code after reset
  1004 ;; This function uses a non-reentrant model
  1005 ;;
  1006                           psect	maintext,global,class=CODE,delta=2,split=1,group=0
  1007                           	file	"procedures.c"
  1008                           	line	7
  1009                           global __pmaintext
  1010                           __pmaintext:	;psect for function _main
  1011  0336                     psect	maintext
  1012                           	file	"procedures.c"
  1013                           	line	7
  1014                           	global	__size_of_main
  1015                           	__size_of_main	equ	__end_of_main-_main
  1016  0015                     	
  1017                           _main:	
  1018  0336                     ;incstack = 0
  1019                           	opt	stack 5
  1020                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1021                           	line	9
  1022                           	
  1023                           l1704:	
  1024  0336                     ;procedures.c: 9:     configuracionInicial();
  1025                           	fcall	_configuracionInicial
  1026  0336  120A  118A  241E  120A  118A  	line	10
  1027                           	
  1028                           l1706:	
  1029  033B                     ;procedures.c: 10:     setup();
  1030                           	fcall	_setup
  1031  033B  120A  118A  234B  120A  118A  	goto	l1708
  1032  0340  2B41               	line	11
  1033                           ;procedures.c: 11:     while(1)
  1034                           	
  1035                           l171:	
  1036  0341                     	line	13
  1037                           	
  1038                           l1708:	
  1039  0341                     ;procedures.c: 12:     {;procedures.c: 13:         loop();
  1040                           	fcall	_loop
  1041  0341  120A  118A  24B0  120A  118A  	goto	l1708
  1042  0346  2B41               	line	14
  1043                           ;procedures.c: 14:     }
  1044                           	
  1045                           l172:	
  1046  0347                     	goto	l1708
  1047  0347  2B41               	
  1048                           l173:	
  1049  0348                     	line	16
  1050                           ;procedures.c: 15:     return 0;;	Return value of _main is never used
  1051                           	
  1052                           l174:	
  1053  0348                     	global	start
  1054                           	ljmp	start
  1055  0348  120A  118A  2800   	opt stack 0
  1056                           GLOBAL	__end_of_main
  1057                           	__end_of_main:
  1058  034B                     	signat	_main,90
  1059                           	global	_setup
  1060                           
  1061 ;; *************** function _setup *****************
  1062 ;; Defined at:
  1063 ;;		line 19 in file "application.c"
  1064 ;; Parameters:    Size  Location     Type
  1065 ;;		None
  1066 ;; Auto vars:     Size  Location     Type
  1067 ;;		None
  1068 ;; Return value:  Size  Location     Type
  1069 ;;                  1    wreg      void 
  1070 ;; Registers used:
  1071 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1072 ;; Tracked objects:
  1073 ;;		On entry : 0/0
  1074 ;;		On exit  : 0/0
  1075 ;;		Unchanged: 0/0
  1076 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1077 ;;      Params:         0       0       0       0       0
  1078 ;;      Locals:         0       0       0       0       0
  1079 ;;      Temps:          0       0       0       0       0
  1080 ;;      Totals:         0       0       0       0       0
  1081 ;;Total ram usage:        0 bytes
  1082 ;; Hardware stack levels used:    1
  1083 ;; Hardware stack levels required when called:    2
  1084 ;; This function calls:
  1085 ;;		_SerialBegin
  1086 ;;		_pinMode
  1087 ;; This function is called by:
  1088 ;;		_main
  1089 ;; This function uses a non-reentrant model
  1090 ;;
  1091                           psect	text1,local,class=CODE,delta=2,merge=1,group=0
  1092                           	file	"application.c"
  1093                           	line	19
  1094                           global __ptext1
  1095                           __ptext1:	;psect for function _setup
  1096  034B                     psect	text1
  1097                           	file	"application.c"
  1098                           	line	19
  1099                           	global	__size_of_setup
  1100                           	__size_of_setup	equ	__end_of_setup-_setup
  1101  0017                     	
  1102                           _setup:	
  1103  034B                     ;incstack = 0
  1104                           	opt	stack 5
  1105                           ; Regs used in _setup: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1106                           	line	21
  1107                           	
  1108                           l1660:	
  1109  034B                     ;application.c: 21:     SerialBegin(9600);
  1110                           	movlw	0
  1111  034B  3000               	bcf	status, 5	;RP0=0, select bank0
  1112  034C  1283               	bcf	status, 6	;RP1=0, select bank0
  1113  034D  1303               	movwf	(SerialBegin@baudrate+3)
  1114  034E  00B9               	movlw	0
  1115  034F  3000               	movwf	(SerialBegin@baudrate+2)
  1116  0350  00B8               	movlw	025h
  1117  0351  3025               	movwf	(SerialBegin@baudrate+1)
  1118  0352  00B7               	movlw	080h
  1119  0353  3080               	movwf	(SerialBegin@baudrate)
  1120  0354  00B6               
  1121                           	fcall	_SerialBegin
  1122  0355  120A  118A  259D  120A  118A  	line	22
  1123                           	
  1124                           l1662:	
  1125  035A                     ;application.c: 22:     pinMode(1,0);
  1126                           	clrf	(pinMode@mode)
  1127  035A  01F0               	movlw	low(01h)
  1128  035B  3001               	fcall	_pinMode
  1129  035C  120A  118A  26D1  120A  118A  	line	23
  1130                           	
  1131                           l45:	
  1132  0361                     	return
  1133  0361  0008               	opt stack 0
  1134                           GLOBAL	__end_of_setup
  1135                           	__end_of_setup:
  1136  0362                     	signat	_setup,89
  1137                           	global	_pinMode
  1138                           
  1139 ;; *************** function _pinMode *****************
  1140 ;; Defined at:
  1141 ;;		line 47 in file "procedures.c"
  1142 ;; Parameters:    Size  Location     Type
  1143 ;;  pin             1    wreg     unsigned char 
  1144 ;;  mode            1    0[COMMON] unsigned char 
  1145 ;; Auto vars:     Size  Location     Type
  1146 ;;  pin             1    3[COMMON] unsigned char 
  1147 ;; Return value:  Size  Location     Type
  1148 ;;                  1    wreg      void 
  1149 ;; Registers used:
  1150 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1151 ;; Tracked objects:
  1152 ;;		On entry : 0/0
  1153 ;;		On exit  : 0/0
  1154 ;;		Unchanged: 0/0
  1155 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1156 ;;      Params:         1       0       0       0       0
  1157 ;;      Locals:         1       0       0       0       0
  1158 ;;      Temps:          2       0       0       0       0
  1159 ;;      Totals:         4       0       0       0       0
  1160 ;;Total ram usage:        4 bytes
  1161 ;; Hardware stack levels used:    1
  1162 ;; This function calls:
  1163 ;;		Nothing
  1164 ;; This function is called by:
  1165 ;;		_setup
  1166 ;; This function uses a non-reentrant model
  1167 ;;
  1168                           psect	text2,local,class=CODE,delta=2,merge=1,group=0
  1169                           	file	"procedures.c"
  1170                           	line	47
  1171                           global __ptext2
  1172                           __ptext2:	;psect for function _pinMode
  1173  06D1                     psect	text2
  1174                           	file	"procedures.c"
  1175                           	line	47
  1176                           	global	__size_of_pinMode
  1177                           	__size_of_pinMode	equ	__end_of_pinMode-_pinMode
  1178  0116                     	
  1179                           _pinMode:	
  1180  06D1                     ;incstack = 0
  1181                           	opt	stack 6
  1182                           ; Regs used in _pinMode: [wreg-fsr0h+status,2+status,0]
  1183                           ;pinMode@pin stored from wreg
  1184                           	movwf	(pinMode@pin)
  1185  06D1  00F3               	line	49
  1186                           	
  1187                           l1500:	
  1188  06D2                     ;procedures.c: 47: void pinMode(char pin, char mode);procedures.c: 48: {;procedures.c: 4
                                 9:     switch(pin)
  1189                           	goto	l1552
  1190  06D2  2F94               	line	51
  1191                           ;procedures.c: 50:     {;procedures.c: 51:         case 0x00:
  1192                           	
  1193                           l181:	
  1194  06D3                     	line	52
  1195                           	
  1196                           l1502:	
  1197  06D3                     ;procedures.c: 52:             TRISCbits.TRISC0 = mode;
  1198                           	rrf	(pinMode@mode),w
  1199  06D3  0C70               	bsf	status, 5	;RP0=1, select bank1
  1200  06D4  1683               	bcf	status, 6	;RP1=0, select bank1
  1201  06D5  1303               	skipc
  1202  06D6  1C03               	bcf	(135)^080h,0	;volatile
  1203  06D7  1007               	skipnc
  1204  06D8  1803               	bsf	(135)^080h,0	;volatile
  1205  06D9  1407               	line	53
  1206                           ;procedures.c: 53:             break;
  1207                           	goto	l206
  1208  06DA  2FE6               	line	54
  1209                           ;procedures.c: 54:         case 0x01:
  1210                           	
  1211                           l183:	
  1212  06DB                     	line	55
  1213                           	
  1214                           l1504:	
  1215  06DB                     ;procedures.c: 55:             TRISCbits.TRISC1 = mode;
  1216                           	rrf	(pinMode@mode),w
  1217  06DB  0C70               	bsf	status, 5	;RP0=1, select bank1
  1218  06DC  1683               	bcf	status, 6	;RP1=0, select bank1
  1219  06DD  1303               	skipc
  1220  06DE  1C03               	bcf	(135)^080h,1	;volatile
  1221  06DF  1087               	skipnc
  1222  06E0  1803               	bsf	(135)^080h,1	;volatile
  1223  06E1  1487               	line	56
  1224                           ;procedures.c: 56:             break;
  1225                           	goto	l206
  1226  06E2  2FE6               	line	57
  1227                           ;procedures.c: 57:         case 0x02:
  1228                           	
  1229                           l184:	
  1230  06E3                     	line	58
  1231                           	
  1232                           l1506:	
  1233  06E3                     ;procedures.c: 58:             TRISCbits.TRISC2 = mode;
  1234                           	rrf	(pinMode@mode),w
  1235  06E3  0C70               	bsf	status, 5	;RP0=1, select bank1
  1236  06E4  1683               	bcf	status, 6	;RP1=0, select bank1
  1237  06E5  1303               	skipc
  1238  06E6  1C03               	bcf	(135)^080h,2	;volatile
  1239  06E7  1107               	skipnc
  1240  06E8  1803               	bsf	(135)^080h,2	;volatile
  1241  06E9  1507               	line	59
  1242                           ;procedures.c: 59:             break;
  1243                           	goto	l206
  1244  06EA  2FE6               	line	60
  1245                           ;procedures.c: 60:         case 0x03:
  1246                           	
  1247                           l185:	
  1248  06EB                     	line	61
  1249                           	
  1250                           l1508:	
  1251  06EB                     ;procedures.c: 61:             TRISCbits.TRISC3 = mode;
  1252                           	rrf	(pinMode@mode),w
  1253  06EB  0C70               	bsf	status, 5	;RP0=1, select bank1
  1254  06EC  1683               	bcf	status, 6	;RP1=0, select bank1
  1255  06ED  1303               	skipc
  1256  06EE  1C03               	bcf	(135)^080h,3	;volatile
  1257  06EF  1187               	skipnc
  1258  06F0  1803               	bsf	(135)^080h,3	;volatile
  1259  06F1  1587               	line	62
  1260                           ;procedures.c: 62:             break;
  1261                           	goto	l206
  1262  06F2  2FE6               	line	63
  1263                           ;procedures.c: 63:         case 0x04:
  1264                           	
  1265                           l186:	
  1266  06F3                     	line	64
  1267                           	
  1268                           l1510:	
  1269  06F3                     ;procedures.c: 64:             TRISDbits.TRISD0 = mode;
  1270                           	rrf	(pinMode@mode),w
  1271  06F3  0C70               	bsf	status, 5	;RP0=1, select bank1
  1272  06F4  1683               	bcf	status, 6	;RP1=0, select bank1
  1273  06F5  1303               	skipc
  1274  06F6  1C03               	bcf	(136)^080h,0	;volatile
  1275  06F7  1008               	skipnc
  1276  06F8  1803               	bsf	(136)^080h,0	;volatile
  1277  06F9  1408               	line	65
  1278                           ;procedures.c: 65:             break;
  1279                           	goto	l206
  1280  06FA  2FE6               	line	66
  1281                           ;procedures.c: 66:         case 0x05:
  1282                           	
  1283                           l187:	
  1284  06FB                     	line	67
  1285                           	
  1286                           l1512:	
  1287  06FB                     ;procedures.c: 67:             TRISDbits.TRISD1 = mode;
  1288                           	rrf	(pinMode@mode),w
  1289  06FB  0C70               	bsf	status, 5	;RP0=1, select bank1
  1290  06FC  1683               	bcf	status, 6	;RP1=0, select bank1
  1291  06FD  1303               	skipc
  1292  06FE  1C03               	bcf	(136)^080h,1	;volatile
  1293  06FF  1088               	skipnc
  1294  0700  1803               	bsf	(136)^080h,1	;volatile
  1295  0701  1488               	line	68
  1296                           ;procedures.c: 68:             break;
  1297                           	goto	l206
  1298  0702  2FE6               	line	69
  1299                           ;procedures.c: 69:         case 0x06:
  1300                           	
  1301                           l188:	
  1302  0703                     	line	70
  1303                           	
  1304                           l1514:	
  1305  0703                     ;procedures.c: 70:             TRISDbits.TRISD2 = mode;
  1306                           	rrf	(pinMode@mode),w
  1307  0703  0C70               	bsf	status, 5	;RP0=1, select bank1
  1308  0704  1683               	bcf	status, 6	;RP1=0, select bank1
  1309  0705  1303               	skipc
  1310  0706  1C03               	bcf	(136)^080h,2	;volatile
  1311  0707  1108               	skipnc
  1312  0708  1803               	bsf	(136)^080h,2	;volatile
  1313  0709  1508               	line	71
  1314                           ;procedures.c: 71:             break;
  1315                           	goto	l206
  1316  070A  2FE6               	line	72
  1317                           ;procedures.c: 72:         case 0x07:
  1318                           	
  1319                           l189:	
  1320  070B                     	line	73
  1321                           	
  1322                           l1516:	
  1323  070B                     ;procedures.c: 73:             TRISDbits.TRISD3 = mode;
  1324                           	rrf	(pinMode@mode),w
  1325  070B  0C70               	bsf	status, 5	;RP0=1, select bank1
  1326  070C  1683               	bcf	status, 6	;RP1=0, select bank1
  1327  070D  1303               	skipc
  1328  070E  1C03               	bcf	(136)^080h,3	;volatile
  1329  070F  1188               	skipnc
  1330  0710  1803               	bsf	(136)^080h,3	;volatile
  1331  0711  1588               	line	74
  1332                           ;procedures.c: 74:             break;
  1333                           	goto	l206
  1334  0712  2FE6               	line	75
  1335                           ;procedures.c: 75:         case 0x08:
  1336                           	
  1337                           l190:	
  1338  0713                     	line	76
  1339                           	
  1340                           l1518:	
  1341  0713                     ;procedures.c: 76:             TRISCbits.TRISC4 = mode;
  1342                           	rrf	(pinMode@mode),w
  1343  0713  0C70               	bsf	status, 5	;RP0=1, select bank1
  1344  0714  1683               	bcf	status, 6	;RP1=0, select bank1
  1345  0715  1303               	skipc
  1346  0716  1C03               	bcf	(135)^080h,4	;volatile
  1347  0717  1207               	skipnc
  1348  0718  1803               	bsf	(135)^080h,4	;volatile
  1349  0719  1607               	line	77
  1350                           ;procedures.c: 77:             break;
  1351                           	goto	l206
  1352  071A  2FE6               	line	78
  1353                           ;procedures.c: 78:         case 0x09:
  1354                           	
  1355                           l191:	
  1356  071B                     	line	79
  1357                           	
  1358                           l1520:	
  1359  071B                     ;procedures.c: 79:             TRISCbits.TRISC5 = mode;
  1360                           	rrf	(pinMode@mode),w
  1361  071B  0C70               	bsf	status, 5	;RP0=1, select bank1
  1362  071C  1683               	bcf	status, 6	;RP1=0, select bank1
  1363  071D  1303               	skipc
  1364  071E  1C03               	bcf	(135)^080h,5	;volatile
  1365  071F  1287               	skipnc
  1366  0720  1803               	bsf	(135)^080h,5	;volatile
  1367  0721  1687               	line	80
  1368                           ;procedures.c: 80:             break;
  1369                           	goto	l206
  1370  0722  2FE6               	line	81
  1371                           ;procedures.c: 81:         case 0x0A:
  1372                           	
  1373                           l192:	
  1374  0723                     	line	82
  1375                           	
  1376                           l1522:	
  1377  0723                     ;procedures.c: 82:             TRISCbits.TRISC6 = mode;
  1378                           	rrf	(pinMode@mode),w
  1379  0723  0C70               	bsf	status, 5	;RP0=1, select bank1
  1380  0724  1683               	bcf	status, 6	;RP1=0, select bank1
  1381  0725  1303               	skipc
  1382  0726  1C03               	bcf	(135)^080h,6	;volatile
  1383  0727  1307               	skipnc
  1384  0728  1803               	bsf	(135)^080h,6	;volatile
  1385  0729  1707               	line	83
  1386                           ;procedures.c: 83:             break;
  1387                           	goto	l206
  1388  072A  2FE6               	line	84
  1389                           ;procedures.c: 84:         case 0x0B:
  1390                           	
  1391                           l193:	
  1392  072B                     	line	85
  1393                           	
  1394                           l1524:	
  1395  072B                     ;procedures.c: 85:             TRISCbits.TRISC7 = mode;
  1396                           	rrf	(pinMode@mode),w
  1397  072B  0C70               	bsf	status, 5	;RP0=1, select bank1
  1398  072C  1683               	bcf	status, 6	;RP1=0, select bank1
  1399  072D  1303               	skipc
  1400  072E  1C03               	bcf	(135)^080h,7	;volatile
  1401  072F  1387               	skipnc
  1402  0730  1803               	bsf	(135)^080h,7	;volatile
  1403  0731  1787               	line	86
  1404                           ;procedures.c: 86:             break;
  1405                           	goto	l206
  1406  0732  2FE6               	line	87
  1407                           ;procedures.c: 87:         case 0x0C:
  1408                           	
  1409                           l194:	
  1410  0733                     	line	88
  1411                           	
  1412                           l1526:	
  1413  0733                     ;procedures.c: 88:             TRISDbits.TRISD4 = mode;
  1414                           	rrf	(pinMode@mode),w
  1415  0733  0C70               	bsf	status, 5	;RP0=1, select bank1
  1416  0734  1683               	bcf	status, 6	;RP1=0, select bank1
  1417  0735  1303               	skipc
  1418  0736  1C03               	bcf	(136)^080h,4	;volatile
  1419  0737  1208               	skipnc
  1420  0738  1803               	bsf	(136)^080h,4	;volatile
  1421  0739  1608               	line	89
  1422                           ;procedures.c: 89:             break;
  1423                           	goto	l206
  1424  073A  2FE6               	line	90
  1425                           ;procedures.c: 90:         case 0x0D:
  1426                           	
  1427                           l195:	
  1428  073B                     	line	91
  1429                           	
  1430                           l1528:	
  1431  073B                     ;procedures.c: 91:             TRISDbits.TRISD5 = mode;
  1432                           	rrf	(pinMode@mode),w
  1433  073B  0C70               	bsf	status, 5	;RP0=1, select bank1
  1434  073C  1683               	bcf	status, 6	;RP1=0, select bank1
  1435  073D  1303               	skipc
  1436  073E  1C03               	bcf	(136)^080h,5	;volatile
  1437  073F  1288               	skipnc
  1438  0740  1803               	bsf	(136)^080h,5	;volatile
  1439  0741  1688               	line	92
  1440                           ;procedures.c: 92:             break;
  1441                           	goto	l206
  1442  0742  2FE6               	line	93
  1443                           ;procedures.c: 93:         case 0x0E:
  1444                           	
  1445                           l196:	
  1446  0743                     	line	94
  1447                           	
  1448                           l1530:	
  1449  0743                     ;procedures.c: 94:             TRISDbits.TRISD6 = mode;
  1450                           	rrf	(pinMode@mode),w
  1451  0743  0C70               	bsf	status, 5	;RP0=1, select bank1
  1452  0744  1683               	bcf	status, 6	;RP1=0, select bank1
  1453  0745  1303               	skipc
  1454  0746  1C03               	bcf	(136)^080h,6	;volatile
  1455  0747  1308               	skipnc
  1456  0748  1803               	bsf	(136)^080h,6	;volatile
  1457  0749  1708               	line	95
  1458                           ;procedures.c: 95:             break;
  1459                           	goto	l206
  1460  074A  2FE6               	line	96
  1461                           ;procedures.c: 96:         case 0x0F:
  1462                           	
  1463                           l197:	
  1464  074B                     	line	97
  1465                           	
  1466                           l1532:	
  1467  074B                     ;procedures.c: 97:             TRISDbits.TRISD7 = mode;
  1468                           	rrf	(pinMode@mode),w
  1469  074B  0C70               	bsf	status, 5	;RP0=1, select bank1
  1470  074C  1683               	bcf	status, 6	;RP1=0, select bank1
  1471  074D  1303               	skipc
  1472  074E  1C03               	bcf	(136)^080h,7	;volatile
  1473  074F  1388               	skipnc
  1474  0750  1803               	bsf	(136)^080h,7	;volatile
  1475  0751  1788               	line	98
  1476                           ;procedures.c: 98:             break;
  1477                           	goto	l206
  1478  0752  2FE6               	line	99
  1479                           ;procedures.c: 99:         case 0x10:
  1480                           	
  1481                           l198:	
  1482  0753                     	line	100
  1483                           	
  1484                           l1534:	
  1485  0753                     ;procedures.c: 100:             TRISBbits.TRISB0 = mode;
  1486                           	rrf	(pinMode@mode),w
  1487  0753  0C70               	bsf	status, 5	;RP0=1, select bank1
  1488  0754  1683               	bcf	status, 6	;RP1=0, select bank1
  1489  0755  1303               	skipc
  1490  0756  1C03               	bcf	(134)^080h,0	;volatile
  1491  0757  1006               	skipnc
  1492  0758  1803               	bsf	(134)^080h,0	;volatile
  1493  0759  1406               	line	101
  1494                           ;procedures.c: 101:             break;
  1495                           	goto	l206
  1496  075A  2FE6               	line	102
  1497                           ;procedures.c: 102:         case 0x11:
  1498                           	
  1499                           l199:	
  1500  075B                     	line	103
  1501                           	
  1502                           l1536:	
  1503  075B                     ;procedures.c: 103:             TRISBbits.TRISB1 = mode;
  1504                           	rrf	(pinMode@mode),w
  1505  075B  0C70               	bsf	status, 5	;RP0=1, select bank1
  1506  075C  1683               	bcf	status, 6	;RP1=0, select bank1
  1507  075D  1303               	skipc
  1508  075E  1C03               	bcf	(134)^080h,1	;volatile
  1509  075F  1086               	skipnc
  1510  0760  1803               	bsf	(134)^080h,1	;volatile
  1511  0761  1486               	line	104
  1512                           ;procedures.c: 104:             break;
  1513                           	goto	l206
  1514  0762  2FE6               	line	105
  1515                           ;procedures.c: 105:         case 0x12:
  1516                           	
  1517                           l200:	
  1518  0763                     	line	106
  1519                           	
  1520                           l1538:	
  1521  0763                     ;procedures.c: 106:             TRISBbits.TRISB2 = mode;
  1522                           	rrf	(pinMode@mode),w
  1523  0763  0C70               	bsf	status, 5	;RP0=1, select bank1
  1524  0764  1683               	bcf	status, 6	;RP1=0, select bank1
  1525  0765  1303               	skipc
  1526  0766  1C03               	bcf	(134)^080h,2	;volatile
  1527  0767  1106               	skipnc
  1528  0768  1803               	bsf	(134)^080h,2	;volatile
  1529  0769  1506               	line	107
  1530                           ;procedures.c: 107:             break;
  1531                           	goto	l206
  1532  076A  2FE6               	line	108
  1533                           ;procedures.c: 108:         case 0x13:
  1534                           	
  1535                           l201:	
  1536  076B                     	line	109
  1537                           	
  1538                           l1540:	
  1539  076B                     ;procedures.c: 109:             TRISBbits.TRISB3 = mode;
  1540                           	rrf	(pinMode@mode),w
  1541  076B  0C70               	bsf	status, 5	;RP0=1, select bank1
  1542  076C  1683               	bcf	status, 6	;RP1=0, select bank1
  1543  076D  1303               	skipc
  1544  076E  1C03               	bcf	(134)^080h,3	;volatile
  1545  076F  1186               	skipnc
  1546  0770  1803               	bsf	(134)^080h,3	;volatile
  1547  0771  1586               	line	110
  1548                           ;procedures.c: 110:             break;
  1549                           	goto	l206
  1550  0772  2FE6               	line	111
  1551                           ;procedures.c: 111:         case 0x14:
  1552                           	
  1553                           l202:	
  1554  0773                     	line	112
  1555                           	
  1556                           l1542:	
  1557  0773                     ;procedures.c: 112:             TRISBbits.TRISB4 = mode;
  1558                           	rrf	(pinMode@mode),w
  1559  0773  0C70               	bsf	status, 5	;RP0=1, select bank1
  1560  0774  1683               	bcf	status, 6	;RP1=0, select bank1
  1561  0775  1303               	skipc
  1562  0776  1C03               	bcf	(134)^080h,4	;volatile
  1563  0777  1206               	skipnc
  1564  0778  1803               	bsf	(134)^080h,4	;volatile
  1565  0779  1606               	line	113
  1566                           ;procedures.c: 113:             break;
  1567                           	goto	l206
  1568  077A  2FE6               	line	114
  1569                           ;procedures.c: 114:         case 0x15:
  1570                           	
  1571                           l203:	
  1572  077B                     	line	115
  1573                           	
  1574                           l1544:	
  1575  077B                     ;procedures.c: 115:             TRISBbits.TRISB5 = mode;
  1576                           	rrf	(pinMode@mode),w
  1577  077B  0C70               	bsf	status, 5	;RP0=1, select bank1
  1578  077C  1683               	bcf	status, 6	;RP1=0, select bank1
  1579  077D  1303               	skipc
  1580  077E  1C03               	bcf	(134)^080h,5	;volatile
  1581  077F  1286               	skipnc
  1582  0780  1803               	bsf	(134)^080h,5	;volatile
  1583  0781  1686               	line	116
  1584                           ;procedures.c: 116:             break;
  1585                           	goto	l206
  1586  0782  2FE6               	line	117
  1587                           ;procedures.c: 117:         case 0x16:
  1588                           	
  1589                           l204:	
  1590  0783                     	line	118
  1591                           	
  1592                           l1546:	
  1593  0783                     ;procedures.c: 118:             TRISBbits.TRISB6 = mode;
  1594                           	rrf	(pinMode@mode),w
  1595  0783  0C70               	bsf	status, 5	;RP0=1, select bank1
  1596  0784  1683               	bcf	status, 6	;RP1=0, select bank1
  1597  0785  1303               	skipc
  1598  0786  1C03               	bcf	(134)^080h,6	;volatile
  1599  0787  1306               	skipnc
  1600  0788  1803               	bsf	(134)^080h,6	;volatile
  1601  0789  1706               	line	119
  1602                           ;procedures.c: 119:             break;
  1603                           	goto	l206
  1604  078A  2FE6               	line	120
  1605                           ;procedures.c: 120:         case 0x17:
  1606                           	
  1607                           l205:	
  1608  078B                     	line	121
  1609                           	
  1610                           l1548:	
  1611  078B                     ;procedures.c: 121:             TRISBbits.TRISB7 = mode;
  1612                           	rrf	(pinMode@mode),w
  1613  078B  0C70               	bsf	status, 5	;RP0=1, select bank1
  1614  078C  1683               	bcf	status, 6	;RP1=0, select bank1
  1615  078D  1303               	skipc
  1616  078E  1C03               	bcf	(134)^080h,7	;volatile
  1617  078F  1386               	skipnc
  1618  0790  1803               	bsf	(134)^080h,7	;volatile
  1619  0791  1786               	line	122
  1620                           ;procedures.c: 122:             break;
  1621                           	goto	l206
  1622  0792  2FE6               	line	123
  1623                           	
  1624                           l1550:	
  1625  0793                     ;procedures.c: 123:     }
  1626                           	goto	l206
  1627  0793  2FE6               	
  1628                           l180:	
  1629  0794                     	
  1630                           l1552:	
  1631  0794                     	movf	(pinMode@pin),w
  1632  0794  0873               	movwf	(??_pinMode+0)+0
  1633  0795  00F1               	clrf	(??_pinMode+0)+0+1
  1634  0796  01F2               	; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-s
                                 witches
  1635                           ; Switch size 1, requested type "space"
  1636                           ; Number of cases is 1, Range of values is 0 to 0
  1637                           ; switch strategies available:
  1638                           ; Name         Instructions Cycles
  1639                           ; simple_byte            4     3 (average)
  1640                           ; direct_byte           11     8 (fixed)
  1641                           ; jumptable            260     6 (fixed)
  1642                           ;	Chosen strategy is simple_byte
  1643                           
  1644                           	movf 1+(??_pinMode+0)+0,w
  1645  0797  0872               	opt asmopt_push
  1646                           	opt asmopt_off
  1647                           	xorlw	0^0	; case 0
  1648  0798  3A00               	skipnz
  1649  0799  1903               	goto	l1782
  1650  079A  2F9C               	goto	l206
  1651  079B  2FE6               	opt asmopt_pop
  1652                           	
  1653                           l1782:	
  1654  079C                     ; Switch size 1, requested type "space"
  1655                           ; Number of cases is 24, Range of values is 0 to 23
  1656                           ; switch strategies available:
  1657                           ; Name         Instructions Cycles
  1658                           ; simple_byte           73    37 (average)
  1659                           ; direct_byte           80     8 (fixed)
  1660                           ; jumptable            260     6 (fixed)
  1661                           ;	Chosen strategy is simple_byte
  1662                           
  1663                           	movf 0+(??_pinMode+0)+0,w
  1664  079C  0871               	opt asmopt_push
  1665                           	opt asmopt_off
  1666                           	xorlw	0^0	; case 0
  1667  079D  3A00               	skipnz
  1668  079E  1903               	goto	l1502
  1669  079F  2ED3               	xorlw	1^0	; case 1
  1670  07A0  3A01               	skipnz
  1671  07A1  1903               	goto	l1504
  1672  07A2  2EDB               	xorlw	2^1	; case 2
  1673  07A3  3A03               	skipnz
  1674  07A4  1903               	goto	l1506
  1675  07A5  2EE3               	xorlw	3^2	; case 3
  1676  07A6  3A01               	skipnz
  1677  07A7  1903               	goto	l1508
  1678  07A8  2EEB               	xorlw	4^3	; case 4
  1679  07A9  3A07               	skipnz
  1680  07AA  1903               	goto	l1510
  1681  07AB  2EF3               	xorlw	5^4	; case 5
  1682  07AC  3A01               	skipnz
  1683  07AD  1903               	goto	l1512
  1684  07AE  2EFB               	xorlw	6^5	; case 6
  1685  07AF  3A03               	skipnz
  1686  07B0  1903               	goto	l1514
  1687  07B1  2F03               	xorlw	7^6	; case 7
  1688  07B2  3A01               	skipnz
  1689  07B3  1903               	goto	l1516
  1690  07B4  2F0B               	xorlw	8^7	; case 8
  1691  07B5  3A0F               	skipnz
  1692  07B6  1903               	goto	l1518
  1693  07B7  2F13               	xorlw	9^8	; case 9
  1694  07B8  3A01               	skipnz
  1695  07B9  1903               	goto	l1520
  1696  07BA  2F1B               	xorlw	10^9	; case 10
  1697  07BB  3A03               	skipnz
  1698  07BC  1903               	goto	l1522
  1699  07BD  2F23               	xorlw	11^10	; case 11
  1700  07BE  3A01               	skipnz
  1701  07BF  1903               	goto	l1524
  1702  07C0  2F2B               	xorlw	12^11	; case 12
  1703  07C1  3A07               	skipnz
  1704  07C2  1903               	goto	l1526
  1705  07C3  2F33               	xorlw	13^12	; case 13
  1706  07C4  3A01               	skipnz
  1707  07C5  1903               	goto	l1528
  1708  07C6  2F3B               	xorlw	14^13	; case 14
  1709  07C7  3A03               	skipnz
  1710  07C8  1903               	goto	l1530
  1711  07C9  2F43               	xorlw	15^14	; case 15
  1712  07CA  3A01               	skipnz
  1713  07CB  1903               	goto	l1532
  1714  07CC  2F4B               	xorlw	16^15	; case 16
  1715  07CD  3A1F               	skipnz
  1716  07CE  1903               	goto	l1534
  1717  07CF  2F53               	xorlw	17^16	; case 17
  1718  07D0  3A01               	skipnz
  1719  07D1  1903               	goto	l1536
  1720  07D2  2F5B               	xorlw	18^17	; case 18
  1721  07D3  3A03               	skipnz
  1722  07D4  1903               	goto	l1538
  1723  07D5  2F63               	xorlw	19^18	; case 19
  1724  07D6  3A01               	skipnz
  1725  07D7  1903               	goto	l1540
  1726  07D8  2F6B               	xorlw	20^19	; case 20
  1727  07D9  3A07               	skipnz
  1728  07DA  1903               	goto	l1542
  1729  07DB  2F73               	xorlw	21^20	; case 21
  1730  07DC  3A01               	skipnz
  1731  07DD  1903               	goto	l1544
  1732  07DE  2F7B               	xorlw	22^21	; case 22
  1733  07DF  3A03               	skipnz
  1734  07E0  1903               	goto	l1546
  1735  07E1  2F83               	xorlw	23^22	; case 23
  1736  07E2  3A01               	skipnz
  1737  07E3  1903               	goto	l1548
  1738  07E4  2F8B               	goto	l206
  1739  07E5  2FE6               	opt asmopt_pop
  1740                           
  1741                           	
  1742                           l182:	
  1743  07E6                     	line	124
  1744                           	
  1745                           l206:	
  1746  07E6                     	return
  1747  07E6  0008               	opt stack 0
  1748                           GLOBAL	__end_of_pinMode
  1749                           	__end_of_pinMode:
  1750  07E7                     	signat	_pinMode,8313
  1751                           	global	_SerialBegin
  1752                           
  1753 ;; *************** function _SerialBegin *****************
  1754 ;; Defined at:
  1755 ;;		line 338 in file "procedures.c"
  1756 ;; Parameters:    Size  Location     Type
  1757 ;;  baudrate        4    6[BANK0 ] const long 
  1758 ;; Auto vars:     Size  Location     Type
  1759 ;;  x               2   10[BANK0 ] unsigned int 
  1760 ;; Return value:  Size  Location     Type
  1761 ;;                  1    wreg      unsigned char 
  1762 ;; Registers used:
  1763 ;;		wreg, status,2, status,0, pclath, cstack
  1764 ;; Tracked objects:
  1765 ;;		On entry : 0/0
  1766 ;;		On exit  : 0/0
  1767 ;;		Unchanged: 0/0
  1768 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1769 ;;      Params:         0       4       0       0       0
  1770 ;;      Locals:         0       2       0       0       0
  1771 ;;      Temps:          4       0       0       0       0
  1772 ;;      Totals:         4       6       0       0       0
  1773 ;;Total ram usage:       10 bytes
  1774 ;; Hardware stack levels used:    1
  1775 ;; Hardware stack levels required when called:    1
  1776 ;; This function calls:
  1777 ;;		___aldiv
  1778 ;; This function is called by:
  1779 ;;		_setup
  1780 ;; This function uses a non-reentrant model
  1781 ;;
  1782                           psect	text3,local,class=CODE,delta=2,merge=1,group=0
  1783                           	line	338
  1784                           global __ptext3
  1785                           __ptext3:	;psect for function _SerialBegin
  1786  059D                     psect	text3
  1787                           	file	"procedures.c"
  1788                           	line	338
  1789                           	global	__size_of_SerialBegin
  1790                           	__size_of_SerialBegin	equ	__end_of_SerialBegin-_SerialBegin
  1791  008E                     	
  1792                           _SerialBegin:	
  1793  059D                     ;incstack = 0
  1794                           	opt	stack 5
  1795                           ; Regs used in _SerialBegin: [wreg+status,2+status,0+pclath+cstack]
  1796                           	line	341
  1797                           	
  1798                           l1474:	
  1799  059D                     ;procedures.c: 338: char SerialBegin(const long int baudrate);procedures.c: 339: {;proce
                                 dures.c: 340:   unsigned int x;;procedures.c: 341:   x = (20000000 / (64 * baudrate)) - 
                                 1;
  1800                           	bcf	status, 5	;RP0=0, select bank0
  1801  059D  1283               	bcf	status, 6	;RP1=0, select bank0
  1802  059E  1303               	movf	(SerialBegin@baudrate),w
  1803  059F  0836               	movwf	(??_SerialBegin+0)+0
  1804  05A0  00F9               	movf	(SerialBegin@baudrate+1),w
  1805  05A1  0837               	movwf	((??_SerialBegin+0)+0+1)
  1806  05A2  00FA               	movf	(SerialBegin@baudrate+2),w
  1807  05A3  0838               	movwf	((??_SerialBegin+0)+0+2)
  1808  05A4  00FB               	movf	(SerialBegin@baudrate+3),w
  1809  05A5  0839               	movwf	((??_SerialBegin+0)+0+3)
  1810  05A6  00FC               	movlw	06h
  1811  05A7  3006               u535:
  1812  05A8                     	clrc
  1813  05A8  1003               	rlf	(??_SerialBegin+0)+0,f
  1814  05A9  0DF9               	rlf	(??_SerialBegin+0)+1,f
  1815  05AA  0DFA               	rlf	(??_SerialBegin+0)+2,f
  1816  05AB  0DFB               	rlf	(??_SerialBegin+0)+3,f
  1817  05AC  0DFC               u530:
  1818  05AD                     	addlw	-1
  1819  05AD  3EFF               	skipz
  1820  05AE  1D03               	goto	u535
  1821  05AF  2DA8               	movf	3+(??_SerialBegin+0)+0,w
  1822  05B0  087C               	movwf	(___aldiv@divisor+3)
  1823  05B1  00F3               	movf	2+(??_SerialBegin+0)+0,w
  1824  05B2  087B               	movwf	(___aldiv@divisor+2)
  1825  05B3  00F2               	movf	1+(??_SerialBegin+0)+0,w
  1826  05B4  087A               	movwf	(___aldiv@divisor+1)
  1827  05B5  00F1               	movf	0+(??_SerialBegin+0)+0,w
  1828  05B6  0879               	movwf	(___aldiv@divisor)
  1829  05B7  00F0               
  1830                           	movlw	01h
  1831  05B8  3001               	movwf	(___aldiv@dividend+3)
  1832  05B9  00F7               	movlw	031h
  1833  05BA  3031               	movwf	(___aldiv@dividend+2)
  1834  05BB  00F6               	movlw	02Dh
  1835  05BC  302D               	movwf	(___aldiv@dividend+1)
  1836  05BD  00F5               	movlw	0
  1837  05BE  3000               	movwf	(___aldiv@dividend)
  1838  05BF  00F4               
  1839                           	fcall	___aldiv
  1840  05C0  120A  118A  262B  120A  118A  	movf	(0+(?___aldiv)),w
  1841  05C5  0870               	addlw	low(0FFFFh)
  1842  05C6  3EFF               	bcf	status, 5	;RP0=0, select bank0
  1843  05C7  1283               	bcf	status, 6	;RP1=0, select bank0
  1844  05C8  1303               	movwf	(SerialBegin@x)
  1845  05C9  00BA               	movf	(1+(?___aldiv)),w
  1846  05CA  0871               	skipnc
  1847  05CB  1803               	addlw	1
  1848  05CC  3E01               	addlw	high(0FFFFh)
  1849  05CD  3EFF               	movwf	1+(SerialBegin@x)
  1850  05CE  00BB               	line	343
  1851                           	
  1852                           l1476:	
  1853  05CF                     ;procedures.c: 343:   if(x>255)
  1854                           	movlw	01h
  1855  05CF  3001               	subwf	(SerialBegin@x+1),w
  1856  05D0  023B               	movlw	0
  1857  05D1  3000               	skipnz
  1858  05D2  1903               	subwf	(SerialBegin@x),w
  1859  05D3  023A               	skipc
  1860  05D4  1C03               	goto	u541
  1861  05D5  2DD7               	goto	u540
  1862  05D6  2DD8               u541:
  1863  05D7                     	goto	l1482
  1864  05D7  2E0C               u540:
  1865  05D8                     	line	345
  1866                           	
  1867                           l1478:	
  1868  05D8                     ;procedures.c: 344:   {;procedures.c: 345:     x = (20000000 / (16 * baudrate)) - 1;
  1869                           	movf	(SerialBegin@baudrate),w
  1870  05D8  0836               	movwf	(??_SerialBegin+0)+0
  1871  05D9  00F9               	movf	(SerialBegin@baudrate+1),w
  1872  05DA  0837               	movwf	((??_SerialBegin+0)+0+1)
  1873  05DB  00FA               	movf	(SerialBegin@baudrate+2),w
  1874  05DC  0838               	movwf	((??_SerialBegin+0)+0+2)
  1875  05DD  00FB               	movf	(SerialBegin@baudrate+3),w
  1876  05DE  0839               	movwf	((??_SerialBegin+0)+0+3)
  1877  05DF  00FC               	movlw	04h
  1878  05E0  3004               u555:
  1879  05E1                     	clrc
  1880  05E1  1003               	rlf	(??_SerialBegin+0)+0,f
  1881  05E2  0DF9               	rlf	(??_SerialBegin+0)+1,f
  1882  05E3  0DFA               	rlf	(??_SerialBegin+0)+2,f
  1883  05E4  0DFB               	rlf	(??_SerialBegin+0)+3,f
  1884  05E5  0DFC               u550:
  1885  05E6                     	addlw	-1
  1886  05E6  3EFF               	skipz
  1887  05E7  1D03               	goto	u555
  1888  05E8  2DE1               	movf	3+(??_SerialBegin+0)+0,w
  1889  05E9  087C               	movwf	(___aldiv@divisor+3)
  1890  05EA  00F3               	movf	2+(??_SerialBegin+0)+0,w
  1891  05EB  087B               	movwf	(___aldiv@divisor+2)
  1892  05EC  00F2               	movf	1+(??_SerialBegin+0)+0,w
  1893  05ED  087A               	movwf	(___aldiv@divisor+1)
  1894  05EE  00F1               	movf	0+(??_SerialBegin+0)+0,w
  1895  05EF  0879               	movwf	(___aldiv@divisor)
  1896  05F0  00F0               
  1897                           	movlw	01h
  1898  05F1  3001               	movwf	(___aldiv@dividend+3)
  1899  05F2  00F7               	movlw	031h
  1900  05F3  3031               	movwf	(___aldiv@dividend+2)
  1901  05F4  00F6               	movlw	02Dh
  1902  05F5  302D               	movwf	(___aldiv@dividend+1)
  1903  05F6  00F5               	movlw	0
  1904  05F7  3000               	movwf	(___aldiv@dividend)
  1905  05F8  00F4               
  1906                           	fcall	___aldiv
  1907  05F9  120A  118A  262B  120A  118A  	movf	(0+(?___aldiv)),w
  1908  05FE  0870               	addlw	low(0FFFFh)
  1909  05FF  3EFF               	bcf	status, 5	;RP0=0, select bank0
  1910  0600  1283               	bcf	status, 6	;RP1=0, select bank0
  1911  0601  1303               	movwf	(SerialBegin@x)
  1912  0602  00BA               	movf	(1+(?___aldiv)),w
  1913  0603  0871               	skipnc
  1914  0604  1803               	addlw	1
  1915  0605  3E01               	addlw	high(0FFFFh)
  1916  0606  3EFF               	movwf	1+(SerialBegin@x)
  1917  0607  00BB               	line	346
  1918                           	
  1919                           l1480:	
  1920  0608                     ;procedures.c: 346:     BRGH = 1;
  1921                           	bsf	status, 5	;RP0=1, select bank1
  1922  0608  1683               	bcf	status, 6	;RP1=0, select bank1
  1923  0609  1303               	bsf	(1218/8)^080h,(1218)&7	;volatile
  1924  060A  1518               	goto	l1482
  1925  060B  2E0C               	line	347
  1926                           ;procedures.c: 347:   }
  1927                           	
  1928                           l299:	
  1929  060C                     	line	348
  1930                           	
  1931                           l1482:	
  1932  060C                     ;procedures.c: 348:   if(x<256)
  1933                           	movlw	01h
  1934  060C  3001               	bcf	status, 5	;RP0=0, select bank0
  1935  060D  1283               	subwf	(SerialBegin@x+1),w
  1936  060E  023B               	movlw	0
  1937  060F  3000               	skipnz
  1938  0610  1903               	subwf	(SerialBegin@x),w
  1939  0611  023A               	skipnc
  1940  0612  1803               	goto	u561
  1941  0613  2E15               	goto	u560
  1942  0614  2E16               u561:
  1943  0615                     	goto	l301
  1944  0615  2E2A               u560:
  1945  0616                     	line	350
  1946                           	
  1947                           l1484:	
  1948  0616                     ;procedures.c: 349:   {;procedures.c: 350:     SPBRG = x;
  1949                           	movf	(SerialBegin@x),w
  1950  0616  083A               	bsf	status, 5	;RP0=1, select bank1
  1951  0617  1683               	bcf	status, 6	;RP1=0, select bank1
  1952  0618  1303               	movwf	(153)^080h	;volatile
  1953  0619  0099               	line	351
  1954                           	
  1955                           l1486:	
  1956  061A                     ;procedures.c: 351:     SYNC = 0;
  1957                           	bcf	(1220/8)^080h,(1220)&7	;volatile
  1958  061A  1218               	line	352
  1959                           	
  1960                           l1488:	
  1961  061B                     ;procedures.c: 352:     SPEN = 1;
  1962                           	bcf	status, 5	;RP0=0, select bank0
  1963  061B  1283               	bcf	status, 6	;RP1=0, select bank0
  1964  061C  1303               	bsf	(199/8),(199)&7	;volatile
  1965  061D  1798               	line	353
  1966                           	
  1967                           l1490:	
  1968  061E                     ;procedures.c: 353:     TRISC7 = 1;
  1969                           	bsf	status, 5	;RP0=1, select bank1
  1970  061E  1683               	bcf	status, 6	;RP1=0, select bank1
  1971  061F  1303               	bsf	(1087/8)^080h,(1087)&7	;volatile
  1972  0620  1787               	line	354
  1973                           	
  1974                           l1492:	
  1975  0621                     ;procedures.c: 354:     TRISC6 = 1;
  1976                           	bsf	(1086/8)^080h,(1086)&7	;volatile
  1977  0621  1707               	line	355
  1978                           	
  1979                           l1494:	
  1980  0622                     ;procedures.c: 355:     CREN = 1;
  1981                           	bcf	status, 5	;RP0=0, select bank0
  1982  0622  1283               	bcf	status, 6	;RP1=0, select bank0
  1983  0623  1303               	bsf	(196/8),(196)&7	;volatile
  1984  0624  1618               	line	356
  1985                           	
  1986                           l1496:	
  1987  0625                     ;procedures.c: 356:     TXEN = 1;
  1988                           	bsf	status, 5	;RP0=1, select bank1
  1989  0625  1683               	bcf	status, 6	;RP1=0, select bank1
  1990  0626  1303               	bsf	(1221/8)^080h,(1221)&7	;volatile
  1991  0627  1698               	goto	l301
  1992  0628  2E2A               	line	357
  1993                           	
  1994                           l1498:	
  1995  0629                     ;procedures.c: 357:     return 1;;	Return value of _SerialBegin is never used
  1996                           	goto	l301
  1997  0629  2E2A               	line	358
  1998                           ;procedures.c: 358:   }
  1999                           	
  2000                           l300:	
  2001  062A                     	line	360
  2002                           ;procedures.c: 359:   return 0;;	Return value of _SerialBegin is never used
  2003                           	
  2004                           l301:	
  2005  062A                     	return
  2006  062A  0008               	opt stack 0
  2007                           GLOBAL	__end_of_SerialBegin
  2008                           	__end_of_SerialBegin:
  2009  062B                     	signat	_SerialBegin,4217
  2010                           	global	_loop
  2011                           
  2012 ;; *************** function _loop *****************
  2013 ;; Defined at:
  2014 ;;		line 25 in file "application.c"
  2015 ;; Parameters:    Size  Location     Type
  2016 ;;		None
  2017 ;; Auto vars:     Size  Location     Type
  2018 ;;  i               2    9[COMMON] int 
  2019 ;; Return value:  Size  Location     Type
  2020 ;;                  1    wreg      void 
  2021 ;; Registers used:
  2022 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2023 ;; Tracked objects:
  2024 ;;		On entry : 0/0
  2025 ;;		On exit  : 0/0
  2026 ;;		Unchanged: 0/0
  2027 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2028 ;;      Params:         0       0       0       0       0
  2029 ;;      Locals:         2       0       0       0       0
  2030 ;;      Temps:          1       0       0       0       0
  2031 ;;      Totals:         3       0       0       0       0
  2032 ;;Total ram usage:        3 bytes
  2033 ;; Hardware stack levels used:    1
  2034 ;; Hardware stack levels required when called:    1
  2035 ;; This function calls:
  2036 ;;		_SerialAvailable
  2037 ;;		_SerialWrite
  2038 ;;		_analogRead
  2039 ;;		_cocienteEntero
  2040 ;;		_delay
  2041 ;;		_residuo
  2042 ;; This function is called by:
  2043 ;;		_main
  2044 ;; This function uses a non-reentrant model
  2045 ;;
  2046                           psect	text4,local,class=CODE,delta=2,merge=1,group=0
  2047                           	file	"application.c"
  2048                           	line	25
  2049                           global __ptext4
  2050                           __ptext4:	;psect for function _loop
  2051  04B0                     psect	text4
  2052                           	file	"application.c"
  2053                           	line	25
  2054                           	global	__size_of_loop
  2055                           	__size_of_loop	equ	__end_of_loop-_loop
  2056  006F                     	
  2057                           _loop:	
  2058  04B0                     ;incstack = 0
  2059                           	opt	stack 6
  2060                           ; Regs used in _loop: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2061                           	line	27
  2062                           	
  2063                           l1664:	
  2064  04B0                     ;application.c: 27:     if(SerialAvailable())
  2065                           	fcall	_SerialAvailable
  2066  04B0  120A  118A  2303  120A  118A  	xorlw	0
  2067  04B5  3A00               	skipnz
  2068  04B6  1903               	goto	u731
  2069  04B7  2CB9               	goto	u730
  2070  04B8  2CBA               u731:
  2071  04B9                     	goto	l52
  2072  04B9  2D1E               u730:
  2073  04BA                     	line	29
  2074                           	
  2075                           l1666:	
  2076  04BA                     ;application.c: 28:     {;application.c: 29:         ADC = analogRead(1);
  2077                           	movlw	low(01h)
  2078  04BA  3001               	fcall	_analogRead
  2079  04BB  120A  118A  251F  120A  118A  	movf	(1+(?_analogRead)),w
  2080  04C0  0871               	bcf	status, 5	;RP0=0, select bank0
  2081  04C1  1283               	bcf	status, 6	;RP1=0, select bank0
  2082  04C2  1303               	movwf	(_ADC+1)
  2083  04C3  00A8               	movf	(0+(?_analogRead)),w
  2084  04C4  0870               	movwf	(_ADC)
  2085  04C5  00A7               	line	30
  2086                           	
  2087                           l1668:	
  2088  04C6                     ;application.c: 30:         ADCMSB = cocienteEntero(ADC,256);
  2089                           	movf	(_ADC+1),w
  2090  04C6  0828               	movwf	(cocienteEntero@numerator+1)
  2091  04C7  00F1               	movf	(_ADC),w
  2092  04C8  0827               	movwf	(cocienteEntero@numerator)
  2093  04C9  00F0               	movlw	0
  2094  04CA  3000               	movwf	(cocienteEntero@denominator)
  2095  04CB  00F2               	movlw	01h
  2096  04CC  3001               	movwf	((cocienteEntero@denominator))+1
  2097  04CD  00F3               	fcall	_cocienteEntero
  2098  04CE  120A  118A  237B  120A  118A  	movwf	(??_loop+0)+0
  2099  04D3  00F8               	movf	(??_loop+0)+0,w
  2100  04D4  0878               	bcf	status, 5	;RP0=0, select bank0
  2101  04D5  1283               	bcf	status, 6	;RP1=0, select bank0
  2102  04D6  1303               	movwf	(_ADCMSB)
  2103  04D7  00AC               	line	31
  2104                           	
  2105                           l1670:	
  2106  04D8                     ;application.c: 31:         ADCLSB = residuo(ADC,256);
  2107                           	movf	(_ADC+1),w
  2108  04D8  0828               	movwf	(residuo@numerator+1)
  2109  04D9  00F1               	movf	(_ADC),w
  2110  04DA  0827               	movwf	(residuo@numerator)
  2111  04DB  00F0               	movlw	0
  2112  04DC  3000               	movwf	(residuo@denominator)
  2113  04DD  00F2               	movlw	01h
  2114  04DE  3001               	movwf	((residuo@denominator))+1
  2115  04DF  00F3               	fcall	_residuo
  2116  04E0  120A  118A  2362  120A  118A  	movwf	(??_loop+0)+0
  2117  04E5  00F8               	movf	(??_loop+0)+0,w
  2118  04E6  0878               	bcf	status, 5	;RP0=0, select bank0
  2119  04E7  1283               	bcf	status, 6	;RP1=0, select bank0
  2120  04E8  1303               	movwf	(_ADCLSB)
  2121  04E9  00AB               	line	32
  2122                           	
  2123                           l1672:	
  2124  04EA                     ;application.c: 32:         vectorOut[0] = ADCMSB;
  2125                           	movf	(_ADCMSB),w
  2126  04EA  082C               	movwf	(??_loop+0)+0
  2127  04EB  00F8               	movf	(??_loop+0)+0,w
  2128  04EC  0878               	movwf	(_vectorOut)
  2129  04ED  00A5               	line	33
  2130                           	
  2131                           l1674:	
  2132  04EE                     ;application.c: 33:         vectorOut[1] = ADCLSB;
  2133                           	movf	(_ADCLSB),w
  2134  04EE  082B               	movwf	(??_loop+0)+0
  2135  04EF  00F8               	movf	(??_loop+0)+0,w
  2136  04F0  0878               	movwf	0+(_vectorOut)+01h
  2137  04F1  00A6               	line	34
  2138                           	
  2139                           l1676:	
  2140  04F2                     ;application.c: 34:         for(int i=0;i<buffer;i++)
  2141                           	clrf	(loop@i)
  2142  04F2  01F9               	clrf	(loop@i+1)
  2143  04F3  01FA               	goto	l1682
  2144  04F4  2D06               	
  2145                           l50:	
  2146  04F5                     	line	36
  2147                           	
  2148                           l1678:	
  2149  04F5                     ;application.c: 35:         {;application.c: 36:             SerialWrite(vectorOut[i]);

  2150                           	movf	(loop@i),w
  2151  04F5  0879               	addlw	low(_vectorOut|((0x0)<<8))&0ffh
  2152  04F6  3E25               	movwf	fsr0
  2153  04F7  0084               	bcf	status, 7	;select IRP bank0
  2154  04F8  1383               	movf	indf,w
  2155  04F9  0800               	fcall	_SerialWrite
  2156  04FA  120A  118A  2328  120A  118A  	line	37
  2157                           	
  2158                           l1680:	
  2159  04FF                     ;application.c: 37:         }
  2160                           	movlw	01h
  2161  04FF  3001               	addwf	(loop@i),f
  2162  0500  07F9               	skipnc
  2163  0501  1803               	incf	(loop@i+1),f
  2164  0502  0AFA               	movlw	0
  2165  0503  3000               	addwf	(loop@i+1),f
  2166  0504  07FA               	goto	l1682
  2167  0505  2D06               	
  2168                           l49:	
  2169  0506                     	
  2170                           l1682:	
  2171  0506                     	movf	(loop@i+1),w
  2172  0506  087A               	xorlw	80h
  2173  0507  3A80               	movwf	(??_loop+0)+0
  2174  0508  00F8               	movlw	80h
  2175  0509  3080               	subwf	(??_loop+0)+0,w
  2176  050A  0278               	skipz
  2177  050B  1D03               	goto	u745
  2178  050C  2D0F               	movf	(_buffer),w
  2179  050D  087D               	subwf	(loop@i),w
  2180  050E  0279               u745:
  2181  050F                     
  2182                           	skipc
  2183  050F  1C03               	goto	u741
  2184  0510  2D12               	goto	u740
  2185  0511  2D13               u741:
  2186  0512                     	goto	l1678
  2187  0512  2CF5               u740:
  2188  0513                     	goto	l1684
  2189  0513  2D14               	
  2190                           l51:	
  2191  0514                     	line	38
  2192                           	
  2193                           l1684:	
  2194  0514                     ;application.c: 38:         delay(200);
  2195                           	movlw	0C8h
  2196  0514  30C8               	movwf	(delay@milis)
  2197  0515  00F0               	movlw	0
  2198  0516  3000               	movwf	((delay@milis))+1
  2199  0517  00F1               	fcall	_delay
  2200  0518  120A  118A  2462  120A  118A  	goto	l52
  2201  051D  2D1E               	line	60
  2202                           ;application.c: 60:     }
  2203                           	
  2204                           l48:	
  2205  051E                     	line	61
  2206                           	
  2207                           l52:	
  2208  051E                     	return
  2209  051E  0008               	opt stack 0
  2210                           GLOBAL	__end_of_loop
  2211                           	__end_of_loop:
  2212  051F                     	signat	_loop,89
  2213                           	global	_residuo
  2214                           
  2215 ;; *************** function _residuo *****************
  2216 ;; Defined at:
  2217 ;;		line 63 in file "application.c"
  2218 ;; Parameters:    Size  Location     Type
  2219 ;;  numerator       2    0[COMMON] unsigned int 
  2220 ;;  denominator     2    2[COMMON] unsigned int 
  2221 ;; Auto vars:     Size  Location     Type
  2222 ;;  temp1           2    4[COMMON] unsigned int 
  2223 ;; Return value:  Size  Location     Type
  2224 ;;                  1    wreg      unsigned char 
  2225 ;; Registers used:
  2226 ;;		wreg
  2227 ;; Tracked objects:
  2228 ;;		On entry : 0/0
  2229 ;;		On exit  : 0/0
  2230 ;;		Unchanged: 0/0
  2231 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2232 ;;      Params:         4       0       0       0       0
  2233 ;;      Locals:         2       0       0       0       0
  2234 ;;      Temps:          0       0       0       0       0
  2235 ;;      Totals:         6       0       0       0       0
  2236 ;;Total ram usage:        6 bytes
  2237 ;; Hardware stack levels used:    1
  2238 ;; This function calls:
  2239 ;;		Nothing
  2240 ;; This function is called by:
  2241 ;;		_loop
  2242 ;; This function uses a non-reentrant model
  2243 ;;
  2244                           psect	text5,local,class=CODE,delta=2,merge=1,group=0
  2245                           	line	63
  2246                           global __ptext5
  2247                           __ptext5:	;psect for function _residuo
  2248  0362                     psect	text5
  2249                           	file	"application.c"
  2250                           	line	63
  2251                           	global	__size_of_residuo
  2252                           	__size_of_residuo	equ	__end_of_residuo-_residuo
  2253  0019                     	
  2254                           _residuo:	
  2255  0362                     ;incstack = 0
  2256                           	opt	stack 6
  2257                           ; Regs used in _residuo: [wreg]
  2258                           	line	65
  2259                           	
  2260                           l1622:	
  2261  0362                     ;application.c: 63: char residuo(unsigned int numerator, unsigned int denominator);appli
                                 cation.c: 64: {;application.c: 65:  unsigned int temp1 = numerator;
  2262                           	movf	(residuo@numerator+1),w
  2263  0362  0871               	movwf	(residuo@temp1+1)
  2264  0363  00F5               	movf	(residuo@numerator),w
  2265  0364  0870               	movwf	(residuo@temp1)
  2266  0365  00F4               	line	66
  2267                           ;application.c: 66:  while(temp1 > denominator)
  2268                           	goto	l55
  2269  0366  2B6D               	
  2270                           l56:	
  2271  0367                     	line	68
  2272                           	
  2273                           l1624:	
  2274  0367                     ;application.c: 67:  {;application.c: 68:   temp1 -= denominator;
  2275                           	movf	(residuo@denominator),w
  2276  0367  0872               	subwf	(residuo@temp1),f
  2277  0368  02F4               	movf	(residuo@denominator+1),w
  2278  0369  0873               	skipc
  2279  036A  1C03               	decf	(residuo@temp1+1),f
  2280  036B  03F5               	subwf	(residuo@temp1+1),f
  2281  036C  02F5               	line	69
  2282                           ;application.c: 69:  }
  2283                           	
  2284                           l55:	
  2285  036D                     	line	66
  2286                           ;application.c: 66:  while(temp1 > denominator)
  2287                           	movf	(residuo@temp1+1),w
  2288  036D  0875               	subwf	(residuo@denominator+1),w
  2289  036E  0273               	skipz
  2290  036F  1D03               	goto	u635
  2291  0370  2B73               	movf	(residuo@temp1),w
  2292  0371  0874               	subwf	(residuo@denominator),w
  2293  0372  0272               u635:
  2294  0373                     	skipc
  2295  0373  1C03               	goto	u631
  2296  0374  2B76               	goto	u630
  2297  0375  2B77               u631:
  2298  0376                     	goto	l1624
  2299  0376  2B67               u630:
  2300  0377                     	goto	l1626
  2301  0377  2B78               	
  2302                           l57:	
  2303  0378                     	line	70
  2304                           	
  2305                           l1626:	
  2306  0378                     ;application.c: 70:  return temp1;
  2307                           	movf	(residuo@temp1),w
  2308  0378  0874               	goto	l58
  2309  0379  2B7A               	
  2310                           l1628:	
  2311  037A                     	line	71
  2312                           	
  2313                           l58:	
  2314  037A                     	return
  2315  037A  0008               	opt stack 0
  2316                           GLOBAL	__end_of_residuo
  2317                           	__end_of_residuo:
  2318  037B                     	signat	_residuo,8313
  2319                           	global	_delay
  2320                           
  2321 ;; *************** function _delay *****************
  2322 ;; Defined at:
  2323 ;;		line 361 in file "procedures.c"
  2324 ;; Parameters:    Size  Location     Type
  2325 ;;  milis           2    0[COMMON] const int 
  2326 ;; Auto vars:     Size  Location     Type
  2327 ;;  i               2    5[COMMON] int 
  2328 ;;  j               2    3[COMMON] int 
  2329 ;; Return value:  Size  Location     Type
  2330 ;;                  1    wreg      void 
  2331 ;; Registers used:
  2332 ;;		wreg, status,2, btemp+1
  2333 ;; Tracked objects:
  2334 ;;		On entry : 0/0
  2335 ;;		On exit  : 0/0
  2336 ;;		Unchanged: 0/0
  2337 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2338 ;;      Params:         2       0       0       0       0
  2339 ;;      Locals:         4       0       0       0       0
  2340 ;;      Temps:          1       0       0       0       0
  2341 ;;      Totals:         7       0       0       0       0
  2342 ;;Total ram usage:        7 bytes
  2343 ;; Hardware stack levels used:    1
  2344 ;; This function calls:
  2345 ;;		Nothing
  2346 ;; This function is called by:
  2347 ;;		_loop
  2348 ;; This function uses a non-reentrant model
  2349 ;;
  2350                           psect	text6,local,class=CODE,delta=2,merge=1,group=0
  2351                           	file	"procedures.c"
  2352                           	line	361
  2353                           global __ptext6
  2354                           __ptext6:	;psect for function _delay
  2355  0462                     psect	text6
  2356                           	file	"procedures.c"
  2357                           	line	361
  2358                           	global	__size_of_delay
  2359                           	__size_of_delay	equ	__end_of_delay-_delay
  2360  004E                     	
  2361                           _delay:	
  2362  0462                     ;incstack = 0
  2363                           	opt	stack 6
  2364                           ; Regs used in _delay: [wreg+status,2+btemp+1]
  2365                           	line	363
  2366                           	
  2367                           l1634:	
  2368  0462                     ;procedures.c: 361: void delay(const int milis);procedures.c: 362: {;procedures.c: 363: 
                                     for(int j=0;j<milis;j++)
  2369                           	clrf	(delay@j)
  2370  0462  01F3               	clrf	(delay@j+1)
  2371  0463  01F4               	
  2372                           l1636:	
  2373  0464                     	movf	(delay@j+1),w
  2374  0464  0874               	xorlw	80h
  2375  0465  3A80               	movwf	(??_delay+0)+0
  2376  0466  00F2               	movf	(delay@milis+1),w
  2377  0467  0871               	xorlw	80h
  2378  0468  3A80               	subwf	(??_delay+0)+0,w
  2379  0469  0272               	skipz
  2380  046A  1D03               	goto	u655
  2381  046B  2C6E               	movf	(delay@milis),w
  2382  046C  0870               	subwf	(delay@j),w
  2383  046D  0273               u655:
  2384  046E                     
  2385                           	skipc
  2386  046E  1C03               	goto	u651
  2387  046F  2C71               	goto	u650
  2388  0470  2C72               u651:
  2389  0471                     	goto	l1640
  2390  0471  2C74               u650:
  2391  0472                     	goto	l308
  2392  0472  2CAF               	
  2393                           l1638:	
  2394  0473                     	goto	l308
  2395  0473  2CAF               	
  2396                           l304:	
  2397  0474                     	line	366
  2398                           	
  2399                           l1640:	
  2400  0474                     ;procedures.c: 364:     {;procedures.c: 366:         for(int i=0;i<400;i++)
  2401                           	clrf	(delay@i)
  2402  0474  01F5               	clrf	(delay@i+1)
  2403  0475  01F6               	
  2404                           l1642:	
  2405  0476                     	movf	(delay@i+1),w
  2406  0476  0876               	xorlw	80h
  2407  0477  3A80               	movwf	btemp+1
  2408  0478  00FF               	movlw	(01h)^80h
  2409  0479  3081               	subwf	btemp+1,w
  2410  047A  027F               	skipz
  2411  047B  1D03               	goto	u665
  2412  047C  2C7F               	movlw	090h
  2413  047D  3090               	subwf	(delay@i),w
  2414  047E  0275               u665:
  2415  047F                     
  2416                           	skipc
  2417  047F  1C03               	goto	u661
  2418  0480  2C82               	goto	u660
  2419  0481  2C83               u661:
  2420  0482                     	goto	l306
  2421  0482  2C85               u660:
  2422  0483                     	goto	l1650
  2423  0483  2C9A               	
  2424                           l1644:	
  2425  0484                     	goto	l1650
  2426  0484  2C9A               	
  2427                           l306:	
  2428  0485                     	line	368
  2429                           # 368 "procedures.c"
  2430                           NOP ;# 
  2431  0485  0000               psect	text6
  2432                           	line	369
  2433                           	
  2434                           l1646:	
  2435  0486                     ;procedures.c: 369:         }
  2436                           	movlw	01h
  2437  0486  3001               	addwf	(delay@i),f
  2438  0487  07F5               	skipnc
  2439  0488  1803               	incf	(delay@i+1),f
  2440  0489  0AF6               	movlw	0
  2441  048A  3000               	addwf	(delay@i+1),f
  2442  048B  07F6               	
  2443                           l1648:	
  2444  048C                     	movf	(delay@i+1),w
  2445  048C  0876               	xorlw	80h
  2446  048D  3A80               	movwf	btemp+1
  2447  048E  00FF               	movlw	(01h)^80h
  2448  048F  3081               	subwf	btemp+1,w
  2449  0490  027F               	skipz
  2450  0491  1D03               	goto	u675
  2451  0492  2C95               	movlw	090h
  2452  0493  3090               	subwf	(delay@i),w
  2453  0494  0275               u675:
  2454  0495                     
  2455                           	skipc
  2456  0495  1C03               	goto	u671
  2457  0496  2C98               	goto	u670
  2458  0497  2C99               u671:
  2459  0498                     	goto	l306
  2460  0498  2C85               u670:
  2461  0499                     	goto	l1650
  2462  0499  2C9A               	
  2463                           l307:	
  2464  049A                     	line	370
  2465                           	
  2466                           l1650:	
  2467  049A                     ;procedures.c: 370:     }
  2468                           	movlw	01h
  2469  049A  3001               	addwf	(delay@j),f
  2470  049B  07F3               	skipnc
  2471  049C  1803               	incf	(delay@j+1),f
  2472  049D  0AF4               	movlw	0
  2473  049E  3000               	addwf	(delay@j+1),f
  2474  049F  07F4               	movf	(delay@j+1),w
  2475  04A0  0874               	xorlw	80h
  2476  04A1  3A80               	movwf	(??_delay+0)+0
  2477  04A2  00F2               	movf	(delay@milis+1),w
  2478  04A3  0871               	xorlw	80h
  2479  04A4  3A80               	subwf	(??_delay+0)+0,w
  2480  04A5  0272               	skipz
  2481  04A6  1D03               	goto	u685
  2482  04A7  2CAA               	movf	(delay@milis),w
  2483  04A8  0870               	subwf	(delay@j),w
  2484  04A9  0273               u685:
  2485  04AA                     
  2486                           	skipc
  2487  04AA  1C03               	goto	u681
  2488  04AB  2CAD               	goto	u680
  2489  04AC  2CAE               u681:
  2490  04AD                     	goto	l1640
  2491  04AD  2C74               u680:
  2492  04AE                     	goto	l308
  2493  04AE  2CAF               	
  2494                           l305:	
  2495  04AF                     	line	371
  2496                           	
  2497                           l308:	
  2498  04AF                     	return
  2499  04AF  0008               	opt stack 0
  2500                           GLOBAL	__end_of_delay
  2501                           	__end_of_delay:
  2502  04B0                     	signat	_delay,4217
  2503                           	global	_cocienteEntero
  2504                           
  2505 ;; *************** function _cocienteEntero *****************
  2506 ;; Defined at:
  2507 ;;		line 73 in file "application.c"
  2508 ;; Parameters:    Size  Location     Type
  2509 ;;  numerator       2    0[COMMON] unsigned int 
  2510 ;;  denominator     2    2[COMMON] unsigned int 
  2511 ;; Auto vars:     Size  Location     Type
  2512 ;;  temp1           2    6[COMMON] unsigned int 
  2513 ;;  cont            2    4[COMMON] unsigned int 
  2514 ;; Return value:  Size  Location     Type
  2515 ;;                  1    wreg      unsigned char 
  2516 ;; Registers used:
  2517 ;;		wreg, status,2
  2518 ;; Tracked objects:
  2519 ;;		On entry : 0/0
  2520 ;;		On exit  : 0/0
  2521 ;;		Unchanged: 0/0
  2522 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2523 ;;      Params:         4       0       0       0       0
  2524 ;;      Locals:         4       0       0       0       0
  2525 ;;      Temps:          0       0       0       0       0
  2526 ;;      Totals:         8       0       0       0       0
  2527 ;;Total ram usage:        8 bytes
  2528 ;; Hardware stack levels used:    1
  2529 ;; This function calls:
  2530 ;;		Nothing
  2531 ;; This function is called by:
  2532 ;;		_loop
  2533 ;; This function uses a non-reentrant model
  2534 ;;
  2535                           psect	text7,local,class=CODE,delta=2,merge=1,group=0
  2536                           	file	"application.c"
  2537                           	line	73
  2538                           global __ptext7
  2539                           __ptext7:	;psect for function _cocienteEntero
  2540  037B                     psect	text7
  2541                           	file	"application.c"
  2542                           	line	73
  2543                           	global	__size_of_cocienteEntero
  2544                           	__size_of_cocienteEntero	equ	__end_of_cocienteEntero-_cocienteEntero
  2545  0021                     	
  2546                           _cocienteEntero:	
  2547  037B                     ;incstack = 0
  2548                           	opt	stack 6
  2549                           ; Regs used in _cocienteEntero: [wreg+status,2]
  2550                           	line	75
  2551                           	
  2552                           l1612:	
  2553  037B                     ;application.c: 73: char cocienteEntero(unsigned int numerator, unsigned int denominator
                                 );application.c: 74: {;application.c: 75:  unsigned int cont = 0;
  2554                           	clrf	(cocienteEntero@cont)
  2555  037B  01F4               	clrf	(cocienteEntero@cont+1)
  2556  037C  01F5               	line	76
  2557                           	
  2558                           l1614:	
  2559  037D                     ;application.c: 76:  unsigned int temp1 = numerator;
  2560                           	movf	(cocienteEntero@numerator+1),w
  2561  037D  0871               	movwf	(cocienteEntero@temp1+1)
  2562  037E  00F7               	movf	(cocienteEntero@numerator),w
  2563  037F  0870               	movwf	(cocienteEntero@temp1)
  2564  0380  00F6               	line	77
  2565                           ;application.c: 77:  while (temp1 > denominator)
  2566                           	goto	l61
  2567  0381  2B8E               	
  2568                           l62:	
  2569  0382                     	line	79
  2570                           	
  2571                           l1616:	
  2572  0382                     ;application.c: 78:  {;application.c: 79:   temp1 -= denominator;
  2573                           	movf	(cocienteEntero@denominator),w
  2574  0382  0872               	subwf	(cocienteEntero@temp1),f
  2575  0383  02F6               	movf	(cocienteEntero@denominator+1),w
  2576  0384  0873               	skipc
  2577  0385  1C03               	decf	(cocienteEntero@temp1+1),f
  2578  0386  03F7               	subwf	(cocienteEntero@temp1+1),f
  2579  0387  02F7               	line	80
  2580                           ;application.c: 80:   cont++;
  2581                           	movlw	01h
  2582  0388  3001               	addwf	(cocienteEntero@cont),f
  2583  0389  07F4               	skipnc
  2584  038A  1803               	incf	(cocienteEntero@cont+1),f
  2585  038B  0AF5               	movlw	0
  2586  038C  3000               	addwf	(cocienteEntero@cont+1),f
  2587  038D  07F5               	line	81
  2588                           ;application.c: 81:  }
  2589                           	
  2590                           l61:	
  2591  038E                     	line	77
  2592                           ;application.c: 77:  while (temp1 > denominator)
  2593                           	movf	(cocienteEntero@temp1+1),w
  2594  038E  0877               	subwf	(cocienteEntero@denominator+1),w
  2595  038F  0273               	skipz
  2596  0390  1D03               	goto	u625
  2597  0391  2B94               	movf	(cocienteEntero@temp1),w
  2598  0392  0876               	subwf	(cocienteEntero@denominator),w
  2599  0393  0272               u625:
  2600  0394                     	skipc
  2601  0394  1C03               	goto	u621
  2602  0395  2B97               	goto	u620
  2603  0396  2B98               u621:
  2604  0397                     	goto	l1616
  2605  0397  2B82               u620:
  2606  0398                     	goto	l1618
  2607  0398  2B99               	
  2608                           l63:	
  2609  0399                     	line	82
  2610                           	
  2611                           l1618:	
  2612  0399                     ;application.c: 82:  return cont;
  2613                           	movf	(cocienteEntero@cont),w
  2614  0399  0874               	goto	l64
  2615  039A  2B9B               	
  2616                           l1620:	
  2617  039B                     	line	83
  2618                           	
  2619                           l64:	
  2620  039B                     	return
  2621  039B  0008               	opt stack 0
  2622                           GLOBAL	__end_of_cocienteEntero
  2623                           	__end_of_cocienteEntero:
  2624  039C                     	signat	_cocienteEntero,8313
  2625                           	global	_analogRead
  2626                           
  2627 ;; *************** function _analogRead *****************
  2628 ;; Defined at:
  2629 ;;		line 283 in file "procedures.c"
  2630 ;; Parameters:    Size  Location     Type
  2631 ;;  channel         1    wreg     unsigned char 
  2632 ;; Auto vars:     Size  Location     Type
  2633 ;;  channel         1    4[COMMON] unsigned char 
  2634 ;; Return value:  Size  Location     Type
  2635 ;;                  2    0[COMMON] unsigned int 
  2636 ;; Registers used:
  2637 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  2638 ;; Tracked objects:
  2639 ;;		On entry : 0/0
  2640 ;;		On exit  : 0/0
  2641 ;;		Unchanged: 0/0
  2642 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2643 ;;      Params:         2       0       0       0       0
  2644 ;;      Locals:         1       0       0       0       0
  2645 ;;      Temps:          2       0       0       0       0
  2646 ;;      Totals:         5       0       0       0       0
  2647 ;;Total ram usage:        5 bytes
  2648 ;; Hardware stack levels used:    1
  2649 ;; This function calls:
  2650 ;;		Nothing
  2651 ;; This function is called by:
  2652 ;;		_loop
  2653 ;; This function uses a non-reentrant model
  2654 ;;
  2655                           psect	text8,local,class=CODE,delta=2,merge=1,group=0
  2656                           	file	"procedures.c"
  2657                           	line	283
  2658                           global __ptext8
  2659                           __ptext8:	;psect for function _analogRead
  2660  051F                     psect	text8
  2661                           	file	"procedures.c"
  2662                           	line	283
  2663                           	global	__size_of_analogRead
  2664                           	__size_of_analogRead	equ	__end_of_analogRead-_analogRead
  2665  007E                     	
  2666                           _analogRead:	
  2667  051F                     ;incstack = 0
  2668                           	opt	stack 6
  2669                           ; Regs used in _analogRead: [wreg-fsr0h+status,2+status,0]
  2670                           ;analogRead@channel stored from wreg
  2671                           	movwf	(analogRead@channel)
  2672  051F  00F4               	line	285
  2673                           	
  2674                           l1562:	
  2675  0520                     ;procedures.c: 283: unsigned int analogRead(char channel);procedures.c: 284: {;procedure
                                 s.c: 285:     switch(channel)
  2676                           	goto	l1606
  2677  0520  2D83               	line	287
  2678                           ;procedures.c: 286:     {;procedures.c: 287:         case 0:
  2679                           	
  2680                           l268:	
  2681  0521                     	line	288
  2682                           	
  2683                           l1564:	
  2684  0521                     ;procedures.c: 288:             ADCON0 &= 0x45;
  2685                           	movlw	low(045h)
  2686  0521  3045               	movwf	(??_analogRead+0)+0
  2687  0522  00F2               	movf	(??_analogRead+0)+0,w
  2688  0523  0872               	bcf	status, 5	;RP0=0, select bank0
  2689  0524  1283               	bcf	status, 6	;RP1=0, select bank0
  2690  0525  1303               	andwf	(31),f	;volatile
  2691  0526  059F               	line	289
  2692                           ;procedures.c: 289:             while(ADCON0bits.GO_nDONE != 0)
  2693                           	goto	l269
  2694  0527  2D28               	
  2695                           l270:	
  2696  0528                     	line	291
  2697                           ;procedures.c: 290:             {;procedures.c: 291:             }
  2698                           	
  2699                           l269:	
  2700  0528                     	line	289
  2701                           ;procedures.c: 289:             while(ADCON0bits.GO_nDONE != 0)
  2702                           	btfsc	(31),2	;volatile
  2703  0528  191F               	goto	u571
  2704  0529  2D2B               	goto	u570
  2705  052A  2D2C               u571:
  2706  052B                     	goto	l269
  2707  052B  2D28               u570:
  2708  052C                     	goto	l1566
  2709  052C  2D2D               	
  2710                           l271:	
  2711  052D                     	line	292
  2712                           	
  2713                           l1566:	
  2714  052D                     ;procedures.c: 292:             return (ADRESH << 8)+ ADRESL;
  2715                           	movf	(30),w	;volatile
  2716  052D  081E               	movwf	(?_analogRead+1)
  2717  052E  00F1               	bsf	status, 5	;RP0=1, select bank1
  2718  052F  1683               	bcf	status, 6	;RP1=0, select bank1
  2719  0530  1303               	movf	(158)^080h,w	;volatile
  2720  0531  081E               	movwf	(?_analogRead)
  2721  0532  00F0               	goto	l272
  2722  0533  2D9C               	
  2723                           l1568:	
  2724  0534                     	goto	l272
  2725  0534  2D9C               	line	293
  2726                           	
  2727                           l1570:	
  2728  0535                     ;procedures.c: 293:             break;
  2729                           	goto	l272
  2730  0535  2D9C               	line	294
  2731                           ;procedures.c: 294:         case 1:
  2732                           	
  2733                           l274:	
  2734  0536                     	line	295
  2735                           	
  2736                           l1572:	
  2737  0536                     ;procedures.c: 295:             ADCON0 = 0x4D;
  2738                           	movlw	low(04Dh)
  2739  0536  304D               	bcf	status, 5	;RP0=0, select bank0
  2740  0537  1283               	bcf	status, 6	;RP1=0, select bank0
  2741  0538  1303               	movwf	(31)	;volatile
  2742  0539  009F               	line	296
  2743                           ;procedures.c: 296:             while(ADCON0bits.GO_nDONE != 0)
  2744                           	goto	l275
  2745  053A  2D3B               	
  2746                           l276:	
  2747  053B                     	line	299
  2748                           ;procedures.c: 297:             {;procedures.c: 299:             }
  2749                           	
  2750                           l275:	
  2751  053B                     	line	296
  2752                           ;procedures.c: 296:             while(ADCON0bits.GO_nDONE != 0)
  2753                           	btfsc	(31),2	;volatile
  2754  053B  191F               	goto	u581
  2755  053C  2D3E               	goto	u580
  2756  053D  2D3F               u581:
  2757  053E                     	goto	l275
  2758  053E  2D3B               u580:
  2759  053F                     	goto	l1574
  2760  053F  2D40               	
  2761                           l277:	
  2762  0540                     	line	300
  2763                           	
  2764                           l1574:	
  2765  0540                     ;procedures.c: 300:             return (ADRESH << 8)+ ADRESL;
  2766                           	movf	(30),w	;volatile
  2767  0540  081E               	movwf	(?_analogRead+1)
  2768  0541  00F1               	bsf	status, 5	;RP0=1, select bank1
  2769  0542  1683               	bcf	status, 6	;RP1=0, select bank1
  2770  0543  1303               	movf	(158)^080h,w	;volatile
  2771  0544  081E               	movwf	(?_analogRead)
  2772  0545  00F0               	goto	l272
  2773  0546  2D9C               	
  2774                           l1576:	
  2775  0547                     	goto	l272
  2776  0547  2D9C               	line	301
  2777                           	
  2778                           l1578:	
  2779  0548                     ;procedures.c: 301:             break;
  2780                           	goto	l272
  2781  0548  2D9C               	line	302
  2782                           ;procedures.c: 302:         case 2:
  2783                           	
  2784                           l278:	
  2785  0549                     	line	303
  2786                           	
  2787                           l1580:	
  2788  0549                     ;procedures.c: 303:             ADCON0 = 0x55;
  2789                           	movlw	low(055h)
  2790  0549  3055               	bcf	status, 5	;RP0=0, select bank0
  2791  054A  1283               	bcf	status, 6	;RP1=0, select bank0
  2792  054B  1303               	movwf	(31)	;volatile
  2793  054C  009F               	line	304
  2794                           ;procedures.c: 304:             while(ADCON0bits.GO_nDONE != 0)
  2795                           	goto	l279
  2796  054D  2D4E               	
  2797                           l280:	
  2798  054E                     	line	306
  2799                           ;procedures.c: 305:             {;procedures.c: 306:             }
  2800                           	
  2801                           l279:	
  2802  054E                     	line	304
  2803                           ;procedures.c: 304:             while(ADCON0bits.GO_nDONE != 0)
  2804                           	btfsc	(31),2	;volatile
  2805  054E  191F               	goto	u591
  2806  054F  2D51               	goto	u590
  2807  0550  2D52               u591:
  2808  0551                     	goto	l279
  2809  0551  2D4E               u590:
  2810  0552                     	goto	l1582
  2811  0552  2D53               	
  2812                           l281:	
  2813  0553                     	line	307
  2814                           	
  2815                           l1582:	
  2816  0553                     ;procedures.c: 307:             return (ADRESH << 8)+ ADRESL;
  2817                           	movf	(30),w	;volatile
  2818  0553  081E               	movwf	(?_analogRead+1)
  2819  0554  00F1               	bsf	status, 5	;RP0=1, select bank1
  2820  0555  1683               	bcf	status, 6	;RP1=0, select bank1
  2821  0556  1303               	movf	(158)^080h,w	;volatile
  2822  0557  081E               	movwf	(?_analogRead)
  2823  0558  00F0               	goto	l272
  2824  0559  2D9C               	
  2825                           l1584:	
  2826  055A                     	goto	l272
  2827  055A  2D9C               	line	308
  2828                           	
  2829                           l1586:	
  2830  055B                     ;procedures.c: 308:             break;
  2831                           	goto	l272
  2832  055B  2D9C               	line	309
  2833                           ;procedures.c: 309:         case 3:
  2834                           	
  2835                           l282:	
  2836  055C                     	line	310
  2837                           	
  2838                           l1588:	
  2839  055C                     ;procedures.c: 310:             ADCON0 = 0x5D;
  2840                           	movlw	low(05Dh)
  2841  055C  305D               	bcf	status, 5	;RP0=0, select bank0
  2842  055D  1283               	bcf	status, 6	;RP1=0, select bank0
  2843  055E  1303               	movwf	(31)	;volatile
  2844  055F  009F               	line	311
  2845                           ;procedures.c: 311:             while(ADCON0bits.GO_nDONE != 0)
  2846                           	goto	l283
  2847  0560  2D61               	
  2848                           l284:	
  2849  0561                     	line	313
  2850                           ;procedures.c: 312:             {;procedures.c: 313:             }
  2851                           	
  2852                           l283:	
  2853  0561                     	line	311
  2854                           ;procedures.c: 311:             while(ADCON0bits.GO_nDONE != 0)
  2855                           	btfsc	(31),2	;volatile
  2856  0561  191F               	goto	u601
  2857  0562  2D64               	goto	u600
  2858  0563  2D65               u601:
  2859  0564                     	goto	l283
  2860  0564  2D61               u600:
  2861  0565                     	goto	l1590
  2862  0565  2D66               	
  2863                           l285:	
  2864  0566                     	line	314
  2865                           	
  2866                           l1590:	
  2867  0566                     ;procedures.c: 314:             return (ADRESH << 8)+ ADRESL;
  2868                           	movf	(30),w	;volatile
  2869  0566  081E               	movwf	(?_analogRead+1)
  2870  0567  00F1               	bsf	status, 5	;RP0=1, select bank1
  2871  0568  1683               	bcf	status, 6	;RP1=0, select bank1
  2872  0569  1303               	movf	(158)^080h,w	;volatile
  2873  056A  081E               	movwf	(?_analogRead)
  2874  056B  00F0               	goto	l272
  2875  056C  2D9C               	
  2876                           l1592:	
  2877  056D                     	goto	l272
  2878  056D  2D9C               	line	315
  2879                           	
  2880                           l1594:	
  2881  056E                     ;procedures.c: 315:             break;
  2882                           	goto	l272
  2883  056E  2D9C               	line	316
  2884                           ;procedures.c: 316:         case 4:
  2885                           	
  2886                           l286:	
  2887  056F                     	line	317
  2888                           	
  2889                           l1596:	
  2890  056F                     ;procedures.c: 317:             ADCON0 = 0x65;
  2891                           	movlw	low(065h)
  2892  056F  3065               	bcf	status, 5	;RP0=0, select bank0
  2893  0570  1283               	bcf	status, 6	;RP1=0, select bank0
  2894  0571  1303               	movwf	(31)	;volatile
  2895  0572  009F               	line	318
  2896                           ;procedures.c: 318:             while(ADCON0bits.GO_nDONE != 0)
  2897                           	goto	l287
  2898  0573  2D74               	
  2899                           l288:	
  2900  0574                     	line	320
  2901                           ;procedures.c: 319:             {;procedures.c: 320:             }
  2902                           	
  2903                           l287:	
  2904  0574                     	line	318
  2905                           ;procedures.c: 318:             while(ADCON0bits.GO_nDONE != 0)
  2906                           	btfsc	(31),2	;volatile
  2907  0574  191F               	goto	u611
  2908  0575  2D77               	goto	u610
  2909  0576  2D78               u611:
  2910  0577                     	goto	l287
  2911  0577  2D74               u610:
  2912  0578                     	goto	l1598
  2913  0578  2D79               	
  2914                           l289:	
  2915  0579                     	line	321
  2916                           	
  2917                           l1598:	
  2918  0579                     ;procedures.c: 321:             return (ADRESH << 8)+ ADRESL;
  2919                           	movf	(30),w	;volatile
  2920  0579  081E               	movwf	(?_analogRead+1)
  2921  057A  00F1               	bsf	status, 5	;RP0=1, select bank1
  2922  057B  1683               	bcf	status, 6	;RP1=0, select bank1
  2923  057C  1303               	movf	(158)^080h,w	;volatile
  2924  057D  081E               	movwf	(?_analogRead)
  2925  057E  00F0               	goto	l272
  2926  057F  2D9C               	
  2927                           l1600:	
  2928  0580                     	goto	l272
  2929  0580  2D9C               	line	322
  2930                           	
  2931                           l1602:	
  2932  0581                     ;procedures.c: 322:             break;
  2933                           	goto	l272
  2934  0581  2D9C               	line	323
  2935                           	
  2936                           l1604:	
  2937  0582                     ;procedures.c: 323:     }
  2938                           	goto	l272
  2939  0582  2D9C               	
  2940                           l267:	
  2941  0583                     	
  2942                           l1606:	
  2943  0583                     	movf	(analogRead@channel),w
  2944  0583  0874               	movwf	(??_analogRead+0)+0
  2945  0584  00F2               	clrf	(??_analogRead+0)+0+1
  2946  0585  01F3               	; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-s
                                 witches
  2947                           ; Switch size 1, requested type "space"
  2948                           ; Number of cases is 1, Range of values is 0 to 0
  2949                           ; switch strategies available:
  2950                           ; Name         Instructions Cycles
  2951                           ; simple_byte            4     3 (average)
  2952                           ; direct_byte           11     8 (fixed)
  2953                           ; jumptable            260     6 (fixed)
  2954                           ;	Chosen strategy is simple_byte
  2955                           
  2956                           	movf 1+(??_analogRead+0)+0,w
  2957  0586  0873               	opt asmopt_push
  2958                           	opt asmopt_off
  2959                           	xorlw	0^0	; case 0
  2960  0587  3A00               	skipnz
  2961  0588  1903               	goto	l1784
  2962  0589  2D8B               	goto	l272
  2963  058A  2D9C               	opt asmopt_pop
  2964                           	
  2965                           l1784:	
  2966  058B                     ; Switch size 1, requested type "space"
  2967                           ; Number of cases is 5, Range of values is 0 to 4
  2968                           ; switch strategies available:
  2969                           ; Name         Instructions Cycles
  2970                           ; simple_byte           16     9 (average)
  2971                           ; direct_byte           23     8 (fixed)
  2972                           ; jumptable            260     6 (fixed)
  2973                           ;	Chosen strategy is simple_byte
  2974                           
  2975                           	movf 0+(??_analogRead+0)+0,w
  2976  058B  0872               	opt asmopt_push
  2977                           	opt asmopt_off
  2978                           	xorlw	0^0	; case 0
  2979  058C  3A00               	skipnz
  2980  058D  1903               	goto	l1564
  2981  058E  2D21               	xorlw	1^0	; case 1
  2982  058F  3A01               	skipnz
  2983  0590  1903               	goto	l1572
  2984  0591  2D36               	xorlw	2^1	; case 2
  2985  0592  3A03               	skipnz
  2986  0593  1903               	goto	l1580
  2987  0594  2D49               	xorlw	3^2	; case 3
  2988  0595  3A01               	skipnz
  2989  0596  1903               	goto	l1588
  2990  0597  2D5C               	xorlw	4^3	; case 4
  2991  0598  3A07               	skipnz
  2992  0599  1903               	goto	l1596
  2993  059A  2D6F               	goto	l272
  2994  059B  2D9C               	opt asmopt_pop
  2995                           
  2996                           	
  2997                           l273:	
  2998  059C                     	line	324
  2999                           	
  3000                           l272:	
  3001  059C                     	return
  3002  059C  0008               	opt stack 0
  3003                           GLOBAL	__end_of_analogRead
  3004                           	__end_of_analogRead:
  3005  059D                     	signat	_analogRead,4218
  3006                           	global	_SerialWrite
  3007                           
  3008 ;; *************** function _SerialWrite *****************
  3009 ;; Defined at:
  3010 ;;		line 372 in file "procedures.c"
  3011 ;; Parameters:    Size  Location     Type
  3012 ;;  data            1    wreg     unsigned char 
  3013 ;; Auto vars:     Size  Location     Type
  3014 ;;  data            1    0[COMMON] unsigned char 
  3015 ;; Return value:  Size  Location     Type
  3016 ;;                  1    wreg      void 
  3017 ;; Registers used:
  3018 ;;		wreg
  3019 ;; Tracked objects:
  3020 ;;		On entry : 0/0
  3021 ;;		On exit  : 0/0
  3022 ;;		Unchanged: 0/0
  3023 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3024 ;;      Params:         0       0       0       0       0
  3025 ;;      Locals:         1       0       0       0       0
  3026 ;;      Temps:          0       0       0       0       0
  3027 ;;      Totals:         1       0       0       0       0
  3028 ;;Total ram usage:        1 bytes
  3029 ;; Hardware stack levels used:    1
  3030 ;; This function calls:
  3031 ;;		Nothing
  3032 ;; This function is called by:
  3033 ;;		_loop
  3034 ;;		_SerialWriteText
  3035 ;; This function uses a non-reentrant model
  3036 ;;
  3037                           psect	text9,local,class=CODE,delta=2,merge=1,group=0
  3038                           	line	372
  3039                           global __ptext9
  3040                           __ptext9:	;psect for function _SerialWrite
  3041  0328                     psect	text9
  3042                           	file	"procedures.c"
  3043                           	line	372
  3044                           	global	__size_of_SerialWrite
  3045                           	__size_of_SerialWrite	equ	__end_of_SerialWrite-_SerialWrite
  3046  000E                     	
  3047                           _SerialWrite:	
  3048  0328                     ;incstack = 0
  3049                           	opt	stack 6
  3050                           ; Regs used in _SerialWrite: [wreg]
  3051                           ;SerialWrite@data stored from wreg
  3052                           	movwf	(SerialWrite@data)
  3053  0328  00F0               	line	374
  3054                           	
  3055                           l1630:	
  3056  0329                     ;procedures.c: 372: void SerialWrite(char data);procedures.c: 373: {;procedures.c: 374: 
                                   while(!TRMT);
  3057                           	goto	l311
  3058  0329  2B2A               	
  3059                           l312:	
  3060  032A                     	
  3061                           l311:	
  3062  032A                     	bsf	status, 5	;RP0=1, select bank1
  3063  032A  1683               	bcf	status, 6	;RP1=0, select bank1
  3064  032B  1303               	btfss	(1217/8)^080h,(1217)&7	;volatile
  3065  032C  1C98               	goto	u641
  3066  032D  2B2F               	goto	u640
  3067  032E  2B30               u641:
  3068  032F                     	goto	l311
  3069  032F  2B2A               u640:
  3070  0330                     	goto	l1632
  3071  0330  2B31               	
  3072                           l313:	
  3073  0331                     	line	375
  3074                           	
  3075                           l1632:	
  3076  0331                     ;procedures.c: 375:   TXREG = data;
  3077                           	movf	(SerialWrite@data),w
  3078  0331  0870               	bcf	status, 5	;RP0=0, select bank0
  3079  0332  1283               	bcf	status, 6	;RP1=0, select bank0
  3080  0333  1303               	movwf	(25)	;volatile
  3081  0334  0099               	line	376
  3082                           	
  3083                           l314:	
  3084  0335                     	return
  3085  0335  0008               	opt stack 0
  3086                           GLOBAL	__end_of_SerialWrite
  3087                           	__end_of_SerialWrite:
  3088  0336                     	signat	_SerialWrite,4217
  3089                           	global	_SerialAvailable
  3090                           
  3091 ;; *************** function _SerialAvailable *****************
  3092 ;; Defined at:
  3093 ;;		line 381 in file "procedures.c"
  3094 ;; Parameters:    Size  Location     Type
  3095 ;;		None
  3096 ;; Auto vars:     Size  Location     Type
  3097 ;;		None
  3098 ;; Return value:  Size  Location     Type
  3099 ;;                  1    wreg      unsigned char 
  3100 ;; Registers used:
  3101 ;;		wreg
  3102 ;; Tracked objects:
  3103 ;;		On entry : 0/0
  3104 ;;		On exit  : 0/0
  3105 ;;		Unchanged: 0/0
  3106 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3107 ;;      Params:         0       0       0       0       0
  3108 ;;      Locals:         0       0       0       0       0
  3109 ;;      Temps:          0       0       0       0       0
  3110 ;;      Totals:         0       0       0       0       0
  3111 ;;Total ram usage:        0 bytes
  3112 ;; Hardware stack levels used:    1
  3113 ;; This function calls:
  3114 ;;		Nothing
  3115 ;; This function is called by:
  3116 ;;		_loop
  3117 ;; This function uses a non-reentrant model
  3118 ;;
  3119                           psect	text10,local,class=CODE,delta=2,merge=1,group=0
  3120                           	line	381
  3121                           global __ptext10
  3122                           __ptext10:	;psect for function _SerialAvailable
  3123  0303                     psect	text10
  3124                           	file	"procedures.c"
  3125                           	line	381
  3126                           	global	__size_of_SerialAvailable
  3127                           	__size_of_SerialAvailable	equ	__end_of_SerialAvailable-_SerialAvailable
  3128  0007                     	
  3129                           _SerialAvailable:	
  3130  0303                     ;incstack = 0
  3131                           	opt	stack 6
  3132                           ; Regs used in _SerialAvailable: [wreg]
  3133                           	line	383
  3134                           	
  3135                           l1558:	
  3136  0303                     ;procedures.c: 383:   return RCIF;
  3137                           	movlw	0
  3138  0303  3000               	bcf	status, 5	;RP0=0, select bank0
  3139  0304  1283               	bcf	status, 6	;RP1=0, select bank0
  3140  0305  1303               	btfsc	(101/8),(101)&7	;volatile
  3141  0306  1A8C               	movlw	1
  3142  0307  3001               	goto	l320
  3143  0308  2B09               	
  3144                           l1560:	
  3145  0309                     	line	384
  3146                           	
  3147                           l320:	
  3148  0309                     	return
  3149  0309  0008               	opt stack 0
  3150                           GLOBAL	__end_of_SerialAvailable
  3151                           	__end_of_SerialAvailable:
  3152  030A                     	signat	_SerialAvailable,89
  3153                           	global	_configuracionInicial
  3154                           
  3155 ;; *************** function _configuracionInicial *****************
  3156 ;; Defined at:
  3157 ;;		line 17 in file "procedures.c"
  3158 ;; Parameters:    Size  Location     Type
  3159 ;;		None
  3160 ;; Auto vars:     Size  Location     Type
  3161 ;;		None
  3162 ;; Return value:  Size  Location     Type
  3163 ;;                  1    wreg      void 
  3164 ;; Registers used:
  3165 ;;		wreg, status,2, status,0, pclath, cstack
  3166 ;; Tracked objects:
  3167 ;;		On entry : 0/0
  3168 ;;		On exit  : 0/0
  3169 ;;		Unchanged: 0/0
  3170 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3171 ;;      Params:         0       0       0       0       0
  3172 ;;      Locals:         0       0       0       0       0
  3173 ;;      Temps:          0       0       0       0       0
  3174 ;;      Totals:         0       0       0       0       0
  3175 ;;Total ram usage:        0 bytes
  3176 ;; Hardware stack levels used:    1
  3177 ;; Hardware stack levels required when called:    2
  3178 ;; This function calls:
  3179 ;;		_PWM1_Init
  3180 ;;		_PWM1_Start
  3181 ;;		_PWM2_Init
  3182 ;;		_PWM2_Start
  3183 ;; This function is called by:
  3184 ;;		_main
  3185 ;; This function uses a non-reentrant model
  3186 ;;
  3187                           psect	text11,local,class=CODE,delta=2,merge=1,group=0
  3188                           	line	17
  3189                           global __ptext11
  3190                           __ptext11:	;psect for function _configuracionInicial
  3191  041E                     psect	text11
  3192                           	file	"procedures.c"
  3193                           	line	17
  3194                           	global	__size_of_configuracionInicial
  3195                           	__size_of_configuracionInicial	equ	__end_of_configuracionInicial-_configuracionInicial

  3196  0044                     	
  3197                           _configuracionInicial:	
  3198  041E                     ;incstack = 0
  3199                           	opt	stack 5
  3200                           ; Regs used in _configuracionInicial: [wreg+status,2+status,0+pclath+cstack]
  3201                           	line	20
  3202                           	
  3203                           l1686:	
  3204  041E                     ;procedures.c: 20:     ADCON0 = 0x41;
  3205                           	movlw	low(041h)
  3206  041E  3041               	bcf	status, 5	;RP0=0, select bank0
  3207  041F  1283               	bcf	status, 6	;RP1=0, select bank0
  3208  0420  1303               	movwf	(31)	;volatile
  3209  0421  009F               	line	21
  3210                           ;procedures.c: 21:     ADCON1 = 0x82;
  3211                           	movlw	low(082h)
  3212  0422  3082               	bsf	status, 5	;RP0=1, select bank1
  3213  0423  1683               	bcf	status, 6	;RP1=0, select bank1
  3214  0424  1303               	movwf	(159)^080h	;volatile
  3215  0425  009F               	line	23
  3216                           # 23 "procedures.c"
  3217                           CLRF PORTA ;# 
  3218  0426  0185               	line	24
  3219                           # 24 "procedures.c"
  3220                           MOVLW 0x3F ;# 
  3221  0427  303F               	line	25
  3222                           # 25 "procedures.c"
  3223                           MOVWF TRISA ;# 
  3224  0428  0085               	line	27
  3225                           # 27 "procedures.c"
  3226                           CLRF PORTB ;# 
  3227  0429  0186               	line	28
  3228                           # 28 "procedures.c"
  3229                           MOVLW 0xFF ;# 
  3230  042A  30FF               	line	29
  3231                           # 29 "procedures.c"
  3232                           MOVWF TRISB ;# 
  3233  042B  0086               	line	31
  3234                           # 31 "procedures.c"
  3235                           CLRF PORTC ;# 
  3236  042C  0187               	line	32
  3237                           # 32 "procedures.c"
  3238                           MOVLW 0xFF ;# 
  3239  042D  30FF               	line	33
  3240                           # 33 "procedures.c"
  3241                           MOVWF TRISC ;# 
  3242  042E  0087               	line	35
  3243                           # 35 "procedures.c"
  3244                           CLRF PORTD ;# 
  3245  042F  0188               	line	36
  3246                           # 36 "procedures.c"
  3247                           MOVLW 0xFF ;# 
  3248  0430  30FF               	line	37
  3249                           # 37 "procedures.c"
  3250                           MOVF TRISD ;# 
  3251  0431  0888               psect	text11
  3252                           	line	38
  3253                           	
  3254                           l1688:	
  3255  0432                     ;procedures.c: 38:     PORTE = 0x00;
  3256                           	bcf	status, 5	;RP0=0, select bank0
  3257  0432  1283               	bcf	status, 6	;RP1=0, select bank0
  3258  0433  1303               	clrf	(9)	;volatile
  3259  0434  0189               	line	39
  3260                           	
  3261                           l1690:	
  3262  0435                     ;procedures.c: 39:     TRISE = 0x07;
  3263                           	movlw	low(07h)
  3264  0435  3007               	bsf	status, 5	;RP0=1, select bank1
  3265  0436  1683               	bcf	status, 6	;RP1=0, select bank1
  3266  0437  1303               	movwf	(137)^080h	;volatile
  3267  0438  0089               	line	40
  3268                           	
  3269                           l1692:	
  3270  0439                     ;procedures.c: 40:     PWM1_Init(1500);
  3271                           	movlw	0
  3272  0439  3000               	bcf	status, 5	;RP0=0, select bank0
  3273  043A  1283               	bcf	status, 6	;RP1=0, select bank0
  3274  043B  1303               	movwf	(PWM1_Init@fre+3)
  3275  043C  00B9               	movlw	0
  3276  043D  3000               	movwf	(PWM1_Init@fre+2)
  3277  043E  00B8               	movlw	05h
  3278  043F  3005               	movwf	(PWM1_Init@fre+1)
  3279  0440  00B7               	movlw	0DCh
  3280  0441  30DC               	movwf	(PWM1_Init@fre)
  3281  0442  00B6               
  3282                           	fcall	_PWM1_Init
  3283  0443  120A  118A  239C  120A  118A  	line	41
  3284                           	
  3285                           l1694:	
  3286  0448                     ;procedures.c: 41:     PWM2_Init(1500);
  3287                           	movlw	0
  3288  0448  3000               	bcf	status, 5	;RP0=0, select bank0
  3289  0449  1283               	bcf	status, 6	;RP1=0, select bank0
  3290  044A  1303               	movwf	(PWM2_Init@fre+3)
  3291  044B  00B9               	movlw	0
  3292  044C  3000               	movwf	(PWM2_Init@fre+2)
  3293  044D  00B8               	movlw	05h
  3294  044E  3005               	movwf	(PWM2_Init@fre+1)
  3295  044F  00B7               	movlw	0DCh
  3296  0450  30DC               	movwf	(PWM2_Init@fre)
  3297  0451  00B6               
  3298                           	fcall	_PWM2_Init
  3299  0452  120A  118A  23DD  120A  118A  	line	42
  3300                           	
  3301                           l1696:	
  3302  0457                     ;procedures.c: 42:     PWM1_Start();
  3303                           	fcall	_PWM1_Start
  3304  0457  120A  118A  2312  120A  118A  	line	43
  3305                           	
  3306                           l1698:	
  3307  045C                     ;procedures.c: 43:     PWM2_Start();
  3308                           	fcall	_PWM2_Start
  3309  045C  120A  118A  231D  120A  118A  	line	45
  3310                           	
  3311                           l177:	
  3312  0461                     	return
  3313  0461  0008               	opt stack 0
  3314                           GLOBAL	__end_of_configuracionInicial
  3315                           	__end_of_configuracionInicial:
  3316  0462                     	signat	_configuracionInicial,89
  3317                           	global	_PWM2_Start
  3318                           
  3319 ;; *************** function _PWM2_Start *****************
  3320 ;; Defined at:
  3321 ;;		line 464 in file "procedures.c"
  3322 ;; Parameters:    Size  Location     Type
  3323 ;;		None
  3324 ;; Auto vars:     Size  Location     Type
  3325 ;;		None
  3326 ;; Return value:  Size  Location     Type
  3327 ;;                  1    wreg      void 
  3328 ;; Registers used:
  3329 ;;		None
  3330 ;; Tracked objects:
  3331 ;;		On entry : 0/0
  3332 ;;		On exit  : 0/0
  3333 ;;		Unchanged: 0/0
  3334 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3335 ;;      Params:         0       0       0       0       0
  3336 ;;      Locals:         0       0       0       0       0
  3337 ;;      Temps:          0       0       0       0       0
  3338 ;;      Totals:         0       0       0       0       0
  3339 ;;Total ram usage:        0 bytes
  3340 ;; Hardware stack levels used:    1
  3341 ;; This function calls:
  3342 ;;		Nothing
  3343 ;; This function is called by:
  3344 ;;		_configuracionInicial
  3345 ;; This function uses a non-reentrant model
  3346 ;;
  3347                           psect	text12,local,class=CODE,delta=2,merge=1,group=0
  3348                           	line	464
  3349                           global __ptext12
  3350                           __ptext12:	;psect for function _PWM2_Start
  3351  031D                     psect	text12
  3352                           	file	"procedures.c"
  3353                           	line	464
  3354                           	global	__size_of_PWM2_Start
  3355                           	__size_of_PWM2_Start	equ	__end_of_PWM2_Start-_PWM2_Start
  3356  000B                     	
  3357                           _PWM2_Start:	
  3358  031D                     ;incstack = 0
  3359                           	opt	stack 6
  3360                           ; Regs used in _PWM2_Start: []
  3361                           	line	466
  3362                           	
  3363                           l1168:	
  3364  031D                     ;procedures.c: 466:   CCP2M3 = 1;
  3365                           	bcf	status, 5	;RP0=0, select bank0
  3366  031D  1283               	bcf	status, 6	;RP1=0, select bank0
  3367  031E  1303               	bsf	(235/8),(235)&7	;volatile
  3368  031F  159D               	line	467
  3369                           ;procedures.c: 467:   CCP2M2 = 1;
  3370                           	bsf	(234/8),(234)&7	;volatile
  3371  0320  151D               	line	472
  3372                           ;procedures.c: 472:     T2CKPS0 = 1;
  3373                           	bsf	(144/8),(144)&7	;volatile
  3374  0321  1412               	line	473
  3375                           ;procedures.c: 473:     T2CKPS1 = 0;
  3376                           	bcf	(145/8),(145)&7	;volatile
  3377  0322  1092               	line	478
  3378                           ;procedures.c: 478:     TMR2ON = 1;
  3379                           	bsf	(146/8),(146)&7	;volatile
  3380  0323  1512               	line	479
  3381                           ;procedures.c: 479:     TRISC1 = 0;
  3382                           	bsf	status, 5	;RP0=1, select bank1
  3383  0324  1683               	bcf	status, 6	;RP1=0, select bank1
  3384  0325  1303               	bcf	(1081/8)^080h,(1081)&7	;volatile
  3385  0326  1087               	line	480
  3386                           	
  3387                           l364:	
  3388  0327                     	return
  3389  0327  0008               	opt stack 0
  3390                           GLOBAL	__end_of_PWM2_Start
  3391                           	__end_of_PWM2_Start:
  3392  0328                     	signat	_PWM2_Start,89
  3393                           	global	_PWM2_Init
  3394                           
  3395 ;; *************** function _PWM2_Init *****************
  3396 ;; Defined at:
  3397 ;;		line 413 in file "procedures.c"
  3398 ;; Parameters:    Size  Location     Type
  3399 ;;  fre             4    6[BANK0 ] long 
  3400 ;; Auto vars:     Size  Location     Type
  3401 ;;		None
  3402 ;; Return value:  Size  Location     Type
  3403 ;;                  1    wreg      void 
  3404 ;; Registers used:
  3405 ;;		wreg, status,2, status,0, pclath, cstack
  3406 ;; Tracked objects:
  3407 ;;		On entry : 0/0
  3408 ;;		On exit  : 0/0
  3409 ;;		Unchanged: 0/0
  3410 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3411 ;;      Params:         0       4       0       0       0
  3412 ;;      Locals:         0       0       0       0       0
  3413 ;;      Temps:          4       0       0       0       0
  3414 ;;      Totals:         4       4       0       0       0
  3415 ;;Total ram usage:        8 bytes
  3416 ;; Hardware stack levels used:    1
  3417 ;; Hardware stack levels required when called:    1
  3418 ;; This function calls:
  3419 ;;		___aldiv
  3420 ;; This function is called by:
  3421 ;;		_configuracionInicial
  3422 ;; This function uses a non-reentrant model
  3423 ;;
  3424                           psect	text13,local,class=CODE,delta=2,merge=1,group=0
  3425                           	line	413
  3426                           global __ptext13
  3427                           __ptext13:	;psect for function _PWM2_Init
  3428  03DD                     psect	text13
  3429                           	file	"procedures.c"
  3430                           	line	413
  3431                           	global	__size_of_PWM2_Init
  3432                           	__size_of_PWM2_Init	equ	__end_of_PWM2_Init-_PWM2_Init
  3433  0041                     	
  3434                           _PWM2_Init:	
  3435  03DD                     ;incstack = 0
  3436                           	opt	stack 5
  3437                           ; Regs used in _PWM2_Init: [wreg+status,2+status,0+pclath+cstack]
  3438                           	line	415
  3439                           	
  3440                           l1656:	
  3441  03DD                     ;procedures.c: 413: void PWM2_Init(long fre);procedures.c: 414: {;procedures.c: 415:   P
                                 R2 = (20000000/(fre*4*4)) - 1;
  3442                           	bcf	status, 5	;RP0=0, select bank0
  3443  03DD  1283               	bcf	status, 6	;RP1=0, select bank0
  3444  03DE  1303               	movf	(PWM2_Init@fre),w
  3445  03DF  0836               	movwf	(??_PWM2_Init+0)+0
  3446  03E0  00F9               	movf	(PWM2_Init@fre+1),w
  3447  03E1  0837               	movwf	((??_PWM2_Init+0)+0+1)
  3448  03E2  00FA               	movf	(PWM2_Init@fre+2),w
  3449  03E3  0838               	movwf	((??_PWM2_Init+0)+0+2)
  3450  03E4  00FB               	movf	(PWM2_Init@fre+3),w
  3451  03E5  0839               	movwf	((??_PWM2_Init+0)+0+3)
  3452  03E6  00FC               	movlw	02h
  3453  03E7  3002               u715:
  3454  03E8                     	clrc
  3455  03E8  1003               	rlf	(??_PWM2_Init+0)+0,f
  3456  03E9  0DF9               	rlf	(??_PWM2_Init+0)+1,f
  3457  03EA  0DFA               	rlf	(??_PWM2_Init+0)+2,f
  3458  03EB  0DFB               	rlf	(??_PWM2_Init+0)+3,f
  3459  03EC  0DFC               u710:
  3460  03ED                     	addlw	-1
  3461  03ED  3EFF               	skipz
  3462  03EE  1D03               	goto	u715
  3463  03EF  2BE8               	movlw	02h
  3464  03F0  3002               u725:
  3465  03F1                     	clrc
  3466  03F1  1003               	rlf	(??_PWM2_Init+0)+0,f
  3467  03F2  0DF9               	rlf	(??_PWM2_Init+0)+1,f
  3468  03F3  0DFA               	rlf	(??_PWM2_Init+0)+2,f
  3469  03F4  0DFB               	rlf	(??_PWM2_Init+0)+3,f
  3470  03F5  0DFC               u720:
  3471  03F6                     	addlw	-1
  3472  03F6  3EFF               	skipz
  3473  03F7  1D03               	goto	u725
  3474  03F8  2BF1               	movf	3+(??_PWM2_Init+0)+0,w
  3475  03F9  087C               	movwf	(___aldiv@divisor+3)
  3476  03FA  00F3               	movf	2+(??_PWM2_Init+0)+0,w
  3477  03FB  087B               	movwf	(___aldiv@divisor+2)
  3478  03FC  00F2               	movf	1+(??_PWM2_Init+0)+0,w
  3479  03FD  087A               	movwf	(___aldiv@divisor+1)
  3480  03FE  00F1               	movf	0+(??_PWM2_Init+0)+0,w
  3481  03FF  0879               	movwf	(___aldiv@divisor)
  3482  0400  00F0               
  3483                           	movlw	01h
  3484  0401  3001               	movwf	(___aldiv@dividend+3)
  3485  0402  00F7               	movlw	031h
  3486  0403  3031               	movwf	(___aldiv@dividend+2)
  3487  0404  00F6               	movlw	02Dh
  3488  0405  302D               	movwf	(___aldiv@dividend+1)
  3489  0406  00F5               	movlw	0
  3490  0407  3000               	movwf	(___aldiv@dividend)
  3491  0408  00F4               
  3492                           	fcall	___aldiv
  3493  0409  120A  118A  262B  120A  118A  	movf	(0+(?___aldiv)),w
  3494  040E  0870               	addlw	0FFh
  3495  040F  3EFF               	bsf	status, 5	;RP0=1, select bank1
  3496  0410  1683               	bcf	status, 6	;RP1=0, select bank1
  3497  0411  1303               	movwf	(146)^080h	;volatile
  3498  0412  0092               	line	416
  3499                           	
  3500                           l1658:	
  3501  0413                     ;procedures.c: 416:   freq = fre;
  3502                           	bcf	status, 5	;RP0=0, select bank0
  3503  0413  1283               	bcf	status, 6	;RP1=0, select bank0
  3504  0414  1303               	movf	(PWM2_Init@fre+3),w
  3505  0415  0839               	movwf	(_freq+3)
  3506  0416  00BF               	movf	(PWM2_Init@fre+2),w
  3507  0417  0838               	movwf	(_freq+2)
  3508  0418  00BE               	movf	(PWM2_Init@fre+1),w
  3509  0419  0837               	movwf	(_freq+1)
  3510  041A  00BD               	movf	(PWM2_Init@fre),w
  3511  041B  0836               	movwf	(_freq)
  3512  041C  00BC               
  3513                           	line	417
  3514                           	
  3515                           l347:	
  3516  041D                     	return
  3517  041D  0008               	opt stack 0
  3518                           GLOBAL	__end_of_PWM2_Init
  3519                           	__end_of_PWM2_Init:
  3520  041E                     	signat	_PWM2_Init,4217
  3521                           	global	_PWM1_Start
  3522                           
  3523 ;; *************** function _PWM1_Start *****************
  3524 ;; Defined at:
  3525 ;;		line 440 in file "procedures.c"
  3526 ;; Parameters:    Size  Location     Type
  3527 ;;		None
  3528 ;; Auto vars:     Size  Location     Type
  3529 ;;		None
  3530 ;; Return value:  Size  Location     Type
  3531 ;;                  1    wreg      void 
  3532 ;; Registers used:
  3533 ;;		None
  3534 ;; Tracked objects:
  3535 ;;		On entry : 0/0
  3536 ;;		On exit  : 0/0
  3537 ;;		Unchanged: 0/0
  3538 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3539 ;;      Params:         0       0       0       0       0
  3540 ;;      Locals:         0       0       0       0       0
  3541 ;;      Temps:          0       0       0       0       0
  3542 ;;      Totals:         0       0       0       0       0
  3543 ;;Total ram usage:        0 bytes
  3544 ;; Hardware stack levels used:    1
  3545 ;; This function calls:
  3546 ;;		Nothing
  3547 ;; This function is called by:
  3548 ;;		_configuracionInicial
  3549 ;; This function uses a non-reentrant model
  3550 ;;
  3551                           psect	text14,local,class=CODE,delta=2,merge=1,group=0
  3552                           	line	440
  3553                           global __ptext14
  3554                           __ptext14:	;psect for function _PWM1_Start
  3555  0312                     psect	text14
  3556                           	file	"procedures.c"
  3557                           	line	440
  3558                           	global	__size_of_PWM1_Start
  3559                           	__size_of_PWM1_Start	equ	__end_of_PWM1_Start-_PWM1_Start
  3560  000B                     	
  3561                           _PWM1_Start:	
  3562  0312                     ;incstack = 0
  3563                           	opt	stack 6
  3564                           ; Regs used in _PWM1_Start: []
  3565                           	line	442
  3566                           	
  3567                           l1166:	
  3568  0312                     ;procedures.c: 442:   CCP1M3 = 1;
  3569                           	bcf	status, 5	;RP0=0, select bank0
  3570  0312  1283               	bcf	status, 6	;RP1=0, select bank0
  3571  0313  1303               	bsf	(187/8),(187)&7	;volatile
  3572  0314  1597               	line	443
  3573                           ;procedures.c: 443:   CCP1M2 = 1;
  3574                           	bsf	(186/8),(186)&7	;volatile
  3575  0315  1517               	line	448
  3576                           ;procedures.c: 448:     T2CKPS0 = 1;
  3577                           	bsf	(144/8),(144)&7	;volatile
  3578  0316  1412               	line	449
  3579                           ;procedures.c: 449:     T2CKPS1 = 0;
  3580                           	bcf	(145/8),(145)&7	;volatile
  3581  0317  1092               	line	454
  3582                           ;procedures.c: 454:   TMR2ON = 1;
  3583                           	bsf	(146/8),(146)&7	;volatile
  3584  0318  1512               	line	455
  3585                           ;procedures.c: 455:   TRISC2 = 0;
  3586                           	bsf	status, 5	;RP0=1, select bank1
  3587  0319  1683               	bcf	status, 6	;RP1=0, select bank1
  3588  031A  1303               	bcf	(1082/8)^080h,(1082)&7	;volatile
  3589  031B  1107               	line	456
  3590                           	
  3591                           l358:	
  3592  031C                     	return
  3593  031C  0008               	opt stack 0
  3594                           GLOBAL	__end_of_PWM1_Start
  3595                           	__end_of_PWM1_Start:
  3596  031D                     	signat	_PWM1_Start,89
  3597                           	global	_PWM1_Init
  3598                           
  3599 ;; *************** function _PWM1_Init *****************
  3600 ;; Defined at:
  3601 ;;		line 407 in file "procedures.c"
  3602 ;; Parameters:    Size  Location     Type
  3603 ;;  fre             4    6[BANK0 ] long 
  3604 ;; Auto vars:     Size  Location     Type
  3605 ;;		None
  3606 ;; Return value:  Size  Location     Type
  3607 ;;                  1    wreg      void 
  3608 ;; Registers used:
  3609 ;;		wreg, status,2, status,0, pclath, cstack
  3610 ;; Tracked objects:
  3611 ;;		On entry : 0/0
  3612 ;;		On exit  : 0/0
  3613 ;;		Unchanged: 0/0
  3614 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3615 ;;      Params:         0       4       0       0       0
  3616 ;;      Locals:         0       0       0       0       0
  3617 ;;      Temps:          4       0       0       0       0
  3618 ;;      Totals:         4       4       0       0       0
  3619 ;;Total ram usage:        8 bytes
  3620 ;; Hardware stack levels used:    1
  3621 ;; Hardware stack levels required when called:    1
  3622 ;; This function calls:
  3623 ;;		___aldiv
  3624 ;; This function is called by:
  3625 ;;		_configuracionInicial
  3626 ;; This function uses a non-reentrant model
  3627 ;;
  3628                           psect	text15,local,class=CODE,delta=2,merge=1,group=0
  3629                           	line	407
  3630                           global __ptext15
  3631                           __ptext15:	;psect for function _PWM1_Init
  3632  039C                     psect	text15
  3633                           	file	"procedures.c"
  3634                           	line	407
  3635                           	global	__size_of_PWM1_Init
  3636                           	__size_of_PWM1_Init	equ	__end_of_PWM1_Init-_PWM1_Init
  3637  0041                     	
  3638                           _PWM1_Init:	
  3639  039C                     ;incstack = 0
  3640                           	opt	stack 5
  3641                           ; Regs used in _PWM1_Init: [wreg+status,2+status,0+pclath+cstack]
  3642                           	line	409
  3643                           	
  3644                           l1652:	
  3645  039C                     ;procedures.c: 407: void PWM1_Init(long fre);procedures.c: 408: {;procedures.c: 409:   P
                                 R2 = (20000000/(fre*4*4)) - 1;
  3646                           	bcf	status, 5	;RP0=0, select bank0
  3647  039C  1283               	bcf	status, 6	;RP1=0, select bank0
  3648  039D  1303               	movf	(PWM1_Init@fre),w
  3649  039E  0836               	movwf	(??_PWM1_Init+0)+0
  3650  039F  00F9               	movf	(PWM1_Init@fre+1),w
  3651  03A0  0837               	movwf	((??_PWM1_Init+0)+0+1)
  3652  03A1  00FA               	movf	(PWM1_Init@fre+2),w
  3653  03A2  0838               	movwf	((??_PWM1_Init+0)+0+2)
  3654  03A3  00FB               	movf	(PWM1_Init@fre+3),w
  3655  03A4  0839               	movwf	((??_PWM1_Init+0)+0+3)
  3656  03A5  00FC               	movlw	02h
  3657  03A6  3002               u695:
  3658  03A7                     	clrc
  3659  03A7  1003               	rlf	(??_PWM1_Init+0)+0,f
  3660  03A8  0DF9               	rlf	(??_PWM1_Init+0)+1,f
  3661  03A9  0DFA               	rlf	(??_PWM1_Init+0)+2,f
  3662  03AA  0DFB               	rlf	(??_PWM1_Init+0)+3,f
  3663  03AB  0DFC               u690:
  3664  03AC                     	addlw	-1
  3665  03AC  3EFF               	skipz
  3666  03AD  1D03               	goto	u695
  3667  03AE  2BA7               	movlw	02h
  3668  03AF  3002               u705:
  3669  03B0                     	clrc
  3670  03B0  1003               	rlf	(??_PWM1_Init+0)+0,f
  3671  03B1  0DF9               	rlf	(??_PWM1_Init+0)+1,f
  3672  03B2  0DFA               	rlf	(??_PWM1_Init+0)+2,f
  3673  03B3  0DFB               	rlf	(??_PWM1_Init+0)+3,f
  3674  03B4  0DFC               u700:
  3675  03B5                     	addlw	-1
  3676  03B5  3EFF               	skipz
  3677  03B6  1D03               	goto	u705
  3678  03B7  2BB0               	movf	3+(??_PWM1_Init+0)+0,w
  3679  03B8  087C               	movwf	(___aldiv@divisor+3)
  3680  03B9  00F3               	movf	2+(??_PWM1_Init+0)+0,w
  3681  03BA  087B               	movwf	(___aldiv@divisor+2)
  3682  03BB  00F2               	movf	1+(??_PWM1_Init+0)+0,w
  3683  03BC  087A               	movwf	(___aldiv@divisor+1)
  3684  03BD  00F1               	movf	0+(??_PWM1_Init+0)+0,w
  3685  03BE  0879               	movwf	(___aldiv@divisor)
  3686  03BF  00F0               
  3687                           	movlw	01h
  3688  03C0  3001               	movwf	(___aldiv@dividend+3)
  3689  03C1  00F7               	movlw	031h
  3690  03C2  3031               	movwf	(___aldiv@dividend+2)
  3691  03C3  00F6               	movlw	02Dh
  3692  03C4  302D               	movwf	(___aldiv@dividend+1)
  3693  03C5  00F5               	movlw	0
  3694  03C6  3000               	movwf	(___aldiv@dividend)
  3695  03C7  00F4               
  3696                           	fcall	___aldiv
  3697  03C8  120A  118A  262B  120A  118A  	movf	(0+(?___aldiv)),w
  3698  03CD  0870               	addlw	0FFh
  3699  03CE  3EFF               	bsf	status, 5	;RP0=1, select bank1
  3700  03CF  1683               	bcf	status, 6	;RP1=0, select bank1
  3701  03D0  1303               	movwf	(146)^080h	;volatile
  3702  03D1  0092               	line	410
  3703                           	
  3704                           l1654:	
  3705  03D2                     ;procedures.c: 410:   freq = fre;
  3706                           	bcf	status, 5	;RP0=0, select bank0
  3707  03D2  1283               	bcf	status, 6	;RP1=0, select bank0
  3708  03D3  1303               	movf	(PWM1_Init@fre+3),w
  3709  03D4  0839               	movwf	(_freq+3)
  3710  03D5  00BF               	movf	(PWM1_Init@fre+2),w
  3711  03D6  0838               	movwf	(_freq+2)
  3712  03D7  00BE               	movf	(PWM1_Init@fre+1),w
  3713  03D8  0837               	movwf	(_freq+1)
  3714  03D9  00BD               	movf	(PWM1_Init@fre),w
  3715  03DA  0836               	movwf	(_freq)
  3716  03DB  00BC               
  3717                           	line	411
  3718                           	
  3719                           l344:	
  3720  03DC                     	return
  3721  03DC  0008               	opt stack 0
  3722                           GLOBAL	__end_of_PWM1_Init
  3723                           	__end_of_PWM1_Init:
  3724  03DD                     	signat	_PWM1_Init,4217
  3725                           	global	___aldiv
  3726                           
  3727 ;; *************** function ___aldiv *****************
  3728 ;; Defined at:
  3729 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\aldiv.c"
  3730 ;; Parameters:    Size  Location     Type
  3731 ;;  divisor         4    0[COMMON] long 
  3732 ;;  dividend        4    4[COMMON] long 
  3733 ;; Auto vars:     Size  Location     Type
  3734 ;;  quotient        4    2[BANK0 ] long 
  3735 ;;  sign            1    1[BANK0 ] unsigned char 
  3736 ;;  counter         1    0[BANK0 ] unsigned char 
  3737 ;; Return value:  Size  Location     Type
  3738 ;;                  4    0[COMMON] long 
  3739 ;; Registers used:
  3740 ;;		wreg, status,2, status,0
  3741 ;; Tracked objects:
  3742 ;;		On entry : 0/0
  3743 ;;		On exit  : 0/0
  3744 ;;		Unchanged: 0/0
  3745 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3746 ;;      Params:         8       0       0       0       0
  3747 ;;      Locals:         0       6       0       0       0
  3748 ;;      Temps:          1       0       0       0       0
  3749 ;;      Totals:         9       6       0       0       0
  3750 ;;Total ram usage:       15 bytes
  3751 ;; Hardware stack levels used:    1
  3752 ;; This function calls:
  3753 ;;		Nothing
  3754 ;; This function is called by:
  3755 ;;		_SerialBegin
  3756 ;;		_PWM1_Init
  3757 ;;		_PWM2_Init
  3758 ;;		_PWM_Max_Duty
  3759 ;; This function uses a non-reentrant model
  3760 ;;
  3761                           psect	text16,local,class=CODE,delta=2,merge=1,group=1
  3762                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\aldiv.c"
  3763                           	line	5
  3764                           global __ptext16
  3765                           __ptext16:	;psect for function ___aldiv
  3766  062B                     psect	text16
  3767                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\aldiv.c"
  3768                           	line	5
  3769                           	global	__size_of___aldiv
  3770                           	__size_of___aldiv	equ	__end_of___aldiv-___aldiv
  3771  00A6                     	
  3772                           ___aldiv:	
  3773  062B                     ;incstack = 0
  3774                           	opt	stack 5
  3775                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
  3776                           	line	13
  3777                           	
  3778                           l1434:	
  3779  062B                     	bcf	status, 5	;RP0=0, select bank0
  3780  062B  1283               	bcf	status, 6	;RP1=0, select bank0
  3781  062C  1303               	clrf	(___aldiv@sign)
  3782  062D  01B1               	line	14
  3783                           	
  3784                           l1436:	
  3785  062E                     	btfss	(___aldiv@divisor+3),7
  3786  062E  1FF3               	goto	u431
  3787  062F  2E31               	goto	u430
  3788  0630  2E32               u431:
  3789  0631                     	goto	l518
  3790  0631  2E3F               u430:
  3791  0632                     	line	15
  3792                           	
  3793                           l1438:	
  3794  0632                     	comf	(___aldiv@divisor),f
  3795  0632  09F0               	comf	(___aldiv@divisor+1),f
  3796  0633  09F1               	comf	(___aldiv@divisor+2),f
  3797  0634  09F2               	comf	(___aldiv@divisor+3),f
  3798  0635  09F3               	incf	(___aldiv@divisor),f
  3799  0636  0AF0               	skipnz
  3800  0637  1903               	incf	(___aldiv@divisor+1),f
  3801  0638  0AF1               	skipnz
  3802  0639  1903               	incf	(___aldiv@divisor+2),f
  3803  063A  0AF2               	skipnz
  3804  063B  1903               	incf	(___aldiv@divisor+3),f
  3805  063C  0AF3               	line	16
  3806                           	clrf	(___aldiv@sign)
  3807  063D  01B1               	incf	(___aldiv@sign),f
  3808  063E  0AB1               	line	17
  3809                           	
  3810                           l518:	
  3811  063F                     	line	18
  3812                           	btfss	(___aldiv@dividend+3),7
  3813  063F  1FF7               	goto	u441
  3814  0640  2E42               	goto	u440
  3815  0641  2E43               u441:
  3816  0642                     	goto	l1444
  3817  0642  2E53               u440:
  3818  0643                     	line	19
  3819                           	
  3820                           l1440:	
  3821  0643                     	comf	(___aldiv@dividend),f
  3822  0643  09F4               	comf	(___aldiv@dividend+1),f
  3823  0644  09F5               	comf	(___aldiv@dividend+2),f
  3824  0645  09F6               	comf	(___aldiv@dividend+3),f
  3825  0646  09F7               	incf	(___aldiv@dividend),f
  3826  0647  0AF4               	skipnz
  3827  0648  1903               	incf	(___aldiv@dividend+1),f
  3828  0649  0AF5               	skipnz
  3829  064A  1903               	incf	(___aldiv@dividend+2),f
  3830  064B  0AF6               	skipnz
  3831  064C  1903               	incf	(___aldiv@dividend+3),f
  3832  064D  0AF7               	line	20
  3833                           	
  3834                           l1442:	
  3835  064E                     	movlw	low(01h)
  3836  064E  3001               	movwf	(??___aldiv+0)+0
  3837  064F  00F8               	movf	(??___aldiv+0)+0,w
  3838  0650  0878               	xorwf	(___aldiv@sign),f
  3839  0651  06B1               	goto	l1444
  3840  0652  2E53               	line	21
  3841                           	
  3842                           l519:	
  3843  0653                     	line	22
  3844                           	
  3845                           l1444:	
  3846  0653                     	movlw	high highword(0)
  3847  0653  3000               	movwf	(___aldiv@quotient+3)
  3848  0654  00B5               	movlw	low highword(0)
  3849  0655  3000               	movwf	(___aldiv@quotient+2)
  3850  0656  00B4               	movlw	high(0)
  3851  0657  3000               	movwf	(___aldiv@quotient+1)
  3852  0658  00B3               	movlw	low(0)
  3853  0659  3000               	movwf	(___aldiv@quotient)
  3854  065A  00B2               
  3855                           	line	23
  3856                           	
  3857                           l1446:	
  3858  065B                     	movf	(___aldiv@divisor+3),w
  3859  065B  0873               	iorwf	(___aldiv@divisor+2),w
  3860  065C  0472               	iorwf	(___aldiv@divisor+1),w
  3861  065D  0471               	iorwf	(___aldiv@divisor),w
  3862  065E  0470               	skipnz
  3863  065F  1903               	goto	u451
  3864  0660  2E62               	goto	u450
  3865  0661  2E63               u451:
  3866  0662                     	goto	l1466
  3867  0662  2EB6               u450:
  3868  0663                     	line	24
  3869                           	
  3870                           l1448:	
  3871  0663                     	clrf	(___aldiv@counter)
  3872  0663  01B0               	incf	(___aldiv@counter),f
  3873  0664  0AB0               	line	25
  3874                           	goto	l1452
  3875  0665  2E74               	
  3876                           l522:	
  3877  0666                     	line	26
  3878                           	
  3879                           l1450:	
  3880  0666                     	movlw	01h
  3881  0666  3001               	movwf	(??___aldiv+0)+0
  3882  0667  00F8               u465:
  3883  0668                     	clrc
  3884  0668  1003               	rlf	(___aldiv@divisor),f
  3885  0669  0DF0               	rlf	(___aldiv@divisor+1),f
  3886  066A  0DF1               	rlf	(___aldiv@divisor+2),f
  3887  066B  0DF2               	rlf	(___aldiv@divisor+3),f
  3888  066C  0DF3               	decfsz	(??___aldiv+0)+0
  3889  066D  0BF8               	goto	u465
  3890  066E  2E68               	line	27
  3891                           	movlw	low(01h)
  3892  066F  3001               	movwf	(??___aldiv+0)+0
  3893  0670  00F8               	movf	(??___aldiv+0)+0,w
  3894  0671  0878               	addwf	(___aldiv@counter),f
  3895  0672  07B0               	goto	l1452
  3896  0673  2E74               	line	28
  3897                           	
  3898                           l521:	
  3899  0674                     	line	25
  3900                           	
  3901                           l1452:	
  3902  0674                     	btfss	(___aldiv@divisor+3),(31)&7
  3903  0674  1FF3               	goto	u471
  3904  0675  2E77               	goto	u470
  3905  0676  2E78               u471:
  3906  0677                     	goto	l1450
  3907  0677  2E66               u470:
  3908  0678                     	goto	l1454
  3909  0678  2E7A               	
  3910                           l523:	
  3911  0679                     	goto	l1454
  3912  0679  2E7A               	line	29
  3913                           	
  3914                           l524:	
  3915  067A                     	line	30
  3916                           	
  3917                           l1454:	
  3918  067A                     	movlw	01h
  3919  067A  3001               	movwf	(??___aldiv+0)+0
  3920  067B  00F8               u485:
  3921  067C                     	clrc
  3922  067C  1003               	rlf	(___aldiv@quotient),f
  3923  067D  0DB2               	rlf	(___aldiv@quotient+1),f
  3924  067E  0DB3               	rlf	(___aldiv@quotient+2),f
  3925  067F  0DB4               	rlf	(___aldiv@quotient+3),f
  3926  0680  0DB5               	decfsz	(??___aldiv+0)+0
  3927  0681  0BF8               	goto	u485
  3928  0682  2E7C               	line	31
  3929                           	
  3930                           l1456:	
  3931  0683                     	movf	(___aldiv@divisor+3),w
  3932  0683  0873               	subwf	(___aldiv@dividend+3),w
  3933  0684  0277               	skipz
  3934  0685  1D03               	goto	u495
  3935  0686  2E91               	movf	(___aldiv@divisor+2),w
  3936  0687  0872               	subwf	(___aldiv@dividend+2),w
  3937  0688  0276               	skipz
  3938  0689  1D03               	goto	u495
  3939  068A  2E91               	movf	(___aldiv@divisor+1),w
  3940  068B  0871               	subwf	(___aldiv@dividend+1),w
  3941  068C  0275               	skipz
  3942  068D  1D03               	goto	u495
  3943  068E  2E91               	movf	(___aldiv@divisor),w
  3944  068F  0870               	subwf	(___aldiv@dividend),w
  3945  0690  0274               u495:
  3946  0691                     	skipc
  3947  0691  1C03               	goto	u491
  3948  0692  2E94               	goto	u490
  3949  0693  2E95               u491:
  3950  0694                     	goto	l1462
  3951  0694  2EA5               u490:
  3952  0695                     	line	32
  3953                           	
  3954                           l1458:	
  3955  0695                     	movf	(___aldiv@divisor),w
  3956  0695  0870               	subwf	(___aldiv@dividend),f
  3957  0696  02F4               	movf	(___aldiv@divisor+1),w
  3958  0697  0871               	skipc
  3959  0698  1C03               	incfsz	(___aldiv@divisor+1),w
  3960  0699  0F71               	subwf	(___aldiv@dividend+1),f
  3961  069A  02F5               	movf	(___aldiv@divisor+2),w
  3962  069B  0872               	skipc
  3963  069C  1C03               	incfsz	(___aldiv@divisor+2),w
  3964  069D  0F72               	subwf	(___aldiv@dividend+2),f
  3965  069E  02F6               	movf	(___aldiv@divisor+3),w
  3966  069F  0873               	skipc
  3967  06A0  1C03               	incfsz	(___aldiv@divisor+3),w
  3968  06A1  0F73               	subwf	(___aldiv@dividend+3),f
  3969  06A2  02F7               	line	33
  3970                           	
  3971                           l1460:	
  3972  06A3                     	bsf	(___aldiv@quotient)+(0/8),(0)&7
  3973  06A3  1432               	goto	l1462
  3974  06A4  2EA5               	line	34
  3975                           	
  3976                           l525:	
  3977  06A5                     	line	35
  3978                           	
  3979                           l1462:	
  3980  06A5                     	movlw	01h
  3981  06A5  3001               u505:
  3982  06A6                     	clrc
  3983  06A6  1003               	rrf	(___aldiv@divisor+3),f
  3984  06A7  0CF3               	rrf	(___aldiv@divisor+2),f
  3985  06A8  0CF2               	rrf	(___aldiv@divisor+1),f
  3986  06A9  0CF1               	rrf	(___aldiv@divisor),f
  3987  06AA  0CF0               	addlw	-1
  3988  06AB  3EFF               	skipz
  3989  06AC  1D03               	goto	u505
  3990  06AD  2EA6               
  3991                           	line	36
  3992                           	
  3993                           l1464:	
  3994  06AE                     	movlw	01h
  3995  06AE  3001               	subwf	(___aldiv@counter),f
  3996  06AF  02B0               	btfss	status,2
  3997  06B0  1D03               	goto	u511
  3998  06B1  2EB3               	goto	u510
  3999  06B2  2EB4               u511:
  4000  06B3                     	goto	l1454
  4001  06B3  2E7A               u510:
  4002  06B4                     	goto	l1466
  4003  06B4  2EB6               	
  4004                           l526:	
  4005  06B5                     	goto	l1466
  4006  06B5  2EB6               	line	37
  4007                           	
  4008                           l520:	
  4009  06B6                     	line	38
  4010                           	
  4011                           l1466:	
  4012  06B6                     	movf	((___aldiv@sign)),w
  4013  06B6  0831               	btfsc	status,2
  4014  06B7  1903               	goto	u521
  4015  06B8  2EBA               	goto	u520
  4016  06B9  2EBB               u521:
  4017  06BA                     	goto	l1470
  4018  06BA  2EC7               u520:
  4019  06BB                     	line	39
  4020                           	
  4021                           l1468:	
  4022  06BB                     	comf	(___aldiv@quotient),f
  4023  06BB  09B2               	comf	(___aldiv@quotient+1),f
  4024  06BC  09B3               	comf	(___aldiv@quotient+2),f
  4025  06BD  09B4               	comf	(___aldiv@quotient+3),f
  4026  06BE  09B5               	incf	(___aldiv@quotient),f
  4027  06BF  0AB2               	skipnz
  4028  06C0  1903               	incf	(___aldiv@quotient+1),f
  4029  06C1  0AB3               	skipnz
  4030  06C2  1903               	incf	(___aldiv@quotient+2),f
  4031  06C3  0AB4               	skipnz
  4032  06C4  1903               	incf	(___aldiv@quotient+3),f
  4033  06C5  0AB5               	goto	l1470
  4034  06C6  2EC7               	
  4035                           l527:	
  4036  06C7                     	line	40
  4037                           	
  4038                           l1470:	
  4039  06C7                     	movf	(___aldiv@quotient+3),w
  4040  06C7  0835               	movwf	(?___aldiv+3)
  4041  06C8  00F3               	movf	(___aldiv@quotient+2),w
  4042  06C9  0834               	movwf	(?___aldiv+2)
  4043  06CA  00F2               	movf	(___aldiv@quotient+1),w
  4044  06CB  0833               	movwf	(?___aldiv+1)
  4045  06CC  00F1               	movf	(___aldiv@quotient),w
  4046  06CD  0832               	movwf	(?___aldiv)
  4047  06CE  00F0               
  4048                           	goto	l528
  4049  06CF  2ED0               	
  4050                           l1472:	
  4051  06D0                     	line	41
  4052                           	
  4053                           l528:	
  4054  06D0                     	return
  4055  06D0  0008               	opt stack 0
  4056                           GLOBAL	__end_of___aldiv
  4057                           	__end_of___aldiv:
  4058  06D1                     	signat	___aldiv,8316
  4059                           global	___latbits
  4060                           ___latbits	equ	2
  4061  0002                     	global	btemp
  4062                           	btemp set 07Eh
  4063  007E                     
  4064                           	DABS	1,126,2	;btemp
  4065                           	global	wtemp0
  4066                           	wtemp0 set btemp+0
  4067  007E                     	end


Data Sizes:
    Strings     0
    Constant    0
    Data        2
    BSS         16
    Persistent  4
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     13      14
    BANK0            80     12      33
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _setup->_SerialBegin
    _SerialBegin->___aldiv
    _loop->_cocienteEntero
    _configuracionInicial->_PWM1_Init
    _configuracionInicial->_PWM2_Init
    _PWM2_Init->___aldiv
    _PWM1_Init->___aldiv

Critical Paths under _main in BANK0

    _setup->_SerialBegin
    _SerialBegin->___aldiv
    _configuracionInicial->_PWM1_Init
    _configuracionInicial->_PWM2_Init
    _PWM2_Init->___aldiv
    _PWM1_Init->___aldiv

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    5066
               _configuracionInicial
                               _loop
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0    1874
                        _SerialBegin
                            _pinMode
 ---------------------------------------------------------------------------------
 (2) _pinMode                                              4     3      1     626
                                              0 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (2) _SerialBegin                                         10     6      4    1248
                                              9 COMMON     4     4      0
                                              6 BANK0      6     2      4
                            ___aldiv
 ---------------------------------------------------------------------------------
 (1) _loop                                                 3     3      0     832
                                              8 COMMON     3     3      0
                    _SerialAvailable
                        _SerialWrite
                         _analogRead
                     _cocienteEntero
                              _delay
                            _residuo
 ---------------------------------------------------------------------------------
 (2) _residuo                                              6     2      4     264
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (2) _delay                                                7     5      2     212
                                              0 COMMON     7     5      2
 ---------------------------------------------------------------------------------
 (2) _cocienteEntero                                       8     4      4     266
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (2) _analogRead                                           5     3      2      22
                                              0 COMMON     5     3      2
 ---------------------------------------------------------------------------------
 (2) _SerialWrite                                          1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _SerialAvailable                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _configuracionInicial                                 0     0      0    2360
                          _PWM1_Init
                         _PWM1_Start
                          _PWM2_Init
                         _PWM2_Start
 ---------------------------------------------------------------------------------
 (2) _PWM2_Start                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM2_Init                                            8     4      4    1180
                                              9 COMMON     4     4      0
                                              6 BANK0      4     0      4
                            ___aldiv
 ---------------------------------------------------------------------------------
 (2) _PWM1_Start                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM1_Init                                            8     4      4    1180
                                              9 COMMON     4     4      0
                                              6 BANK0      4     0      4
                            ___aldiv
 ---------------------------------------------------------------------------------
 (3) ___aldiv                                             15     7      8    1060
                                              0 COMMON     9     1      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _configuracionInicial
     _PWM1_Init
       ___aldiv
     _PWM1_Start
     _PWM2_Init
       ___aldiv
     _PWM2_Start
   _loop
     _SerialAvailable
     _SerialWrite
     _analogRead
     _cocienteEntero
     _delay
     _residuo
   _setup
     _SerialBegin
       ___aldiv
     _pinMode

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      C      21       5       41.3%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      D       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      2F      12        0.0%
ABS                  0      0      2F       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.00 build -1524193055 
Symbol Table                                                                                   Fri Nov 30 19:02:31 2018

                  __CFG_CP$OFF 0000                             _A0 002D                             l50 04F5  
                           l51 0514                             l52 051E                             l61 038E  
                           l45 0361                             l62 0382                             l63 0399  
                           l55 036D                             l64 039B                             l56 0367  
                           l48 051E                             l57 0378                             l49 0506  
                           l58 037A                             fsr 0004                            l200 0763  
                          l201 076B                            l202 0773                            l203 077B  
                          l300 062A                            l204 0783                            l301 062A  
                          l205 078B                            l206 07E6                            l311 032A  
                          l320 0309                            l312 032A                            l304 0474  
                          l313 0331                            l305 04AF                            l314 0335  
                          l306 0485                            l307 049A                            l171 0341  
                          l308 04AF                            l180 0794                            l172 0347  
                          l181 06D3                            l173 0348                            l270 0528  
                          l182 07E6                            l190 0713                            l174 0348  
                          l271 052D                            l191 071B                            l183 06DB  
                          _ADC 0027                            l520 06B6                            l344 03DC  
                          l280 054E                            l272 059C                            l192 0723  
                          l184 06E3                            l521 0674                            l177 0461  
                          l273 059C                            l281 0553                            l193 072B  
                          l185 06EB                            l522 0666                            l282 055C  
                          l274 0536                            l194 0733                            l186 06F3  
                          l523 0679                            l347 041D                            l267 0583  
                          l283 0561                            l275 053B                            l195 073B  
                          l187 06FB                            l524 067A                            l364 0327  
                          l284 0561                            l276 053B                            l268 0521  
                          l196 0743                            l188 0703                            l525 06A5  
                          l285 0566                            l277 0540                            l269 0528  
                          l197 074B                            l189 070B                            l526 06B5  
                          l518 063F                            l358 031C                            l286 056F  
                          l278 0549                            l198 0753                            l527 06C7  
                          l519 0653                            l287 0574                            l279 054E  
                          l199 075B                            l528 06D0                            l288 0574  
                          l289 0579                            l299 060C                            u510 06B4  
                          u430 0632                            _PR2 0092                            u511 06B3  
                          u431 0631                            u520 06BB                            u440 0643  
                          u600 0565                            u521 06BA                            u505 06A6  
                          u441 0642                            u601 0564                            u450 0663  
                          u610 0578                            u530 05AD                   __CFG_CPD$OFF 0000  
                          u451 0662                            u611 0577                            u700 03B5  
                          u620 0398                            u540 05D8                            u621 0397  
                          u541 05D7                            u470 0678                            u710 03ED  
                          u630 0377                            u550 05E6                            u471 0677  
                          u631 0376                            u535 05A8                            u720 03F6  
                          u640 0330                            u560 0616                            u465 0668  
                          u705 03B0                            u641 032F                            u625 0394  
                          u561 0615                            u490 0695                            u570 052C  
                          u650 0472                            u730 04BA                            u491 0694  
                          u715 03E8                            u571 052B                            u651 0471  
                          u635 0373                            u731 04B9                            u555 05E1  
                          u580 053F                            u660 0483                            u740 0513  
                          u485 067C                            u725 03F1                            u581 053E  
                          u661 0482                            u741 0512                            u590 0552  
                          u670 0499                            u495 0691                            u591 0551  
                          u671 0498                            u655 046E                            u680 04AE  
                          u681 04AD                            u665 047F                            u745 050F  
                          u690 03AC                            u675 0495                            u685 04AA  
                          u695 03A7                            _PWM 0023                    __CFG_WRT$ON 0000  
                          fsr0 0004                            indf 0000                   __CFG_FOSC$HS 0000  
                  _PWMTerminal 0040                   __CFG_LVP$OFF 0000                           PORTA 0005  
                         PORTB 0006                           PORTC 0007                           l1500 06D2  
                         PORTD 0008                           l1166 0312                           l1510 06F3  
                         l1502 06D3                           l1440 0643                           l1168 031D  
                         l1600 0580                           l1520 071B                           l1512 06FB  
                         l1504 06DB                           l1450 0666                           l1442 064E  
                         l1434 062B                           l1602 0581                           l1530 0743  
                         l1522 0723                           l1514 0703                           l1506 06E3  
                         l1460 06A3                           l1452 0674                           l1444 0653  
                         l1436 062E                           l1604 0582                           l1620 039B  
                         l1612 037B                           l1540 076B                           l1532 074B  
                         l1524 072B                           l1516 070B                           l1508 06EB  
                         l1470 06C7                           l1462 06A5                           l1454 067A  
                         l1446 065B                           l1438 0632                           l1630 0329  
                         l1606 0583                           l1614 037D                           l1622 0362  
                         l1550 0793                           l1542 0773                           l1534 0753  
                         l1526 0733                           l1518 0713                           l1472 06D0  
                         l1464 06AE                           l1456 0683                           l1448 0663  
                         l1560 0309                           l1632 0331                           l1616 0382  
                         l1640 0474                           l1624 0367                           l1480 0608  
                         l1544 077B                           l1536 075B                           l1528 073B  
                         l1552 0794                           l1704 0336                           l1458 0695  
                         l1466 06B6                           l1570 0535                           l1562 0520  
                         l1618 0399                           l1650 049A                           l1642 0476  
                         l1634 0462                           l1626 0378                           l1490 061E  
                         l1482 060C                           l1474 059D                           l1546 0783  
                         l1538 0763                           l1706 033B                           l1468 06BB  
                         l1652 039C                           l1580 0549                           l1572 0536  
                         l1564 0521                           l1644 0484                           l1636 0464  
                         l1628 037A                           l1492 0621                           l1484 0616  
                         l1476 05CF                           l1548 078B                           l1660 034B  
                         l1708 0341                           l1654 03D2                           l1558 0303  
                         l1590 0566                           l1582 0553                           l1574 0540  
                         l1566 052D                           l1646 0486                           l1638 0473  
                         l1670 04D8                           l1494 0622                           l1486 061A  
                         l1478 05D8                           l1662 035A                           l1656 03DD  
                         l1592 056D                           l1584 055A                           l1576 0547  
                         l1568 0534                           l1648 048C                           l1680 04FF  
                         l1672 04EA                           l1664 04B0                           l1496 0625  
                         l1488 061B                           l1658 0413                           l1690 0435  
                         l1594 056E                           l1586 055B                           l1578 0548  
                         l1682 0506                           l1674 04EE                           l1666 04BA  
                         l1498 0629                           l1692 0439                           l1596 056F  
                         l1588 055C                           l1684 0514                           l1676 04F2  
                         l1668 04C6                           l1694 0448                           l1686 041E  
                         l1598 0579                           l1678 04F5                           l1782 079C  
                         l1696 0457                           l1688 0432                           l1784 058B  
                         l1698 045C                           TRISA 0085                           TRISB 0086  
                         TRISC 0087                           TRISD 0088                           _BRGH 04C2  
                         _CREN 00C4                           _RCIF 0065                           _SPEN 00C7  
                         _TRMT 04C1                           _TXEN 04C5                           _SYNC 04C4  
                         _main 0336                           _freq 003C                           _loop 04B0  
                         btemp 007E                           start 0000                __end_of___aldiv 06D1  
                        ?_main 0070                          _CCP1X 00BD                          _CCP1Y 00BC  
                        _CCP2X 00ED                          _CCP2Y 00EC                          ?_loop 0070  
                __CFG_WDTE$OFF 0000                          _RCREG 001A                          _SPBRG 0099  
                        _PORTE 0009                          _TRISE 0089                          _TXREG 0019  
           __size_of_PWM1_Init 0041                    ?_PWM1_Start 0070             __size_of_PWM2_Init 0041  
                  ?_PWM2_Start 0070                          _delay 0462                __end_of_pinMode 07E7  
                        _setup 034B                 __CFG_BOREN$OFF 0000                __end_of_residuo 037B  
                        loop@i 0079                          status 0003                          wtemp0 007E  
              __initialization 07E7                   __end_of_main 034B                   __end_of_loop 051F  
                       ??_main 007D                         ??_loop 0078                         ?_delay 0070  
                       _ADCON0 001F                         _ADCON1 009F                         _ADCLSB 002B  
                       _ADCMSB 002C                         _CCP1M2 00BA                         _CCP1M3 00BB  
                       _CCP2M2 00EA                         _CCP2M3 00EB                         _ADRESH 001E  
                       _ADRESL 009E                         _CCPR1L 0015                         _CCPR2L 001B  
                       ?_setup 0070                  ??_SerialBegin 0079                _SerialAvailable 0303  
                       _TMR2ON 0092                         _TRISC1 0439                         _TRISC2 043A  
                       _PWMLSB 0029                         _TRISC6 043E                         _TRISC7 043F  
                       _PWMMSB 002A                  ??_SerialWrite 0070                 __CFG_PWRTE$OFF 0000  
           cocienteEntero@cont 0074              __end_of_PWM1_Init 03DD              __end_of_PWM2_Init 041E  
                    ??___aldiv 0078            __size_of_PWM1_Start 000B  __size_of_configuracionInicial 0044  
          __size_of_PWM2_Start 000B                         _buffer 007D                         delay@i 0075  
                       delay@j 0073              analogRead@channel 0074                   __pdataCOMMON 007D  
                    ??_pinMode 0071                      ??_residuo 0074        __end_of__initialization 07FC  
          SerialBegin@baudrate 0036                    pinMode@mode 0070            __end_of_SerialBegin 062B  
               __pcstackCOMMON 0070                   __pidataBANK0 0301                  __end_of_delay 04B0  
          __end_of_SerialWrite 0336                  __end_of_setup 0362        __end_of_SerialAvailable 030A  
                      ??_delay 0072                        ??_setup 007D                     __pbssBANK0 0020  
                   _analogRead 051F                     __pmaintext 0336        __size_of_cocienteEntero 0021  
                      _T2CKPS0 0090                        _T2CKPS1 0091                   ??_PWM1_Start 0070  
                 ??_PWM2_Start 0070      cocienteEntero@denominator 0072                    _SerialBegin 059D  
                  _SerialWrite 0328             residuo@denominator 0072                        ___aldiv 062B  
          cocienteEntero@temp1 0076             __end_of_PWM1_Start 031D             __end_of_PWM2_Start 0328  
                      __ptext1 034B                        __ptext2 06D1                        __ptext3 059D  
                      __ptext4 04B0                        __ptext5 0362                        __ptext6 0462  
                      __ptext7 037B                        __ptext8 051F                        __ptext9 0328  
                      _pinMode 06D1                     delay@milis 0070               ___aldiv@dividend 0074  
                      _residuo 0362               ?_SerialAvailable 0070                        clrloop0 030B  
         end_of_initialization 07FC                    ?_analogRead 0070               ___aldiv@quotient 0032  
                    _PWM1_Init 039C                      _PWM2_Init 03DD                      _PORTBbits 0006  
                    _PORTCbits 0007                      _PORTDbits 0008                      _TRISBbits 0086  
                    _TRISCbits 0087                      _TRISDbits 0088   __end_of_configuracionInicial 0462  
      cocienteEntero@numerator 0070                  __pidataCOMMON 0302                 _cocienteEntero 037B  
                   ?_PWM1_Init 0036                     ?_PWM2_Init 0036            __size_of_analogRead 007E  
          start_initialization 07E7         __end_of_cocienteEntero 039C                    __pdataBANK0 0040  
                    ___latbits 0002                  __pcstackBANK0 0030                     pinMode@pin 0073  
              SerialWrite@data 0070                   ?_SerialBegin 0036                      __pnvBANK0 003C  
                 ?_SerialWrite 0070               residuo@numerator 0070                       ?___aldiv 0070  
                 SerialBegin@x 003A           _configuracionInicial 041E                ?_cocienteEntero 0070  
                  ??_PWM1_Init 0079                    ??_PWM2_Init 0079                       ?_pinMode 0070  
                     ?_residuo 0070                 __size_of_delay 004E                 __size_of_setup 0017  
              ___aldiv@divisor 0070                ___aldiv@counter 0030                   ??_analogRead 0072  
                    clear_ram0 030A          ?_configuracionInicial 0070                      _vectorOut 0025  
                   _ADCON0bits 001F             __end_of_analogRead 059D       __size_of_SerialAvailable 0007  
                     _Operator 002F                       _Terminal 002E               __size_of___aldiv 00A6  
             __size_of_pinMode 0116                       __ptext10 0303                       __ptext11 041E  
                     __ptext12 031D                       __ptext13 03DD                       __ptext14 0312  
                     __ptext15 039C                       __ptext16 062B               __size_of_residuo 0019  
                 residuo@temp1 0074                  __size_of_main 0015                  __size_of_loop 006F  
         __size_of_SerialBegin 008E                   PWM1_Init@fre 0036         ??_configuracionInicial 007D  
         __size_of_SerialWrite 000E                       _vectorIn 0020                   PWM2_Init@fre 0036  
             ??_cocienteEntero 0074              ??_SerialAvailable 0070                   ___aldiv@sign 0031  
                   _PWM1_Start 0312                     _PWM2_Start 031D  
